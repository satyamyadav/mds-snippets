{
  "Avatar All": {
    "prefix": "Avatar All",
    "description": "All",
    "body": [
      "import { Avatar } from '@innovaccer/design-system';\n    () => {\n  const appearance = 'primary';\n  const size = 'tiny';\n  const withTooltip = true;\n  const children = '';\n  const firstName = 'John';\n  const lastName = 'Doe';\n\n  const options = {\n    appearance,\n    withTooltip,\n    size,\n    firstName,\n    lastName,\n  };\n\n  return <Avatar {...options}>{children}</Avatar>;\n}\n    "
    ]
  },
  "Avatar": {
    "prefix": "Avatar",
    "description": "Size",
    "body": [
      "import { Text, Avatar } from '@innovaccer/design-system';\n    () => {\n  const weight = 'strong';\n\n  return (\n    <div className=\"d-flex\">\n      <div className=\"mr-9 d-flex flex-column\">\n        <Text weight={weight}>Regular</Text> <br />\n        <Avatar firstName=\"John\" lastName=\"Doe\" />\n      </div>\n      <div className=\"mr-9  d-flex flex-column\">\n        <Text weight={weight}>Tiny</Text> <br />\n        <Avatar firstName=\"John\" lastName=\"Doe\" size=\"tiny\" />\n      </div>\n    </div>\n  );\n}\n    "
    ]
  },
  "AvatarGroup All": {
    "prefix": "AvatarGroup All",
    "description": "All",
    "body": [
      "import { AvatarGroup } from '@innovaccer/design-system';\n    () => {\n  const list = [\n    {\n      firstName: 'John',\n      lastName: 'Doe',\n    },\n    {\n      firstName: 'Steven',\n      lastName: 'Packton',\n    },\n    {\n      firstName: 'Nancy',\n      lastName: 'Wheeler'\n    },\n    {\n      firstName: 'Monica',\n      lastName: 'Geller'\n    },\n    {\n      firstName: 'Arya',\n      lastName: 'Stark',\n    },\n    {\n      firstName: 'Rachel',\n      lastName: 'Green',\n    },\n    {\n      firstName: 'Walter',\n      lastName: 'Wheeler'\n    },\n  ];\n  return <AvatarGroup list={list} popoverOptions={{ dark: true, on: 'hover', position: 'bottom'}}/>;\n}\n    "
    ]
  },
  "AvatarGroup   Border Color": {
    "prefix": "AvatarGroup   Border Color",
    "description": "Border Color",
    "body": [
      "import { AvatarGroup } from '@innovaccer/design-system';\n    () => {\n  const list = [\n    {\n      firstName: 'John',\n      lastName: 'Doe',\n    },\n    {\n      firstName: 'Steven',\n      lastName: 'Packton',\n    },\n    {\n      firstName: 'Nancy',\n      lastName: 'Wheeler'\n    },\n    {\n      firstName: 'Monica',\n      lastName: 'Geller'\n    },\n  ];\n\n  return (\n    <div className=\"d-flex\">\n      <div className=\"mr-9\">\n        <AvatarGroup list={list.slice(0, 4)} borderColor='var(--secondary)' />\n      </div>\n      <div className=\"mr-9\">\n        <AvatarGroup list={list.slice(0, 4)} borderColor='var(--alert)' />\n      </div>\n      <div className=\"mr-9\">\n        <AvatarGroup list={list.slice(0, 4)} borderColor='var(--warning)' />\n      </div>\n      <div className=\"mr-9\">\n        <AvatarGroup list={list.slice(0, 4)} borderColor='var(--accent1)' />\n      </div>\n    </div>\n  )\n}\n    "
    ]
  },
  "AvatarGroup   Custom Popper": {
    "prefix": "AvatarGroup   Custom Popper",
    "description": "Custom Popper",
    "body": [
      "import { Avatar, Text, AvatarGroup } from '@innovaccer/design-system';\n    () => {\n  const list = [\n    {\n      firstName: 'John',\n      lastName: 'Doe',\n    },\n    {\n      firstName: 'Steven',\n      lastName: 'Packton',\n    },\n    {\n      firstName: 'Nancy',\n      lastName: 'Wheeler'\n    },\n    {\n      firstName: 'Monica',\n      lastName: 'Geller'\n    },\n    {\n      firstName: 'Arya',\n      lastName: 'Stark',\n    },\n    {\n      firstName: 'Rachel',\n      lastName: 'Green',\n    },\n    {\n      firstName: 'Walter',\n      lastName: 'Wheeler'\n    },\n  ];\n\n  const popperRenderer = (list) => {\n    const AvatarList = list.map((avatar, index) => {\n      const { firstName, lastName, appearance } = avatar;\n\n      return (\n        <div className=\"d-flex align-items-center mr-4 mb-4\" key={index}>\n          <Avatar\n            firstName={firstName}\n            lastName={lastName}\n            appearance={appearance}\n            className=\"mr-4\"\n            withTooltip={false}\n          />\n          <Text>{`${firstName} ${lastName}`}</Text>\n        </div>\n      )\n    });\n\n    return (\n      <div className=\"overflow-auto py-4 px-6\" style={{ maxHeight: '150px' }}>\n        {AvatarList}\n      </div>\n    )\n  };\n\n  return (\n    <AvatarGroup\n      list={list}\n      popoverOptions={{ dark: false, on: 'click', popperRenderer }}\n    />\n  );\n}\n    "
    ]
  },
  "Backdrop All": {
    "prefix": "Backdrop All",
    "description": "All",
    "body": [
      "import { Paragraph, Backdrop } from '@innovaccer/design-system';\n    () => {\n  const open = false;\n\n  const options = {\n    open,\n  };\n\n  return (\n    <div>\n      <Paragraph>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\n        magna aliqua.\n        <br />\n        Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n        <br />\n        Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. <br />\n        Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n        <br />\n      </Paragraph>\n      <Backdrop {...options} />\n    </div>\n  );\n}\n    "
    ]
  },
  "Badge": {
    "prefix": "Badge",
    "description": "Subtle",
    "body": [
      "import { Badge, Text } from '@innovaccer/design-system';\n    () => {\n  const ButtonSubtle = true;\n  const weight = 'strong';\n  const children = 'Badge';\n  const appearances = [\n    'primary',\n    'secondary',\n    'alert',\n    'warning',\n    'success',\n    'accent1',\n    'accent2',\n    'accent3',\n    'accent4',\n  ];\n\n  return (\n    <div className=\"d-flex\">\n      {appearances.map((appear, ind) => {\n        return (\n          <div key={ind} className=\"mr-9\">\n            <Badge appearance={appear} subtle={ButtonSubtle}>\n              {children}\n            </Badge>\n            <br />\n            <Text weight={weight}>{appear.charAt(0).toUpperCase() + appear.slice(1)}</Text>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n    "
    ]
  },
  "Badge All": {
    "prefix": "Badge All",
    "description": "All",
    "body": [
      "import { Badge } from '@innovaccer/design-system';\n    () => {\n  const appearance = 'primary';\n  const subtle = false;\n  const children = 'Badge';\n\n  return (\n    <Badge appearance={appearance} subtle={subtle}>\n      {children}\n    </Badge>\n  );\n}\n    "
    ]
  },
  "Breadcrumbs   Less Than 4 Levels": {
    "prefix": "Breadcrumbs   Less Than 4 Levels",
    "description": "Less Than 4 Levels",
    "body": [
      "import { Breadcrumbs } from '@innovaccer/design-system';\n    () => {\n  const list = [\n    {\n      label: 'Level 0',\n      link: '/level0'\n    },\n    {\n      label: 'Level 1',\n      link: '/level1'\n    },\n    {\n      label: 'Level 2',\n      link: '/level2'\n    },\n    {\n      label: 'Level 3',\n      link: '/level3'\n    }\n  ];\n\n  return (\n    <div className=\"bg-secondary-lightest\">\n      <Breadcrumbs\n        list={list}\n        onClick={link => console.log(`on-click: ${link}`)}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "Breadcrumbs   More Than 4 Levels": {
    "prefix": "Breadcrumbs   More Than 4 Levels",
    "description": "More Than 4 Levels",
    "body": [
      "import { Breadcrumbs } from '@innovaccer/design-system';\n    () => {\n  const list = [\n    {\n      label: 'Level 0',\n      link: '/level0'\n    },\n    {\n      label: 'Level 1',\n      link: '/level1'\n    },\n    {\n      label: 'Level 2',\n      link: '/level2'\n    },\n    {\n      label: 'Level 3',\n      link: '/level3'\n    },\n    {\n      label: 'Level 4',\n      link: '/level4'\n    },\n  ];\n\n  return (\n    <div className=\"bg-secondary-lightest\">\n      <Breadcrumbs\n        list={list}\n        onClick={link => console.log(`on-click: ${link}`)}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "Button All": {
    "prefix": "Button All",
    "description": "All",
    "body": [
      "import { Button } from '@innovaccer/design-system';\n    () => {\n  const type = 'button';\n\n  const appearance = 'basic';\n\n  const size = 'large';\n\n  const disabled = false;\n\n  const expanded = false;\n\n  const loading = false;\n\n  const icon = '';\n\n  const iconAlign = 'right';\n\n  const children = 'Open';\n\n  return (\n    <Button\n      onClick={action('button-clicked')}\n      onMouseEnter={action('mouse-enter')}\n      onMouseLeave={action('mouse-leave')}\n      type={type}\n      appearance={appearance}\n      size={size}\n      expanded={expanded}\n      disabled={disabled}\n      loading={loading}\n      icon={icon}\n      iconAlign={iconAlign}\n      aria-label=\"Open\"\n    >\n      {children}\n    </Button>\n  );\n}\n    "
    ]
  },
  "Button": {
    "prefix": "Button",
    "description": "Transparent",
    "body": [
      "import { Button, Text } from '@innovaccer/design-system';\n    () => {\n  const disabled = false;\n  const expanded = false;\n  const loading = false;\n  const children = 'Open';\n\n  return (\n    <div className=\"d-flex w-25 justify-content-between\">\n      <div className=\"mr-9\">\n        <Button\n          onClick={action('button-clicked')}\n          onMouseEnter={action('mouse-enter')}\n          onMouseLeave={action('mouse-leave')}\n          appearance={'transparent'}\n          size={'regular'}\n          expanded={expanded}\n          disabled={disabled}\n          loading={loading}\n          aria-label=\"Open\"\n        >\n          {children}\n        </Button>\n        <br />\n        <Text weight=\"strong\">Default</Text>\n      </div>\n      <div className=\"mr-9\">\n        <Button\n          onClick={action('button-clicked')}\n          onMouseEnter={action('mouse-enter')}\n          onMouseLeave={action('mouse-leave')}\n          appearance={'transparent'}\n          size={'regular'}\n          expanded={expanded}\n          disabled={true}\n          loading={loading}\n          aria-label=\"Open\"\n        >\n          {children}\n        </Button>\n        <br />\n        <Text weight=\"strong\">Disabled</Text>\n      </div>\n      <div className=\"mr-9\">\n        <Button\n          onClick={action('button-clicked')}\n          onMouseEnter={action('mouse-enter')}\n          onMouseLeave={action('mouse-leave')}\n          appearance={'transparent'}\n          size={'regular'}\n          expanded={expanded}\n          disabled={disabled}\n          loading={true}\n          aria-label=\"loading\"\n        >\n          {''}\n        </Button>\n        <br />\n        <Text weight=\"strong\">Loading</Text>\n      </div>\n      <div className=\"mr-9\">\n        <Button\n          onClick={action('button-clicked')}\n          onMouseEnter={action('mouse-enter')}\n          onMouseLeave={action('mouse-leave')}\n          appearance={'transparent'}\n          size={'regular'}\n          selected={true}\n          aria-label=\"Open\"\n        >\n          {children}\n        </Button>\n        <br />\n        <Text weight=\"strong\">Selected</Text>\n      </div>\n      <div className=\"mr-9\">\n        <Button\n          onClick={action('button-clicked')}\n          onMouseEnter={action('mouse-enter')}\n          onMouseLeave={action('mouse-leave')}\n          appearance={'transparent'}\n          size={'regular'}\n          selected={true}\n          icon=\"events\"\n          aria-label=\"Events\"\n        />\n        <br />\n        <Text weight=\"strong\">Selected Icon</Text>\n      </div>\n    </div>\n  );\n}\n    "
    ]
  },
  "Calendar All": {
    "prefix": "Calendar All",
    "description": "All",
    "body": [
      "import { Card, Calendar } from '@innovaccer/design-system';\n    () => {\n  const monthsInView = 1;\n\n  const dateValue = new Date('Jan 11 2021');\n\n  const startDate = new Date('Jan 15 2021');\n\n  const endDate = new Date('Jan 20 2021');\n\n  const view = 'date';\n\n  const rangePicker = false;\n\n  const rangeLimit = 0;\n\n  const firstDayOfWeek = 'saturday';\n\n  const disabledBefore = new Date('Jan 20 2015');\n\n  const disabledAfter = new Date('Jan 20 2028');\n\n  const jumpView = true;\n\n  const yearNav = -1;\n\n  const monthNav = -1;\n\n  const attr = {};\n  if (disabledBefore) attr.disabledBefore = disabledBefore;\n  if (disabledAfter) attr.disabledAfter = disabledAfter;\n  if (rangeLimit) attr.rangeLimit = rangeLimit;\n  if (yearNav !== -1) attr.yearNav = yearNav;\n  if (monthNav !== -1) attr.monthNav = monthNav;\n\n  // we redefine this function here because in storybook.json we do not get imported functions.\n\n  const isValid = (validators, ...value) => {\n    const iterator = Array.isArray(validators) ? validators : [validators];\n\n    return iterator.every((validator) => validator(...value));\n  };\n\n  const translateToDate = (format, val, validators) => {\n    if (isValid(validators, val, format)) {\n      const separator = format.includes('/') ? '/' : '-';\n\n      let year = -1,\n        month = -1,\n        date = -1;\n      const v = val.split(separator);\n      format.split(separator).forEach((f, i) => {\n        switch (f) {\n          case 'mm':\n            month = +v[i] - 1;\n            break;\n          case 'yyyy':\n            year = +v[i];\n            break;\n          case 'dd':\n            date = +v[i];\n            break;\n        }\n      });\n      const d = convertToDate({ year, month, date });\n      return d;\n    } else {\n      return undefined;\n    }\n  };\n\n  const convertToDate = (d, format, validators) => {\n    let dateVal;\n\n    if (d) {\n      if (typeof d === 'number') {\n        dateVal = new Date(d);\n      } else if (typeof d === 'string') {\n        return format ? translateToDate(format, d, validators) : undefined;\n      } else if (!(d instanceof Date)) {\n        const { year, month, date } = d;\n        dateVal = new Date(year, month, date, 0, 0, 0);\n      } else {\n        dateVal = d;\n      }\n    }\n    return dateVal;\n  };\n\n  return (\n    <Card className=\"d-inline-flex\" shadow=\"light\">\n      <Calendar\n        monthsInView={monthsInView}\n        rangePicker={rangePicker}\n        jumpView={jumpView}\n        date={convertToDate(dateValue)}\n        startDate={convertToDate(startDate)}\n        endDate={convertToDate(endDate)}\n        onDateChange={(currDate) => action(`on date change : ${currDate}`)()}\n        onRangeChange={(sDate, eDate) => action(`on range change: ${sDate} - ${eDate}`)()}\n        view={view}\n        firstDayOfWeek={firstDayOfWeek}\n        {...attr}\n      />\n    </Card>\n  );\n}\n    "
    ]
  },
  "Calendar": {
    "prefix": "Calendar",
    "description": "With Events",
    "body": [
      "import { Heading, Card, Calendar } from '@innovaccer/design-system';\n    () => {\n  return (\n    <>\n      <div className=\"mt-8\">\n        <Heading>size: small with events</Heading>\n        <div className=\"d-flex\">\n          <div className=\"mr-8\">\n            <Card className=\"d-inline-flex\" shadow=\"light\">\n              <Calendar events={{ '12/21/2021': true }} date={new Date('12/21/2021')} size={'small'} />\n            </Card>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"mt-8\">\n        <Heading>size: large with events</Heading>\n        <div className=\"d-flex\">\n          <div className=\"mr-8\">\n            <Card className=\"d-inline-flex\" shadow=\"light\">\n              <Calendar events={{ '12/20/2021': true }} date={new Date('12/21/2021')} size={'large'} />\n            </Card>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n    "
    ]
  },
  "Caption": {
    "prefix": "Caption",
    "description": "All",
    "body": [
      "import {  } from '@innovaccer/design-system';\n    () => <></>\n    "
    ]
  },
  "Card All": {
    "prefix": "Card All",
    "description": "All",
    "body": [
      "import { Card, CardHeader, Text, CardBody, CardFooter, Button, CardSubdued } from '@innovaccer/design-system';\n    () => {\n  const shadow = 'default';\n\n  return (\n    <>\n      <Card shadow={shadow} className=\"w-50\" style={{ height: '250px' }}>\n        <CardHeader>\n          <Text weight=\"strong\" size=\"large\">\n            Card Heading\n          </Text>\n        </CardHeader>\n        <CardBody>\n          <div>Card Body</div>\n        </CardBody>\n        <CardFooter className=\"justify-content-end\">\n          <>\n            <Button appearance=\"basic\">Cancel</Button>\n            <Button appearance=\"primary\" className=\"ml-4\">\n              Submit\n            </Button>\n          </>\n        </CardFooter>\n      </Card>\n      <Card className=\"mt-5 w-50\">\n        <CardHeader>\n          <Text weight=\"strong\" size=\"large\">\n            Card Heading\n          </Text>\n        </CardHeader>\n        <CardBody>\n          <div>Card Body</div>\n        </CardBody>\n        <CardSubdued border=\"top\">Subdued section.</CardSubdued>\n      </Card>\n    </>\n  );\n}\n    "
    ]
  },
  "Card Card Within A Card": {
    "prefix": "Card Card Within A Card",
    "description": "Card Within A Card",
    "body": [
      "import { Row, Column, Card, CardHeader, Heading, CardBody, Text, Badge } from '@innovaccer/design-system';\n    () => {\n  return (\n    <Row>\n      <Column size=\"8\">\n        <Card>\n          <CardHeader>\n            <Heading size=\"s\">Managed Plans</Heading>\n          </CardHeader>\n          <CardBody>\n            <Card shadow=\"none\" className=\"mb-6\">\n              <CardHeader className=\"d-flex justify-content-between\">\n                <Text weight=\"strong\">PRIMARY</Text>\n                <Badge appearance=\"accent4\">ACTIVE</Badge>\n              </CardHeader>\n              <CardBody>\n                <Text appearance=\"disabled\">MSSP - Track 3</Text>\n                <br />\n                <Text small={true}>Medicare</Text>\n                <br />\n                <div className=\"py-6\">\n                  <Text small={true} appearance=\"disabled\">\n                    Subscriber\n                  </Text>\n                  <br />\n                  <Text appearance=\"disabled\">LAWSON, JOY (Self)</Text>\n                  <br />\n                  <Text weight=\"medium\">ZGP123456789</Text>\n                </div>\n                <Row className=\"py-4 border-top\">\n                  <Column>\n                    <Text appearance=\"disabled\" small={true}>\n                      Last attr:\n                    </Text>\n                    <Text small={true} className=\"ml-3\">\n                      04/19\n                    </Text>\n                  </Column>\n                  <Column>\n                    <Text appearance=\"disabled\" small={true}>\n                      Payer ID:\n                    </Text>\n                    <Text small={true} className=\"ml-3\">\n                      001\n                    </Text>\n                  </Column>\n                </Row>\n              </CardBody>\n            </Card>\n\n            <Card shadow=\"none\" className=\"mb-6\">\n              <CardHeader className=\"d-flex justify-content-between\">\n                <Text weight=\"strong\" appearance=\"disabled\">\n                  SECONDARY\n                </Text>\n                <Badge>INACTIVE</Badge>\n              </CardHeader>\n              <CardBody>\n                <Text appearance=\"disabled\">Community Plan</Text>\n                <br />\n                <Text small={true}>Blue Shield of California</Text>\n                <br />\n                <div className=\"py-6\">\n                  <Text small={true} appearance=\"disabled\">\n                    Subscriber\n                  </Text>\n                  <br />\n                  <Text appearance=\"disabled\">LAWSON, MICHAEL (Spouse)</Text>\n                  <br />\n                  <Text weight=\"medium\">HKA987654321</Text>\n                </div>\n                <Row className=\"py-4 border-top\">\n                  <Column>\n                    <Text appearance=\"disabled\" small={true}>\n                      Last attr:\n                    </Text>\n                    <Text small={true} className=\"ml-3\">\n                      11/18\n                    </Text>\n                  </Column>\n                  <Column>\n                    <Text appearance=\"disabled\" small={true}>\n                      Payer ID:\n                    </Text>\n                    <Text small={true} className=\"ml-3\">\n                      042\n                    </Text>\n                  </Column>\n                </Row>\n              </CardBody>\n            </Card>\n          </CardBody>\n        </Card>\n      </Column>\n    </Row>\n  );\n}\n    "
    ]
  },
  "Card Default Card": {
    "prefix": "Card Default Card",
    "description": "Default Card",
    "body": [
      "import { Card } from '@innovaccer/design-system';\n    () => {\n  return (\n    <Card>\n      <div className=\"p-8\" />\n    </Card>\n  );\n}\n    "
    ]
  },
  "Card Empty Card": {
    "prefix": "Card Empty Card",
    "description": "Empty Card",
    "body": [
      "import { Row, Column, Card, CardHeader, Heading, CardBody, EmptyState, Button } from '@innovaccer/design-system';\n    () => {\n  return (\n    <Row>\n      <Column size=\"8\">\n        <Card>\n          <CardHeader>\n            <Heading size=\"s\">Daily progress</Heading>\n          </CardHeader>\n          <CardBody>\n            <EmptyState\n              title=\"Unable to fetch data\"\n              description=\"Sorry there was a technical issue while getting this data. Please try again.\"\n              imageSrc={image}\n              size=\"small\"\n              className=\"pb-6\"\n            >\n              <Button icon=\"refresh\" iconAlign=\"left\" className=\"mt-3\">\n                Reload\n              </Button>\n            </EmptyState>\n          </CardBody>\n        </Card>\n      </Column>\n    </Row>\n  );\n}\n    "
    ]
  },
  "Card Flat": {
    "prefix": "Card Flat",
    "description": "Flat",
    "body": [
      "import { Card } from '@innovaccer/design-system';\n    () => {\n  return (\n    <Card shadow=\"none\">\n      <div className=\"p-8\" />\n    </Card>\n  );\n}\n    "
    ]
  },
  "Card": {
    "prefix": "Card",
    "description": "Highlighting A Section",
    "body": [
      "import { Row, Column, Card, CardHeader, Heading, CardBody, Paragraph, Radio, Text, CardSubdued, StatusHint } from '@innovaccer/design-system';\n    () => {\n  return (\n    <Row>\n      <Column size=\"7\">\n        <Card>\n          <CardHeader>\n            <Heading size=\"s\">Set timing</Heading>\n          </CardHeader>\n          <CardBody>\n            <Paragraph>\n              After the campaign starts, the outreach attempt will be made with the recipients according to the sender's\n              preferred timings.\n            </Paragraph>\n            <Row>\n              <Column size=\"12\" className=\"pt-4\">\n                <Radio label=\"Send now\" name=\"gender\" value=\"Checkbox\" defaultChecked={true} />\n                <Text small={true} appearance=\"disabled\" className=\"ml-7\">\n                  Campaign will start immediately\n                </Text>\n              </Column>\n              <Column size=\"12\" className=\"py-4\">\n                <Radio label=\"Schedule for later\" name=\"gender\" value=\"Checkbox\" />\n                <Text small={true} appearance=\"disabled\" className=\"ml-7\">\n                  Campaign will not start immediately\n                </Text>\n              </Column>\n            </Row>\n          </CardBody>\n\n          <CardSubdued border=\"top\">\n            <Text weight=\"strong\" small={true}>\n              SELECTED RECIPIENTS\n            </Text>\n            <div className=\"pt-6\">\n              <StatusHint appearance=\"success\">437 wil receive the message.</StatusHint>\n              <StatusHint appearance=\"alert\">42 have opted out or never agreed to receive messages.</StatusHint>\n            </div>\n          </CardSubdued>\n        </Card>\n      </Column>\n    </Row>\n  );\n}\n    "
    ]
  },
  "Card Scrollable Content": {
    "prefix": "Card Scrollable Content",
    "description": "Scrollable Content",
    "body": [
      "import { Paragraph, Text, Card, CardHeader, Heading, List } from '@innovaccer/design-system';\n    \n() => {\n\n  const data = [\n  {\n    \"data\": {\n      \"title\": \"Reminder for due lab tests\",\n      \"subTitle\": \"ENG. +1 Hi [recipient.name]! Your (test) is overdue. Please get in touch with [recipient.PCPI...\"\n    }\n  },\n  {\n    \"data\": {\n      \"title\": \"Reminder for due lab tests\",\n      \"subTitle\": \"ENG. +1 Hi [recipient.name]! Your (test) is overdue. Please get in touch with [recipient.PCPI...\"\n    }\n  },\n  {\n    \"data\": {\n      \"title\": \"Reminder for upcoming lab test\",\n      \"subTitle\": \"ENG. «1 Hi [recipient.name]! Your [test] is scheduled for [test.date]. Please get in...\"\n    }\n  },\n  {\n    \"data\": {\n      \"title\": \"Reminder for due lab tests\",\n      \"subTitle\": \"ENG -1 Hi [recipient.name] Your [test] is overdue. Please get in touch with [recipiert.PCP}...\"\n    }\n  },\n  {\n    \"data\": {\n      \"title\": \"Reminder for due lab tests\",\n      \"subTitle\": \"ENG. +1 Hi [recipient.name] Your (test] is overdue. Please get in touch with (recipient. PCP}...\"\n    }\n  },\n  {\n    \"data\": {\n      \"title\": \"Reminder for due lab tests\",\n      \"subTitle\": \"ENG. +1 Hi [recipient.name]! Your (test) is overdue. Please get in touch with [recipient.PCPI...\"\n    }\n  },\n  {\n    \"data\": {\n      \"title\": \"Reminder for due lab tests\",\n      \"subTitle\": \"ENG. +1 Hi [recipient.name]! Your (test) is overdue. Please get in touch with [recipient.PCPI...\"\n    }\n  },\n  {\n    \"data\": {\n      \"title\": \"Reminder for upcoming lab test\",\n      \"subTitle\": \"ENG. «1 Hi [recipient.name]! Your [test] is scheduled for [test.date]. Please get in...\"\n    }\n  },\n  {\n    \"data\": {\n      \"title\": \"Reminder for due lab tests\",\n      \"subTitle\": \"ENG -1 Hi [recipient.name] Your [test] is overdue. Please get in touch with [recipiert.PCP}...\"\n    }\n  },\n  {\n    \"data\": {\n      \"title\": \"Reminder for due lab tests\",\n      \"subTitle\": \"ENG. +1 Hi [recipient.name] Your (test] is overdue. Please get in touch with (recipient. PCP}...\"\n    }\n  }\n];\n\n  const schema = [\n    {\n      width: '100%',\n      name: 'data',\n      displayName: '',\n      cellRenderer: (props) => {\n        return (\n          <>\n          <Paragraph>\n            <Text weight=\"strong\">\n              {props.data.data.title}\n            </Text>\n            <br />\n            <Text>\n              {props.data.data.subTitle}\n            </Text>\n\n          </Paragraph>\n          </>\n        );\n      }\n    }\n  ];\n\n  return (\n    <div>\n      <Card className=\"\">\n        <CardHeader>\n          <Heading size=\"s\">Use a template</Heading>\n        </CardHeader>\n        <div style={{ height: '350px' }}>\n          <List\n            data={data}\n            schema={schema}\n            withHeader={true}\n            headerOptions={{\n              withSearch: true,\n              dynamicColumn: false\n            }}\n            withPagination={true}\n            pageSize={5}\n          />\n        </div>\n      </Card>\n    </div>\n  );\n};\n\n    "
    ]
  },
  "CardSubdued": {
    "prefix": "CardSubdued",
    "description": "Subdued",
    "body": [
      "import { CardSubdued } from '@innovaccer/design-system';\n    () => {\n  return (\n    <CardSubdued>\n      <div className=\"p-8\" />\n    </CardSubdued>\n  );\n}\n    "
    ]
  },
  "Chat Chat Message": {
    "prefix": "Chat Chat Message",
    "description": "Chat Message",
    "body": [
      "import { ChatMessage } from '@innovaccer/design-system';\n    () => {\n  const type = 'incoming';\n  const statusType = 'sent';\n  const isTyping = false;\n  const message = 'Hello, there.';\n  const typingText = 'Typing..';\n  const failedMessage = 'Click to retry';\n  const sendingMessage = 'Sending';\n\n  const options = {\n    type,\n    isTyping,\n    typingText,\n    failedMessage,\n    sendingMessage,\n    text: message,\n    statusOptions: { type: statusType, time: '10:11 AM' },\n  };\n\n  return (\n    <div className=\"w-25\">\n      <ChatMessage {...options} />\n    </div>\n  );\n}\n    "
    ]
  },
  "Checkbox All": {
    "prefix": "Checkbox All",
    "description": "All",
    "body": [
      "import { Checkbox } from '@innovaccer/design-system';\n    () => {\n  const size = 'tiny';\n\n  const label = 'Checkbox';\n\n  const [checked, setChecked] = React.useState(false);\n\n  const [indeterminate, setIndeterminate] = React.useState(false);\n\n  const disabled = false;\n\n  const onChangeHandler = (event) => {\n    setChecked(!checked);\n    setIndeterminate(!indeterminate);\n    return action(`onChange: ${event.target.checked}`)();\n  };\n\n  return (\n    <Checkbox\n      checked={checked}\n      indeterminate={indeterminate}\n      disabled={disabled}\n      size={size}\n      label={label}\n      onChange={onChangeHandler}\n    />\n  );\n}\n    "
    ]
  },
  "Checkbox": {
    "prefix": "Checkbox",
    "description": "Uncontrolled Checkbox",
    "body": [
      "import { Checkbox } from '@innovaccer/design-system';\n    () => {\n  const handleParentChange = (event) => {\n    return action(`onChange: ${event.target.checked}`)();\n  };\n\n  return (\n    <div>\n      <Checkbox defaultChecked={true} label={'Innovaccer'} onChange={handleParentChange} value={'Innovaccer'} />\n    </div>\n  );\n}\n    "
    ]
  },
  "Checkbox Nested Checkboxes": {
    "prefix": "Checkbox Nested Checkboxes",
    "description": "Nested Checkboxes",
    "body": [
      "import { Checkbox } from '@innovaccer/design-system';\n    () => {\n  const labels = ['Diabetes Eye Exam', 'HbA1c Test in last 12 months', 'Falls Risk Assessment'];\n\n  const childArray = [true, true, false];\n\n  const [checked, setChecked] = React.useState(childArray);\n  const [parentStatus, setParentStatus] = React.useState({ checked: false, indeterminate: true });\n\n  const handleParentChange = (event) => {\n    const updatedArray = [...childArray].fill(event.target.checked);\n    setChecked(updatedArray);\n    setParentStatus({ checked: event.target.checked, indeterminate: event.target.indeterminate });\n  };\n\n  const handleChildChange = (event, index) => {\n    const updateCheck = [...checked];\n    updateCheck[index] = event.target.checked;\n    const totalCount = labels.length;\n    const countT = updateCheck.filter(Boolean).length;\n    const status = countT < totalCount;\n    const obj = (countT > 0) ? { checked: !status, indeterminate: status } : { checked: !status, indeterminate: false };\n    setChecked(updateCheck);\n    setParentStatus(obj);\n  };\n\n  return (\n    <div>\n      <Checkbox\n        checked={parentStatus.checked}\n        indeterminate={parentStatus.indeterminate}\n        label={'Measures'}\n        onChange={handleParentChange}\n        value={'Measures'}\n      />\n      <div style={{\n          'flex-direction': 'column',\n        }} className=\"d-flex pl-7\">\n        {\n          labels.map((label, ind) => {\n            return (\n              <Checkbox\n                key={`checkbox-${ind}`}\n                label={label}\n                checked={checked[ind]}\n                value={label}\n                onChange={c => handleChildChange(c, ind)}\n                className=\"mt-4\"\n              />\n            );\n          })\n        }\n      </div>\n    </div>\n  );\n}\n    "
    ]
  },
  "Checkbox   Checkbox List": {
    "prefix": "Checkbox   Checkbox List",
    "description": "Checkbox List",
    "body": [
      "import { Checkbox } from '@innovaccer/design-system';\n    () => {\n  const labels = ['InConnect', 'InGraph', 'InReport'];\n\n  const childArray = Array(labels.length).fill(false);\n  const [checked, setChecked] = React.useState(childArray);\n  const [parentStatus, setParentStatus] = React.useState({ checked: false, indeterminate: false });\n\n  const handleParentChange = (event) => {\n    const updatedArray = [...childArray].fill(event.target.checked);\n    setChecked(updatedArray);\n    setParentStatus({ checked: event.target.checked, indeterminate: event.target.indeterminate });\n  };\n\n  const handleChildChange = (event, index) => {\n    const updateCheck = [...checked];\n    updateCheck[index] = event.target.checked;\n    const totalCount = labels.length;\n    const countT = updateCheck.filter(Boolean).length;\n    const status = countT < totalCount;\n    const obj = (countT > 0) ? { checked: !status, indeterminate: status } : { checked: !status, indeterminate: false };\n    setChecked(updateCheck);\n    setParentStatus(obj);\n  };\n\n  return (\n    <div>\n      <Checkbox\n        checked={parentStatus.checked}\n        indeterminate={parentStatus.indeterminate}\n        label={'Innovaccer'}\n        onChange={handleParentChange}\n        value={'Innovaccer'}\n      />\n      <div style={{\n          'flex-direction': 'column',\n        }} className=\"d-flex pl-7\">\n        {\n          labels.map((label, ind) => {\n            return (\n              <Checkbox\n                key={`checkbox-${ind}`}\n                label={label}\n                checked={checked[ind]}\n                value={label}\n                onChange={c => handleChildChange(c, ind)}\n              />\n            );\n          })\n        }\n      </div>\n    </div>\n  );\n}\n    "
    ]
  },
  "Checkbox   Controlled Checkbox": {
    "prefix": "Checkbox   Controlled Checkbox",
    "description": "Controlled Checkbox",
    "body": [
      "import { Checkbox } from '@innovaccer/design-system';\n    () => {\n  const [checked, setChecked] = React.useState(false);\n\n  const handleParentChange = (event) => {\n    const updatedChecked = event.target.checked;\n    this.window.setTimeout(() => {\n      setChecked(updatedChecked);\n    }, 2000);\n  };\n\n  return (\n      <Checkbox\n        checked={checked}\n        label={'Innovaccer'}\n        onChange={handleParentChange}\n        value={'Innovaccer'}\n      />\n  );\n}\n    "
    ]
  },
  "Checkbox With Help Text": {
    "prefix": "Checkbox With Help Text",
    "description": "With Help Text",
    "body": [
      "import { Checkbox } from '@innovaccer/design-system';\n    () => {\n  return (\n    <Checkbox\n      label={'Guardian'}\n      helpText={'A member legally responsible for the care of the patient.'}\n      className=\"w-50\"\n    />\n  );\n}\n    "
    ]
  },
  "Chip All": {
    "prefix": "Chip All",
    "description": "All",
    "body": [
      "import { Chip } from '@innovaccer/design-system';\n    () => {\n  const type = 'selection';\n\n  const label = 'Chip Label';\n\n  const icon = 'assessment';\n\n  const disabled = false;\n\n  let clearButton;\n  if (type !== 'action') {\n    clearButton = true;\n  }\n\n  let selected;\n  if (type === 'selection') {\n    selected = false;\n  }\n  return (\n    <Chip\n      icon={icon}\n      label={label}\n      clearButton={clearButton}\n      disabled={disabled}\n      type={type}\n      onClose={action(`onClose: ${label}`)}\n      onClick={action(`onClick: ${label}`)}\n      selected={selected}\n      name={'chip'}\n    />\n  );\n}\n    "
    ]
  },
  "Chip": {
    "prefix": "Chip",
    "description": "Types",
    "body": [
      "import { Chip, Text } from '@innovaccer/design-system';\n    () => {\n  const types = ['action', 'selection', 'input'];\n  const icon = 'assessment';\n  const label = 'ChipLabel';\n  const clearButton = true;\n  const disabled = false;\n  const selected = false;\n  return (\n    <div className=\"d-flex\">\n      {types.map((type, ind) => {\n        return (\n          <div key={ind} className=\"mr-9\">\n            <Chip\n              icon={icon}\n              label={label}\n              clearButton={clearButton}\n              disabled={disabled}\n              type={type}\n              onClose={action(`onClose: ${label}`)}\n              onClick={action(`onClick: ${label}`)}\n              selected={selected}\n              name={'chip'}\n            />\n            <br />\n            <Text weight=\"strong\">{type.charAt(0).toUpperCase() + type.slice(1)}</Text>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n    "
    ]
  },
  "ChipGroup All": {
    "prefix": "ChipGroup All",
    "description": "All",
    "body": [
      "import { ChipGroup } from '@innovaccer/design-system';\n    () => {\n  const type = ['action', 'input', 'selection'];\n  const list = [\n    {\n      label: 'Action',\n      icon: 'assessment',\n      disabled: false,\n      type: type[0],\n      name: '1',\n    },\n    {\n      label: 'Input',\n      icon: 'assessment',\n      clearButton: true,\n      disabled: false,\n      type: type[1],\n      name: '2',\n    },\n    {\n      label: 'Selection',\n      icon: 'assessment',\n      clearButton: true,\n      disabled: false,\n      type: type[2],\n      selected: true,\n      name: '3',\n    },\n    {\n      label: 'Selection',\n      icon: 'assessment',\n      clearButton: true,\n      disabled: false,\n      type: type[2],\n      name: '4',\n    },\n  ];\n\n  return <ChipGroup onClose={action(`onClose event`)} onClick={action(`onClick event`)} list={list} />;\n}\n    "
    ]
  },
  "ChipInput All": {
    "prefix": "ChipInput All",
    "description": "All",
    "body": [
      "import { ChipInput } from '@innovaccer/design-system';\n    () => {\n  const allowDuplicates = false;\n  const placeholder = 'Add value';\n  const disabled = false;\n\n  return (\n    <ChipInput\n      allowDuplicates={allowDuplicates}\n      placeholder={placeholder}\n      disabled={disabled}\n      chipOptions={{ clearButton: true }}\n    />\n  );\n}\n    "
    ]
  },
  "ChipInput Chips In Single Line": {
    "prefix": "ChipInput Chips In Single Line",
    "description": "Chips In Single Line",
    "body": [
      "import { Label, ChipInput } from '@innovaccer/design-system';\n    () => {\n  const [value, setValue] = React.useState(['Anyone', 'Person with disability']);\n\n  return (\n    <>\n      <Label withInput={true}>Population Focus</Label>\n      <ChipInput\n        value={value}\n        chipOptions={{ clearButton: true }}\n        onChange={setValue}\n      />\n    </>\n  );\n}\n    "
    ]
  },
  "ChipInput Chips Wrapped To Next Line": {
    "prefix": "ChipInput Chips Wrapped To Next Line",
    "description": "Chips Wrapped To Next Line",
    "body": [
      "import { Label, ChipInput } from '@innovaccer/design-system';\n    () => {\n  const [value, setValue] = React.useState(\n    ['Anyone', 'Person with disability', 'Retired person from the armed forces']\n  );\n\n  return (\n    <div style={{ width: '320px' }}>\n      <Label withInput={true}>Population Focus</Label>\n      <ChipInput\n        value={value}\n        chipOptions={{ clearButton: true }}\n        onChange={setValue}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "ChipInput   Controlled": {
    "prefix": "ChipInput   Controlled",
    "description": "Controlled",
    "body": [
      "import { ChipInput } from '@innovaccer/design-system';\n    () => {\n  const [value, setValue] = React.useState(['1024', '80']);\n\n  return (\n    <ChipInput\n      value={value}\n      placeholder=\"Add value\"\n      chipOptions={{ clearButton: true }}\n      onChange={setValue}\n    />\n  );\n}\n    "
    ]
  },
  "ChipInput   Disabled": {
    "prefix": "ChipInput   Disabled",
    "description": "Disabled",
    "body": [
      "import { ChipInput } from '@innovaccer/design-system';\n    () => {\n  const [value, setValue] = React.useState(['1024', '80']);\n\n  return (\n    <ChipInput\n      value={value}\n      chipOptions={{ clearButton: true }}\n      onChange={setValue}\n      disabled={true}\n    />\n  );\n}\n    "
    ]
  },
  "ChoiceList All": {
    "prefix": "ChoiceList All",
    "description": "All",
    "body": [
      "import { ChoiceList } from '@innovaccer/design-system';\n    () => {\n  const label = 'Gender';\n  const gender = [\n    { label: 'Male', name: 'gender', value: 'Male' },\n    { label: 'Female', name: 'gender', value: 'Female' },\n    { label: 'Other', name: 'gender', value: 'Other' },\n  ];\n\n  return <ChoiceList choices={gender} title={label} onChange={() => {}} />;\n}\n    "
    ]
  },
  "ChoiceList Alignment": {
    "prefix": "ChoiceList Alignment",
    "description": "Alignment",
    "body": [
      "import { ChoiceList } from '@innovaccer/design-system';\n    () => {\n  const label = 'Gender';\n  const alignmentHorizontal = 'horizontal';\n  const gender = [\n    { label: 'Male', name: 'gender', value: 'Male' },\n    { label: 'Female', name: 'gender', value: 'Female' },\n    { label: 'Other', name: 'gender', value: 'Other' },\n  ];\n  const alignmentVertical = 'vertical';\n  const allGender = [\n    { label: 'Male', name: 'allGender', value: 'Male' },\n    { label: 'Female', name: 'allGender', value: 'Female' },\n    { label: 'Other', name: 'allGender', value: 'Other' },\n  ];\n\n  return (\n    <>\n      <ChoiceList choices={gender} title={label} alignment={alignmentHorizontal} onChange={() => {}} />\n      <div className=\"mt-8\">\n        <ChoiceList choices={allGender} title={label} alignment={alignmentVertical} onChange={() => {}} />\n      </div>\n    </>\n  );\n}\n    "
    ]
  },
  "ChoiceList Allow Multiple": {
    "prefix": "ChoiceList Allow Multiple",
    "description": "Allow Multiple",
    "body": [
      "import { ChoiceList } from '@innovaccer/design-system';\n    () => {\n  const label = 'Days';\n  const alignment = 'horizontal';\n  const days = [\n    { label: 'Mon', name: 'days', value: 'mon' },\n    { label: 'Tue', name: 'days', value: 'tue' },\n    { label: 'Wed', name: 'days', value: 'wed' },\n    { label: 'Thu', name: 'days', value: 'thu' },\n    { label: 'Fri', name: 'days', value: 'fri' },\n    { label: 'Sat', name: 'days', value: 'sat' },\n    { label: 'Sun', name: 'days', value: 'sun' },\n  ];\n\n  return <ChoiceList choices={days} title={label} alignment={alignment} allowMultiple={true} onChange={() => {}} />;\n}\n    "
    ]
  },
  "ChoiceList Controlled": {
    "prefix": "ChoiceList Controlled",
    "description": "Controlled",
    "body": [
      "import { ChoiceList } from '@innovaccer/design-system';\n    () => {\n  const label = 'Gender';\n  const alignmentHorizontal = 'horizontal';\n  const days = [\n    { label: 'Mon', name: 'days', value: 'mon' },\n    { label: 'Tue', name: 'days', value: 'tue' },\n    { label: 'Wed', name: 'days', value: 'wed' },\n    { label: 'Thu', name: 'days', value: 'thu' },\n    { label: 'Fri', name: 'days', value: 'fri' },\n    { label: 'Sat', name: 'days', value: 'sat' },\n    { label: 'Sun', name: 'days', value: 'sun' },\n  ];\n\n  return (\n    <>\n      <ChoiceList\n        selected={['mon', 'wed', 'sat']}\n        choices={days}\n        allowMultiple={true}\n        title={label}\n        alignment={alignmentHorizontal}\n        onChange={() => {}}\n      />\n    </>\n  );\n}\n    "
    ]
  },
  "Collapsible All": {
    "prefix": "Collapsible All",
    "description": "All",
    "body": [
      "import { Collapsible, Icon, Text } from '@innovaccer/design-system';\n    () => {\n  const [expanded, setExpanded] = React.useState(false);\n  return (\n    <div style={{height: \"100vh\"}}>\n      <Collapsible\n        expanded={expanded}\n        height=\"100vh\"\n        onToggle={setExpanded}\n      >\n        <div className=\"d-flex pt-4\">\n          <Icon name=\"events\" className=\"d-flex align-items-center px-5 Text--regular\" />\n          {expanded && (\n            <Text className=\"mr-6\">Collapsible</Text>\n          )}\n        </div>\n      </Collapsible>\n    </div>\n  );\n}\n    "
    ]
  },
  "Collapsible Custom Trigger": {
    "prefix": "Collapsible Custom Trigger",
    "description": "Custom Trigger",
    "body": [
      "import { Icon, Heading, Collapsible, Text } from '@innovaccer/design-system';\n    () => {\n  const [expanded, setExpanded] = React.useState(false);\n\n  return (\n    <div>\n      <div className='d-flex align-items-center mb-3'>\n        <Icon name=\"menu\" className=\"cursor-pointer\" onClick={() => setExpanded(!expanded) }></Icon>\n        <Heading size='s' className=\"ml-4\">Click to Open</Heading>\n      </div>\n      <Collapsible withTrigger={false} expanded={expanded} height=\"100vh\">\n        <div className=\"d-flex pt-4\">\n          <Icon name=\"events\" className=\"d-flex align-items-center px-5 Text--regular\" />\n          {expanded && <Text className=\"mr-6\">Collapsible</Text>}\n        </div>\n        </Collapsible>\n    </div>\n  );\n}\n    "
    ]
  },
  "DatePicker All": {
    "prefix": "DatePicker All",
    "description": "All",
    "body": [
      "import { DatePicker, Card } from '@innovaccer/design-system';\n    () => {\n  const withInput = false;\n\n  const open = false;\n\n  const closeOnSelect = true;\n\n  const inputFormat = 'dd-mm-yyyy';\n\n  const outputFormat = 'yyyy-mm-dd';\n\n  const dateValue = undefined;\n\n  const view = 'month';\n\n  const firstDayOfWeek = 'sunday';\n\n  const disabledBefore = new Date('Jan 20 2015');\n\n  const disabledAfter = new Date('Jan 20 2028');\n\n  const jumpView = true;\n\n  const yearNav = -1;\n\n  const monthNav = -1;\n\n  const attr = {};\n  if (disabledBefore) attr.disabledBefore = disabledBefore;\n  if (disabledAfter) attr.disabledAfter = disabledAfter;\n  if (yearNav !== -1) attr.yearNav = yearNav;\n  if (monthNav !== -1) attr.monthNav = monthNav;\n\n  if (withInput) {\n    return (\n      <DatePicker\n        withInput={withInput}\n        closeOnSelect={closeOnSelect}\n        open={open}\n        inputFormat={inputFormat}\n        outputFormat={outputFormat}\n        jumpView={jumpView}\n        date={dateValue}\n        onDateChange={(currDate) => action(`on date change : ${currDate}`)()}\n        view={view}\n        firstDayOfWeek={firstDayOfWeek}\n        {...attr}\n      />\n    );\n  }\n  return (\n    <Card className=\"d-inline-flex\" shadow=\"light\">\n      <DatePicker\n        withInput={withInput}\n        inputFormat={inputFormat}\n        outputFormat={outputFormat}\n        jumpView={jumpView}\n        date={dateValue}\n        onDateChange={(currDate) => action(`on date change : ${currDate}`)()}\n        view={view}\n        firstDayOfWeek={firstDayOfWeek}\n        {...attr}\n      />\n    </Card>\n  );\n}\n    "
    ]
  },
  "DatePicker": {
    "prefix": "DatePicker",
    "description": "With Presets",
    "body": [
      "import { DatePicker, Subheading, Chip, Divider, Card, Label } from '@innovaccer/design-system';\n    () => {\n\n  const setDate = (jumpDateIndex) => {\n    const d = new Date();\n    return d.setDate(d.getDate() + jumpDateIndex);\n  };\n\n  const getTomorrowDate = setDate.bind(null, 1);\n  const getThreeDaysLaterDate = setDate.bind(null, 3);\n  const getOneWeekLaterDate = setDate.bind(null, 7);\n  const getThirtyDaysLaterDate = setDate.bind(null, 30);\n\n  \n  const DatePickerPreset = ({ size, withInput=false }) => {\n    \n    const [date, setDate] = React.useState(new Date());\n    const [selectedChip, setSelectedChip] = React.useState('today');\n    \n    const classNames = size === 'small' ? 'd-block mb-4' : 'd-block mb-5';\n    return (\n      <DatePicker date={date} showTodayChip={false} size={size} withInput={withInput}>\n        <div className=\"pt-6 px-5\">\n          <div className=\"d-flex align-items-center justify-content-between\">\n            <Subheading size=\"s\" appearance=\"subtle\">\n              Date\n            </Subheading>\n          </div>\n          <div className=\"pt-4\">\n            <Chip\n              label=\"Today\"\n              clearButton={false}\n              type=\"selection\"\n              className={classNames}\n              selected={selectedChip === 'today'}\n              name=\"rangePicker\"\n              onClick={() => {\n                setDate(new Date)\n                setSelectedChip('today')\n              }}\n            />\n            <Chip\n              label=\"Tomorrow\"\n              clearButton={false}\n              type=\"selection\"\n              className={classNames}\n              selected={selectedChip === 'tomorrow'}\n              name={'chip'}\n              onClick={() => {\n                setDate(getTomorrowDate())\n                setSelectedChip('tomorrow')\n              }}\n            />\n            <Chip\n              label=\"3 Days later\"\n              clearButton={false}\n              type=\"selection\"\n              className={classNames}\n              selected={selectedChip === 'threeDaysLater'}\n              name=\"rangePicker\"\n              onClick={() => {\n                setDate(getThreeDaysLaterDate())\n                setSelectedChip('threeDaysLater')\n              }}\n            />\n            <Chip\n              label=\"1 Week later\"\n              clearButton={false}\n              type=\"selection\"\n              className={classNames}\n              selected={selectedChip === 'oneWeekLater'}\n              name=\"rangePicker\"\n              onClick={() => {\n                setDate(getOneWeekLaterDate())\n                setSelectedChip('oneWeekLater')\n              }}\n            />\n            <Chip\n              label=\"30 Days later\"\n              clearButton={false}\n              type=\"selection\"\n              className={classNames}\n              selected={selectedChip === 'thirtyDaysLater'}\n              name=\"rangePicker\"\n              onClick={() => {\n                setDate(getThirtyDaysLaterDate())\n                setSelectedChip('thirtyDaysLater')\n              }}\n            />\n          </div>\n        </div>\n        <Divider vertical={true} />\n      </DatePicker>\n    );\n  };\n  return (\n    <>\n      <Card className=\"d-inline-flex\" shadow=\"light\">\n        <DatePickerPreset />\n      </Card>\n      <Card className=\"d-inline-flex ml-5\" shadow=\"light\">\n        <DatePickerPreset size=\"small\" />\n      </Card>\n      <Card className=\"w-50 my-5 p-5\">\n        <Label>Set an appointment date:</Label>\n        <DatePickerPreset withInput={true} />\n      </Card>\n    </>\n  );\n};\n    "
    ]
  },
  "DatePicker   With Input": {
    "prefix": "DatePicker   With Input",
    "description": "With Input",
    "body": [
      "import { DatePicker } from '@innovaccer/design-system';\n    () => {\n  const dateValue = undefined;\n\n  const inputFormat = 'mm/dd/yyyy';\n\n  const outputFormat = 'yyyy/mm/dd';\n\n  const view = 'date';\n\n  const firstDayOfWeek = 'saturday';\n\n  const disabledBefore = new Date('Jan 20 2015');\n\n  const disabledAfter = new Date('Jan 20 2028');\n\n  const jumpView = true;\n\n  const yearNav = -1;\n\n  const monthNav = -1;\n\n  const closeOnSelect = true;\n\n  const attr = {};\n  if (disabledBefore) attr.disabledBefore = disabledBefore;\n  if (disabledAfter) attr.disabledAfter = disabledAfter;\n  if (yearNav !== -1) attr.yearNav = yearNav;\n  if (monthNav !== -1) attr.monthNav = monthNav;\n\n  return (\n    <div className=\"w-25\">\n      <DatePicker\n        withInput={true}\n        closeOnSelect={closeOnSelect}\n        inputFormat={inputFormat}\n        outputFormat={outputFormat}\n        jumpView={jumpView}\n        date={dateValue}\n        onDateChange={(currDate, currValue) => {\n          action(`on date change : ${currDate} --- ${currValue}`)();\n        }}\n        view={view}\n        firstDayOfWeek={firstDayOfWeek}\n        inputOptions={{\n          required: true,\n        }}\n        {...attr}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "DateRangePicker All": {
    "prefix": "DateRangePicker All",
    "description": "All",
    "body": [
      "import { DateRangePicker, Card } from '@innovaccer/design-system';\n    () => {\n  const withInput = false;\n\n  const open = false;\n\n  const monthsInView = withInput ? 2 : 1;\n\n  const inputFormat = 'dd/mm/yyyy';\n\n  const outputFormat = 'mm/dd/yyyy';\n\n  const startDate = new Date('Jan 20 2015');\n\n  const endDate = new Date('Jan 27 2015');\n\n  const view = 'month';\n\n  const rangeLimit = 0;\n\n  const firstDayOfWeek = 'thursday';\n\n  const disabledBefore = new Date('Jan 20 2015');\n\n  const disabledAfter = new Date('Jan 20 2028');\n\n  const jumpView = true;\n\n  const yearNav = -1;\n\n  const monthNav = -1;\n\n  const attr = {};\n  if (disabledBefore) attr.disabledBefore = disabledBefore;\n  if (disabledAfter) attr.disabledAfter = disabledAfter;\n  if (rangeLimit) attr.rangeLimit = rangeLimit;\n  if (yearNav !== -1) attr.yearNav = yearNav;\n  if (monthNav !== -1) attr.monthNav = monthNav;\n\n  if (withInput) {\n    return (\n      <DateRangePicker\n        withInput={withInput}\n        open={open}\n        monthsInView={monthsInView}\n        inputFormat={inputFormat}\n        outputFormat={outputFormat}\n        jumpView={jumpView}\n        startDate={startDate}\n        endDate={endDate}\n        onRangeChange={(sDate, eDate, sValue, eValue) =>\n          action(`on range change: ${sDate} - ${eDate} ---- ${sValue} - ${eValue}`)()\n        }\n        view={view}\n        firstDayOfWeek={firstDayOfWeek}\n        {...attr}\n      />\n    );\n  }\n  return (\n    <Card className=\"d-inline-flex\" shadow=\"light\">\n      <DateRangePicker\n        withInput={withInput}\n        monthsInView={monthsInView}\n        jumpView={jumpView}\n        startDate={startDate}\n        endDate={endDate}\n        onRangeChange={(sDate, eDate, sValue, eValue) =>\n          action(`on range change: ${sDate} - ${eDate} ---- ${sValue} - ${eValue}`)()\n        }\n        view={view}\n        firstDayOfWeek={firstDayOfWeek}\n        {...attr}\n      />\n    </Card>\n  );\n}\n    "
    ]
  },
  "DateRangePicker": {
    "prefix": "DateRangePicker",
    "description": "View",
    "body": [
      "import { Card, DateRangePicker } from '@innovaccer/design-system';\n    () => {\n  const values = ['year', 'month', 'date'];\n\n  return (\n    <div className=\"d-flex\">\n      {values.map((v, index) => (\n        <div className=\"mr-9\" key={index}>\n          <Card className=\"d-inline-flex\" shadow=\"light\">\n            <DateRangePicker\n              startDate={new Date(2020, 2, 3)}\n              endDate={new Date(2020, 2, 11)}\n              view={v}\n              yearNav={2020}\n              monthNav={2}\n            />\n          </Card>\n        </div>\n      ))}\n    </div>\n  );\n}\n    "
    ]
  },
  "DateRangePicker   With Input": {
    "prefix": "DateRangePicker   With Input",
    "description": "With Input",
    "body": [
      "import { DateRangePicker } from '@innovaccer/design-system';\n    () => {\n  const monthsInView = 2;\n\n  const startDate = new Date('Jan 12 2017');\n\n  const endDate = new Date('Jan 20 2017');\n\n  const inputFormat = 'mm-dd-yyyy';\n\n  const outputFormat = 'yyyy-mm-dd';\n\n  const view = 'year';\n\n  const firstDayOfWeek = 'monday';\n\n  const disabledBefore = new Date('Jan 20 2015');\n\n  const disabledAfter = new Date('Jan 20 2028');\n\n  const jumpView = true;\n\n  const yearNav = -1;\n\n  const monthNav = -1;\n\n  const attr = {};\n  if (disabledBefore) attr.disabledBefore = disabledBefore;\n  if (disabledAfter) attr.disabledAfter = disabledAfter;\n  if (yearNav !== -1) attr.yearNav = yearNav;\n  if (monthNav !== -1) attr.monthNav = monthNav;\n\n  return (\n    <div className=\"w-75\">\n      <DateRangePicker\n        withInput={true}\n        startDate={startDate}\n        endDate={endDate}\n        inputFormat={inputFormat}\n        outputFormat={outputFormat}\n        jumpView={jumpView}\n        onRangeChange={(sDate, eDate, sValue, eValue) =>\n          action(`on range change: ${sDate} - ${eDate} ---- ${sValue} - ${eValue}`)()\n        }\n        view={view}\n        firstDayOfWeek={firstDayOfWeek}\n        monthsInView={monthsInView}\n        startInputOptions={{\n          required: true,\n        }}\n        endInputOptions={{\n          required: true,\n        }}\n        {...attr}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "DateRangePicker   With Single Input": {
    "prefix": "DateRangePicker   With Single Input",
    "description": "With Single Input",
    "body": [
      "import { DateRangePicker } from '@innovaccer/design-system';\n    () => {\n  const monthsInView = 2;\n\n  const startDate = new Date('Jan 20 2016');\n\n  const endDate = new Date('Jan 28 2016');\n\n  const inputFormat = 'dd/mm/yyyy';\n\n  const outputFormat = 'mm-dd-yyyy';\n\n  const view = 'date';\n\n  const firstDayOfWeek = 'monday';\n\n  const disabledBefore = new Date('Jan 20 2015');\n\n  const disabledAfter = new Date('Jan 20 2028');\n\n  const jumpView = true;\n\n  const yearNav = -1;\n\n  const monthNav = -1;\n\n  const open = false;\n\n  const attr = {};\n  if (disabledBefore) attr.disabledBefore = disabledBefore;\n  if (disabledAfter) attr.disabledAfter = disabledAfter;\n  if (yearNav !== -1) attr.yearNav = yearNav;\n  if (monthNav !== -1) attr.monthNav = monthNav;\n\n  return (\n    <div className=\"w-50\">\n      <DateRangePicker\n        withInput={true}\n        singleInput={true}\n        startDate={startDate}\n        endDate={endDate}\n        inputFormat={inputFormat}\n        outputFormat={outputFormat}\n        jumpView={jumpView}\n        onRangeChange={(sDate, eDate, sValue, eValue) =>\n          action(`on range change: ${sDate} - ${eDate} ---- ${sValue} - ${eValue}`)()\n        }\n        view={view}\n        firstDayOfWeek={firstDayOfWeek}\n        monthsInView={monthsInView}\n        inputOptions={{\n          required: true,\n          label: 'Date',\n        }}\n        {...attr}\n        open={open}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "Dialog All": {
    "prefix": "Dialog All",
    "description": "All",
    "body": [
      "import { Paragraph, Button, Dialog } from '@innovaccer/design-system';\n    () => {\n  const [open, setOpen] = React.useState(false);\n\n  const onClose = () => {\n    setOpen(!open);\n  };\n\n  const options = {\n    open,\n    onClose,\n    icon: 'pan_tool',\n    heading: 'Heading',\n    title: 'Description Title',\n    description: 'Adding a subheading clearly indicates the hierarchy of the information.',\n    primaryButtonLabel: 'Primary',\n    secondaryButtonLabel: 'Basic',\n  };\n\n  return (\n    <div>\n      <Paragraph>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. <br />\n        Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. <br />\n        Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. <br />\n        Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. <br />\n        <Button appearance=\"primary\" onClick={() => setOpen(true)}>Open</Button>\n      </Paragraph>\n      <Dialog {...options} />\n    </div>\n  );\n}\n    "
    ]
  },
  "Dialog": {
    "prefix": "Dialog",
    "description": "Transparent",
    "body": [
      "import { Paragraph, Button, Dialog } from '@innovaccer/design-system';\n    () => {\n  const [open, setOpen] = React.useState(false);\n\n  const onClose = () => {\n    setOpen(!open);\n  };\n\n  const options = {\n    open,\n    onClose,\n    icon: 'pan_tool',\n    heading: 'Heading',\n    title: 'Description Title',\n    description: 'Adding a subheading clearly indicates the hierarchy of the information.',\n    secondaryButtonAppearance: 'transparent',\n    primaryButtonLabel: 'Primary',\n    secondaryButtonLabel: 'Secondary',\n  };\n\n  return (\n    <div>\n      <Paragraph>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. <br />\n        Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. <br />\n        Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. <br />\n        Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. <br />\n        <Button appearance=\"primary\" onClick={() => setOpen(true)}>Open</Button>\n      </Paragraph>\n      <Dialog {...options} />\n    </div>\n  );\n}\n    "
    ]
  },
  "Divider All": {
    "prefix": "Divider All",
    "description": "All",
    "body": [
      "import { Row, Column, Card, CardBody, Heading, Divider, Text } from '@innovaccer/design-system';\n    () => {\n  return (\n    <Row>\n      <Column size=\"10\">\n        <Card shadow=\"none\">\n          <CardBody className=\"p-0\">\n            <Row className=\"py-4 px-6\">\n              <Heading>Assessment Report</Heading>\n            </Row>\n\n            <Divider appearance=\"header\" />\n            <Row>\n              <Column>\n                <div className=\"p-6\">\n                  <Heading size=\"s\">Select Assessment</Heading>\n                </div>\n                <Divider />\n                <div className=\"pl-6\">\n                  <div className=\"py-4\">\n                    <Text>Functional Assessment - Initial</Text>\n                  </div>\n                  <Divider />\n\n                  <div className=\"py-4\">\n                    <Text>Social Influence of Health</Text>\n                  </div>\n                  <Divider />\n\n                  <div className=\"py-4\">\n                    <Text>Social Determinants of Health</Text>\n                  </div>\n                  <Divider />\n\n                  <div className=\"py-4\">\n                    <Text>Functional Assessment - Discharge</Text>\n                  </div>\n                </div>\n              </Column>\n              <Divider vertical={true} />\n\n              <Column>\n                <div className=\"p-6\">\n                  <Text appearance=\"disabled\">MSSP - Track 3</Text>\n                  <br />\n                  <Text small={true}>Medicare</Text>\n                  <br />\n                  <div className=\"pt-6\">\n                    <Text appearance=\"disabled\" small={true}>\n                      Subscriber\n                    </Text>\n                    <br />\n                    <Text appearance=\"disabled\">LAWSON, JOY (Self)</Text>\n                    <br />\n                    <Text weight=\"medium\">ZGP123456789</Text>\n                  </div>\n                </div>\n                <Divider />\n                <Row className=\"p-6\">\n                  <Column>\n                    <Text appearance=\"disabled\" small={true}>\n                      Last attr:\n                    </Text>\n                    <Text className=\"ml-3\" small={true}>\n                      04/19\n                    </Text>\n                  </Column>\n                  <Column>\n                    <Text appearance=\"disabled\" small={true}>\n                      Plan ID:\n                    </Text>\n                    <Text className=\"ml-3\" small={true}>\n                      040\n                    </Text>\n                  </Column>\n                </Row>\n              </Column>\n            </Row>\n          </CardBody>\n        </Card>\n      </Column>\n    </Row>\n  );\n}\n    "
    ]
  },
  "Divider Basic Divider In Card": {
    "prefix": "Divider Basic Divider In Card",
    "description": "Basic Divider In Card",
    "body": [
      "import { Row, Column, Card, CardBody, Text, Badge, Divider } from '@innovaccer/design-system';\n    () => {\n  return (\n    <Row>\n      <Column size=\"9\">\n        <Card className=\"pt-6\" shadow=\"none\">\n          <CardBody>\n            <Row>\n              <Column size={10}>\n                <Text appearance=\"disabled\">MSSP - Track 3</Text>\n              </Column>\n              <Column size={2}>\n                <Badge appearance=\"success\" subtle={true}>\n                  ACTIVE\n                </Badge>\n              </Column>\n            </Row>\n            <br />\n            <Text small={true}>Medicare</Text>\n            <br />\n            <div className=\"py-6\">\n              <Text appearance=\"disabled\" small={true}>\n                Subscriber\n              </Text>\n              <br />\n              <Text appearance=\"disabled\">LAWSON, JOY (Self)</Text>\n              <br />\n              <Text weight=\"medium\">ZGP123456789</Text>\n            </div>\n          </CardBody>\n\n          {/* Horizontal Divider */}\n          <Divider />\n\n          <CardBody className=\"py-4\">\n            <Row>\n              <Column>\n                <Text appearance=\"disabled\" small={true}>\n                  Last attr:\n                </Text>\n                <Text className=\"ml-3\" small={true}>\n                  04/19\n                </Text>\n              </Column>\n              <Column>\n                <Text appearance=\"disabled\" small={true}>\n                  Plan ID:\n                </Text>\n                <Text className=\"ml-3\" small={true}>\n                  040\n                </Text>\n              </Column>\n              <Column>\n                <Text appearance=\"disabled\" small={true}>\n                  Payer ID:\n                </Text>\n                <Text className=\"ml-3\" small={true}>\n                  001\n                </Text>\n              </Column>\n            </Row>\n          </CardBody>\n        </Card>\n      </Column>\n    </Row>\n  );\n}\n    "
    ]
  },
  "Divider Header Divider In Card": {
    "prefix": "Divider Header Divider In Card",
    "description": "Header Divider In Card",
    "body": [
      "import { Row, Column, Card, CardBody, Heading, Divider, Radio } from '@innovaccer/design-system';\n    () => {\n  return (\n    <Row>\n      <Column size=\"6\">\n        <Card className=\"pb-6\" shadow=\"none\">\n          <CardBody className=\"p-0\">\n            <Row className=\"p-4\">\n              <Heading size=\"s\">Section 1</Heading>\n            </Row>\n\n            <Divider appearance=\"header\" />\n\n            <div className=\"px-4 pt-4\">\n              <Heading size=\"s\">1. Little interest or pleasure in doing things.</Heading>\n              <br />\n              <Column className=\"px-4\">\n                <Radio defaultChecked={true} label=\"Not at all\" name=\"section\" size=\"regular\" value=\"Not at all\" />\n                <Radio label=\"Several Days\" name=\"section\" size=\"regular\" value=\"Several Days\" />\n                <Radio label=\"More than half the days\" name=\"section\" size=\"regular\" value=\"More than half days\" />\n              </Column>\n            </div>\n          </CardBody>\n        </Card>\n      </Column>\n    </Row>\n  );\n}\n    "
    ]
  },
  "Divider Indented Divider": {
    "prefix": "Divider Indented Divider",
    "description": "Indented Divider",
    "body": [
      "import { Row, Column, Heading, Card, CardBody, Input, Divider, Text } from '@innovaccer/design-system';\n    () => {\n  return (\n    <Row>\n      <Column size=\"8\">\n        <Heading size=\"m\">Select assessment</Heading>\n        <Card>\n          <CardBody className=\"p-0\">\n            <Row className=\"p-6\">\n              <Column size={8}>\n                <Input className=\"w-25\" icon=\"search\" name=\"input\" placeholder=\"Search\" />\n              </Column>\n            </Row>\n\n            <Divider appearance=\"header\" />\n\n            <div className=\"pl-6\">\n              <div className=\"py-6\">\n                <Text>Functional Assessment - Initial</Text>\n              </div>\n              <Divider />\n\n              <div className=\"py-6\">\n                <Text>Functional Assessment - Discharge</Text>\n              </div>\n              <Divider />\n\n              <div className=\"py-6\">\n                <Text>Social Influence of Health</Text>\n              </div>\n              <Divider />\n\n              <div className=\"py-6\">\n                <Text>Social Determinants of Health</Text>\n              </div>\n            </div>\n          </CardBody>\n        </Card>\n      </Column>\n    </Row>\n  );\n}\n    "
    ]
  },
  "Divider variants Horizontal Divider": {
    "prefix": "Divider variants Horizontal Divider",
    "description": "Horizontal Divider",
    "body": [
      "import { Row, Column, Divider, Text } from '@innovaccer/design-system';\n    () => {\n  return (\n    <div>\n      <Row>\n        <Column className=\"p-6\">\n          <Divider />\n          <br />\n          <Text weight=\"strong\">Default Divider</Text>\n        </Column>\n\n        <Column className=\"p-6\">\n          <Divider appearance=\"header\" />\n          <br />\n          <Text weight=\"strong\">Header Divider</Text>\n        </Column>\n      </Row>\n    </div>\n  );\n}\n    "
    ]
  },
  "Divider Vertical Divider": {
    "prefix": "Divider Vertical Divider",
    "description": "Vertical Divider",
    "body": [
      "import { Row, Column, Card, CardBody, Text, Divider, Heading, Radio } from '@innovaccer/design-system';\n    () => {\n  return (\n    <Row>\n      <Column size=\"10\">\n        <Card shadow=\"none\">\n          <CardBody className=\"p-0\">\n            <Row>\n              <Column className=\"p-6\">\n                <Text appearance=\"disabled\">MSSP - Track 3</Text>\n                <br />\n                <Text small={true}>Medicare</Text>\n                <br />\n                <div className=\"pt-6\">\n                  <Text appearance=\"disabled\" small={true}>\n                    Subscriber\n                  </Text>\n                  <br />\n                  <Text appearance=\"disabled\">LAWSON, JOY (Self)</Text>\n                  <br />\n                  <Text weight=\"medium\">ZGP123456789</Text>\n                </div>\n              </Column>\n\n              <Divider vertical={true} />\n\n              <Column className=\"p-6\">\n                <div>\n                  <Heading size=\"s\">1. Little interest or pleasure in doing things.</Heading>\n                  <br />\n                  <Column className=\"px-4\">\n                    <Radio defaultChecked={true} label=\"Not at all\" name=\"section\" size=\"regular\" value=\"Not at all\" />\n                    <Radio label=\"Several Days\" name=\"section\" size=\"regular\" value=\"Several Days\" />\n                    <Radio label=\"More than half the days\" name=\"section\" size=\"regular\" value=\"More than half days\" />\n                  </Column>\n                </div>\n              </Column>\n            </Row>\n          </CardBody>\n        </Card>\n      </Column>\n    </Row>\n  );\n}\n    "
    ]
  },
  "Dropdown All": {
    "prefix": "Dropdown All",
    "description": "All",
    "body": [
      "import { Dropdown } from '@innovaccer/design-system';\n    () => {\n  const dropdownOptions =  [];\n  for (let i = 1; i <= 100; i++) {\n    dropdownOptions.push({\n      label: `Option ${i}`,\n      value: `Option ${i}`,\n      group: i >= 1 && i <= 40 ? 'Group 1' : 'Group 2',\n      icon: 'events',\n      subInfo: 'subInfo',\n    });\n  }\n\n  const getSearchedOptions = (options, searchTerm) => {\n    const result = options.filter((option) => option.label.toLowerCase().includes(searchTerm.toLowerCase()));\n    return result;\n  };\n\n  const fetchOptions = (searchTerm) => {\n    const searchedOptions = searchTerm ? getSearchedOptions(dropdownOptions, searchTerm) : dropdownOptions;\n    return new Promise(resolve => {\n      this.window.setTimeout(() => {\n        resolve({\n          searchTerm,\n          options: searchedOptions,\n          count: searchedOptions.length,\n        });\n      }, 1000);\n    });\n  };\n\n  return (\n    <div className='w-25' style={{ minHeight: '280px' }}>\n      <Dropdown\n        fetchOptions={fetchOptions}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "Dropdown": {
    "prefix": "Dropdown",
    "description": "Size",
    "body": [
      "import { Text, Dropdown } from '@innovaccer/design-system';\n    () => {\n  const storyOptions = [];\n  for (let i = 1; i <= 10; i++) {\n    storyOptions.push({\n      label: `Option ${i}`,\n      value: `Option ${i}`,\n      icon: 'events',\n      subInfo: 'subInfo'\n    });\n  }\n\n  const disabled = [true, false];\n\n  return (\n    <div className='d-flex'>\n      <div className='mr-8 w-25'>\n        <Text weight=\"strong\">Tiny</Text> <br /><br />\n        <Dropdown triggerSize={'tiny'} options={storyOptions} />\n      </div>\n      <div className='mr-8 w-25'>\n        <Text weight=\"strong\">Regular</Text> <br /><br />\n        <Dropdown triggerSize={'regular'} options={storyOptions}/>\n      </div>\n    </div>\n  );\n}\n    "
    ]
  },
  "Controlled Dropdown": {
    "prefix": "Controlled Dropdown",
    "description": "Single Select",
    "body": [
      "import { Dropdown } from '@innovaccer/design-system';\n    () => {\n  const dropdownOptions =  [];\n  for (let i = 1; i <= 100; i++) {\n    dropdownOptions.push({\n      label: `Option ${i}`,\n      value: `Option ${i}`,\n      group: i >= 1 && i <= 40 ? 'Group 1' : 'Group 2',\n      icon: 'events',\n      subInfo: 'subInfo',\n    });\n  }\n\n  const [selected, setSelected] = React.useState([dropdownOptions[3]]);\n  const [open, setOpen] = React.useState(false);\n\n  const getSearchedOptions = (options, searchTerm) => {\n    const result = options.filter((option) => option.label.toLowerCase().includes(searchTerm.toLowerCase()));\n    return result;\n  };\n\n  const fetchOptions = (searchTerm) => {\n    const searchedOptions = searchTerm ? getSearchedOptions(dropdownOptions, searchTerm) : dropdownOptions;\n    return new Promise(resolve => {\n      this.window.setTimeout(() => {\n        resolve({\n          searchTerm,\n          options: searchedOptions,\n          count: searchedOptions.length,\n        });\n      }, 1000);\n    });\n  };\n\n  const onChangeHandler = (selectedValues) => {\n    console.log(selectedValues);\n  };\n\n  const onUpdate = (_type, option) => {\n    this.window.setTimeout(() => {\n      setSelected([option]);\n    }, 2000);\n  };\n\n  const onPopperToggle = (updatedOpen, type) => {\n    console.log(type)\n    setOpen(updatedOpen);\n  }\n\n  const onClose = (values) => {\n    console.log(values);\n  }\n\n  return (\n    <div className=\"w-25\">\n      <Dropdown\n        fetchOptions={fetchOptions}\n        onUpdate={onUpdate}\n        selected={selected}\n        onChange={onChangeHandler}\n        onPopperToggle={onPopperToggle}\n        onClose={onClose}\n        open={open}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "Dropdown   ControlledDropdown Multi Select": {
    "prefix": "Dropdown   ControlledDropdown Multi Select",
    "description": "Multi Select",
    "body": [
      "import { Text, Dropdown } from '@innovaccer/design-system';\n    () => {\n  const dropdownOptions =  [];\n  for (let i = 1; i <= 100; i++) {\n    dropdownOptions.push({\n      label: `Option ${i}`,\n      value: `Option ${i}`,\n      group: i >= 1 && i <= 40 ? 'Group 1' : 'Group 2',\n      icon: 'events',\n      subInfo: 'subInfo',\n    });\n  }\n  const [selectedMoreThan50, setSelectedMoreThan50] = React.useState([dropdownOptions[3]]);\n  const [selectedLessThan50, setSelectedLessThan50] = React.useState([dropdownOptions[3]]);\n\n  const getSearchedOptions = (options, searchTerm) => {\n    const result = options.filter((option) => option.label.toLowerCase().includes(searchTerm.toLowerCase()));\n    return result;\n  };\n\n  const fetchOptions = (searchTerm) => {\n    const searchedOptions = searchTerm ? getSearchedOptions(dropdownOptions, searchTerm) : dropdownOptions;\n    return new Promise(resolve => {\n      this.window.setTimeout(() => {\n        resolve({\n          searchTerm,\n          options: searchedOptions,\n          count: searchedOptions.length,\n        });\n      }, 1000);\n    });\n  };\n\n  const onChangeHandler = (selectedValues) => {\n    console.log(selectedValues);\n  };\n\n  const onSelectLessThan50 = (type, option) => {\n    switch (type) {\n      case 'select-all':\n        const selectedDisabledArray = selectedLessThan50.filter(option => option.disabled);\n        const selectedOptions = [\n          ...dropdownOptions.slice(0, 50).filter(option => !option.disabled),\n          ...selectedDisabledArray\n        ];\n        setSelectedLessThan50(selectedOptions);\n        return;\n      case 'deselect-all':\n        const selectedArr = selectedLessThan50.filter(option => option.disabled);\n        setSelectedLessThan50(selectedArr);\n        return;\n      case 'select-option':\n        setSelectedLessThan50(selectedLessThan50.concat(option));\n        return;\n      case 'deselect-option':\n        const selectedArray = selectedLessThan50.slice();\n        const index = selectedArray.findIndex(item => item.value === option.value);\n        selectedArray.splice(index, 1);\n        setSelectedLessThan50(selectedArray);\n      default:\n        return;\n    }\n  };\n\n  const onSelectMoreThan50 = (type, option) => {\n    switch (type) {\n      case 'select-option':\n        setSelectedMoreThan50(selectedMoreThan50.concat(option));\n        return;\n      case 'deselect-option':\n        const selectedArray = selectedMoreThan50.slice();\n        const index = selectedArray.findIndex(item => item.value === option.value);\n        selectedArray.splice(index, 1);\n        setSelectedMoreThan50(selectedArray);\n        return;\n      case 'clear-all':\n        const selectedArr = selectedMoreThan50.filter(option => option.disabled);\n        setSelectedMoreThan50(selectedArr);\n        return;\n      default:\n        return;\n    }\n  };\n\n  const onClose = (options) => {\n    console.log(options);\n  }\n\n  return (\n    <div className='d-flex'>\n      <div className=\"w-25\">\n        <Text weight=\"strong\">{'Options > 50'}</Text><br /><br />\n        <Dropdown\n          fetchOptions={fetchOptions}\n          onUpdate={onSelectMoreThan50}\n          selected={selectedMoreThan50}\n          onChange={onChangeHandler}\n          withCheckbox={true}\n        />\n      </div>\n      <div className=\"w-25 ml-5\">\n        <Text weight=\"strong\">{'Options <= 50'}</Text><br /><br />\n        <Dropdown\n          options={dropdownOptions.slice(0, 50)}\n          onUpdate={onSelectLessThan50}\n          selected={selectedLessThan50}\n          onChange={onChangeHandler}\n          onClose={onClose}\n          withCheckbox={true}\n          withSearch={true}\n        />\n      </div>\n    </div>\n  );\n}\n    "
    ]
  },
  "Dropdown   Custom Option": {
    "prefix": "Dropdown   Custom Option",
    "description": "Custom Option",
    "body": [
      "import { Text, Icon, Checkbox, Dropdown } from '@innovaccer/design-system';\n    () => {\n  const storyOptions = [];\n  for (let i = 1; i <= 10; i++) {\n    storyOptions.push({\n      label: `Option ${i}`,\n      value: `Option ${i}`,\n      icon: 'events',\n      subInfo: 'subInfo'\n    });\n  }\n  const optionStyle = {\n    paddingRight: 12,\n    paddingLeft: 12,\n    paddingTop: 6,\n    paddingBottom: 6,\n    display: 'flex',\n    cursor: 'pointer',\n    justifyContent: 'space-between',\n  };\n\n  const customOptionRenderer = (props) => {\n    const { label, icon } = props.optionData;\n    return (\n      <div style={optionStyle} onClick={props.onClick}>\n        <Text>{label}</Text>\n        <Icon name={props.selected ? 'done' : icon} />\n      </div>\n    );\n  };\n\n  const customCheckboxRenderer = (props) => {\n    const { label } = props.optionData;\n    return (\n      <div style={optionStyle} onClick={props.onClick}>\n        <Checkbox checked={props.selected} onChange={props.onChange} label={label} />\n        {props.selected && <Icon name=\"done\" />}\n      </div>\n    );\n  };\n\n  return (\n    <div className='d-flex'>\n      <div className='mr-10 w-25'>\n        <Text weight=\"strong\">Without Checkbox</Text> <br /><br />\n        <Dropdown options={storyOptions} optionRenderer={customOptionRenderer} />\n      </div>\n      <div className='mr-10 w-25'>\n        <Text weight=\"strong\">With Checkbox</Text> <br /><br />\n        <Dropdown options={storyOptions} optionRenderer={customCheckboxRenderer} withCheckbox={true} />\n      </div>\n    </div>\n  );\n}\n    "
    ]
  },
  "Dropdown   Custom Trigger": {
    "prefix": "Dropdown   Custom Trigger",
    "description": "Custom Trigger",
    "body": [
      "import { Input, Dropdown } from '@innovaccer/design-system';\n    () => {\n  const storyOptions = [];\n  for (let i = 1; i <= 10; i++) {\n    storyOptions.push({\n      label: `Option ${i}`,\n      value: `Option ${i}`,\n      icon: 'events',\n      subInfo: 'subInfo'\n    });\n  }\n  const onChange = (e) => {\n    e.preventDefault();\n  };\n\n  const customTriggerFunc = (label) => {\n    return (\n      <div style={{ width: '100%' }}>\n        <Input\n          type=\"text\"\n          name=\"input\"\n          value={label}\n          onChange={onChange}\n        />\n      </div>\n    );\n  };\n\n  return (\n    <div className='d-flex'>\n      <div className='mr-10'style={{ width: '256px' }}>\n        <Dropdown options={storyOptions} customTrigger={customTriggerFunc} />\n      </div>\n    </div>\n  );\n}\n    "
    ]
  },
  "Dropdown   Options Wrap": {
    "prefix": "Dropdown   Options Wrap",
    "description": "Options Wrap",
    "body": [
      "import { Text, Dropdown } from '@innovaccer/design-system';\n    () => {\n  const storyWrapOptions = [\n    {\n      label: 'Design System Dropdown',\n      value: 'Design System Dropdown'\n    },\n    {\n      label: 'UI Kit Dropdown',\n      value: 'UI Kit Dropdown',\n    },\n    {\n      label: 'Innovaccer Analytics',\n      value: 'Innovaccer Analytics'\n    }\n  ];\n  return (\n    <div className='d-flex'>\n      <div className='mr-9' style={{ width: '128px' }}>\n        <Text weight=\"strong\">{'Options Trimmed'}</Text> <br /><br />\n        <Dropdown options={storyWrapOptions} placeholder={'Select'} />\n      </div>\n      <div className='mr-9' style={{ width: '128px' }}>\n        <Text weight=\"strong\">{'Options Wrapped'}</Text> <br /><br />\n        <Dropdown options={storyWrapOptions} placeholder={'Select'} truncateOption={false} />\n      </div>\n    </div>\n  )\n}\n    "
    ]
  },
  "Dropdown   Pre Selection": {
    "prefix": "Dropdown   Pre Selection",
    "description": "Pre Selection",
    "body": [
      "import { Text, Dropdown } from '@innovaccer/design-system';\n    () => {\n  const dropdownOptions = [];\n  for (let i = 1; i <= 100; i++) {\n    dropdownOptions.push({\n      label: `Option ${i}`,\n      value: `Option ${i}`,\n      selected: i === 2 || i === 3\n    });\n  }\n\n  const BooleanValue = [true, false];\n\n  const getSearchedOptions = (options, searchTerm) => {\n    const result = options.filter((option) => option.label.toLowerCase().includes(searchTerm.toLowerCase()));\n    return result;\n  };\n\n  const fetchOptions = (searchTerm, limit) => {\n    const searchedOptions = searchTerm ? getSearchedOptions(dropdownOptions, searchTerm) : dropdownOptions;\n    return new Promise(resolve => {\n      this.window.setTimeout(() => {\n        resolve({\n          options: searchedOptions.slice(0, limit),\n          count: searchedOptions.length,\n        });\n      }, 1000);\n    });\n  };\n  return (\n    <div className='d-flex'>\n      <div className='mr-10 w-25'>\n        <Text weight=\"strong\">{'Options > 50'}</Text> <br /><br />\n        <Dropdown withCheckbox={true} fetchOptions={fetchOptions}/>\n      </div>\n      <div className='mr-10 w-25'>\n        <Text weight=\"strong\">{'Options <= 50'}</Text> <br /><br />\n        <Dropdown withCheckbox={true} options={dropdownOptions.slice(0, 50)} />\n      </div>\n    </div>\n  )\n}\n    "
    ]
  },
  "Dropdown   Static Limit": {
    "prefix": "Dropdown   Static Limit",
    "description": "Static Limit",
    "body": [
      "import { Text, Dropdown } from '@innovaccer/design-system';\n    () => {\n  const staticLimit = 50;\n  const dropdownOptions = [];\n  for (let i = 1; i <= 100; i++) {\n    dropdownOptions.push({\n      label: `Option ${i}`,\n      value: `Option ${i}`,\n      group: i <= 40 ? 'Group 1' : 'Group 2'\n    });\n  }\n  const BooleanValue = [true, false];\n\n  const getSearchedOptions = (options, searchTerm) => {\n    const result = options.filter((option) => option.label.toLowerCase().includes(searchTerm.toLowerCase()));\n    return result;\n  };\n\n  const fetchOptions = (searchTerm) => {\n    const searchedOptions = searchTerm ? getSearchedOptions(dropdownOptions, searchTerm) : dropdownOptions;\n    return new Promise(resolve => {\n      this.window.setTimeout(() => {\n        resolve({\n          searchTerm,\n          options: searchedOptions,\n          count: searchedOptions.length,\n        });\n      }, 1000);\n    });\n  };\n  return (\n    <div className='d-flex'>\n      <div className='mr-10 w-25'>\n        <Text weight=\"strong\">{`Options > ${staticLimit}`}</Text> <br /><br />\n        <Dropdown\n          withCheckbox={true}\n          staticLimit={staticLimit}\n          fetchOptions={fetchOptions}\n        />\n      </div>\n      <div className='mr-10 w-25'>\n        <Text weight=\"strong\">{`Options <= ${staticLimit}`}</Text> <br /><br />\n        <Dropdown\n          withCheckbox={true}\n          staticLimit={staticLimit}\n          options={dropdownOptions.slice(0, staticLimit)}\n        />\n      </div>\n    </div>\n  )\n}\n    "
    ]
  },
  "Dropdown   Trigger Placeholder": {
    "prefix": "Dropdown   Trigger Placeholder",
    "description": "Placeholder",
    "body": [
      "import { Text, Dropdown } from '@innovaccer/design-system';\n    () => {\n  const storyOptions = [];\n  for (let i = 1; i <= 10; i++) {\n    storyOptions.push({\n      label: `Option ${i}`,\n      value: `Option ${i}`,\n      icon: 'events',\n      subInfo: 'subInfo'\n    });\n  }\n\n  return (\n    <div className='d-flex'>\n      <div className='mr-8'>\n        <Text weight=\"strong\">Without Placeholder</Text> <br /><br />\n        <Dropdown menu={true} options={storyOptions} />\n      </div>\n      <div className='mr-8'>\n        <Text weight=\"strong\">With Placeholder</Text> <br /><br />\n        <Dropdown menu={false} options={storyOptions} />\n      </div>\n    </div>\n  )\n}\n    "
    ]
  },
  "Dropdown   Trigger State": {
    "prefix": "Dropdown   Trigger State",
    "description": "State",
    "body": [
      "import { Text, Dropdown } from '@innovaccer/design-system';\n    () => {\n  const storyOptions = [];\n  for (let i = 1; i <= 10; i++) {\n    storyOptions.push({\n      label: `Option ${i}`,\n      value: `Option ${i}`,\n      icon: 'events',\n      subInfo: 'subInfo'\n    });\n  }\n\n  const disabled = [true, false];\n\n  return (\n    <div className='d-flex'>\n      <div className='mr-8 w-25'>\n        <Text weight=\"strong\">Icon Disabled</Text> <br /><br />\n        <Dropdown icon={'events'} disabled={true} options={storyOptions} />\n      </div>\n      <div className='mr-8 w-25'>\n        <Text weight=\"strong\">Icon Enabled</Text> <br /><br />\n        <Dropdown icon={'events'} disabled={false} options={storyOptions} />\n      </div>\n      <div className='mr-8 w-25'>\n        <Text weight=\"strong\">Label Disabled</Text> <br /><br />\n        <Dropdown inlineLabel={'label'} disabled={true} options={storyOptions} />\n      </div>\n      <div className='mr-8 w-25'>\n        <Text weight=\"strong\">Label Enabled</Text> <br /><br />\n        <Dropdown inlineLabel={'label'} disabled={false} options={storyOptions} />\n      </div>\n    </div>\n  );\n}\n    "
    ]
  },
  "Dropzone All": {
    "prefix": "Dropzone All",
    "description": "All",
    "body": [
      "import { Button, Dropzone, Link, FileList } from '@innovaccer/design-system';\n    () => {\n  const [files, setFiles] = React.useState([]);\n\n  const getSize = (size) => (\n    `${(size / (1024 * 1024)).toFixed(2)} MB`\n  );\n\n  const onDelete = (fileItem) => {\n    const updatedFiles = files.filter((file) => file.id !== fileItem.id);\n    setFiles(updatedFiles);\n  };\n\n  const onDropHandler = (event, acceptedFiles, rejectedFiles) => {\n    const acceptedFileDetailList = acceptedFiles.map((file, id) => (\n      {\n        file,\n        id: files.length + id,\n        fileSize: getSize(file.size),\n        networkError: false,\n      }\n    ));\n\n    const rejectedFilesDetailList = rejectedFiles.map((rejectedFile, id) => {\n      const { file, errors } = rejectedFile;\n      const errorMessageArray = errors.map((error) => error.message);\n      return {\n        file,\n        id: files.length + id,\n        fileSize: getSize(file.size),\n        status: 'error',\n        errorMessage: errorMessageArray.join(' and '),\n        networkError: false,\n      };\n    });\n    const updatedFiles = [...files, ...acceptedFileDetailList, ...rejectedFilesDetailList];\n    setFiles(updatedFiles);\n  };\n\n  const actionRenderer = (fileItem) => {\n    return (\n      <React.Fragment>\n        {fileItem.networkError && (\n          <Button\n            aria-label={`Remove ${fileItem.file.name}`}\n            appearance=\"transparent\"\n            icon=\"refresh\"\n            size=\"regular\"\n            onClick={() => onDelete(fileItem.id)}\n            className={'cursor-pointer'}\n          />\n        )}\n        <Button\n          aria-label={`Remove ${fileItem.file.name}`}\n          appearance=\"transparent\"\n          icon=\"close\"\n          size=\"regular\"\n          onClick={() => onDelete(fileItem)}\n          className={'cursor-pointer'}\n        />\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Dropzone\n        accept=\"image/jpeg, image/png\"\n        formatLabel=\"Accepted formats: PDF, jpg\"\n        sizeLabel=\"Maximum size: 25 MB\"\n        multiple={true}\n        onDrop={onDropHandler}\n        className=\"mb-5\"\n        sampleFileLink={(\n          <Link\n            href=\"https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf\"\n            download=\"Test.pdf\"\n            target=\"_blank\"\n          >\n            Download sample file\n          </Link>\n        )}\n      />\n      <FileList\n        fileList={files}\n        actionRenderer={actionRenderer}\n      />\n    </React.Fragment>\n  );\n}\n    "
    ]
  },
  "Dropzone   Disabled": {
    "prefix": "Dropzone   Disabled",
    "description": "Disabled",
    "body": [
      "import { Dropzone, Text } from '@innovaccer/design-system';\n    () => {\n  const onDrop = (event, acceptedFiles, rejectedFiles) => {\n    console.log(acceptedFiles, rejectedFiles);\n  };\n\n  return (\n    <div className=\"w-50 d-flex flex-column align-items-center\">\n      <Dropzone\n        formatLabel=\"Accepted formats: PDF, jpg\"\n        sizeLabel='Maximum size: 25 MB'\n        onDrop={onDrop}\n        disabled={true}\n        className=\"mb-3\"\n      />\n      <Text size=\"large\" weight=\"strong\">Standard</Text>\n      <Dropzone\n        formatLabel=\"Accepted formats: PDF, jpg\"\n        sizeLabel='Maximum size: 25 MB'\n        onDrop={onDrop}\n        disabled={true}\n        type=\"compressed\"\n        className=\"mt-6 mb-3\"\n      />\n      <Text size=\"large\" weight=\"strong\">Compressed</Text>\n      <Dropzone\n        formatLabel=\"Accepted formats: PDF, jpg\"\n        sizeLabel='Maximum size: 25 MB'\n        onDrop={onDrop}\n        disabled={true}\n        type=\"tight\"\n        className=\"mt-6 mb-3\"\n      />\n      <Text size=\"large\" weight=\"strong\">Tight</Text>\n    </div>\n  );\n}\n    "
    ]
  },
  "Dropzone   Format": {
    "prefix": "Dropzone   Format",
    "description": "Format",
    "body": [
      "import { Dropzone, Link } from '@innovaccer/design-system';\n    () => {\n  const onDrop = (event, acceptedFiles, rejectedFiles) => {\n    console.log(acceptedFiles, rejectedFiles);\n  };\n\n  return (\n    <Dropzone\n      accept=\"image/jpeg, image/png\"\n      formatLabel=\"Accepted formats: PDF, jpg\"\n      sizeLabel='Maximum size: 25 MB'\n      onDrop={onDrop}\n      className=\"mb-3\"\n      sampleFileLink={(\n        <Link\n          href=\"https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf\"\n          download=\"Test.pdf\"\n          target=\"_blank\"\n        >\n          Download sample file\n        </Link>\n      )}\n    />\n  );\n}\n    "
    ]
  },
  "Dropzone   Size": {
    "prefix": "Dropzone   Size",
    "description": "Size",
    "body": [
      "import { Dropzone, Link, Text } from '@innovaccer/design-system';\n    () => {\n  const onDrop = (event, acceptedFiles, rejectedFiles) => {\n    console.log(acceptedFiles, rejectedFiles);\n  };\n\n  return (\n    <div className=\"w-50 d-flex flex-column align-items-center\">\n      <Dropzone\n        formatLabel=\"Accepted formats: PDF, jpg\"\n        sizeLabel='Maximum size: 25 MB'\n        onDrop={onDrop}\n        className=\"mb-3\"\n        sampleFileLink={(\n          <Link\n            href=\"https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf\"\n            download=\"Test.pdf\"\n            target=\"_blank\"\n          >\n            Download sample file\n          </Link>\n        )}\n      />\n      <Text size=\"large\" weight=\"strong\">Standard</Text>\n      <Dropzone\n        formatLabel=\"Accepted formats: PDF, jpg\"\n        sizeLabel='Maximum size: 25 MB'\n        onDrop={onDrop}\n        type=\"compressed\"\n        className=\"mt-6 mb-3\"\n        sampleFileLink={(\n          <Link\n            href=\"https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf\"\n            download=\"Test.pdf\"\n            target=\"_blank\"\n          >\n            Download sample file\n          </Link>\n        )}\n      />\n      <Text size=\"large\" weight=\"strong\">Compressed</Text>\n      <Dropzone\n        formatLabel=\"Accepted formats: PDF, jpg\"\n        sizeLabel='Maximum size: 25 MB'\n        onDrop={onDrop}\n        type=\"tight\"\n        className=\"mt-6 mb-3\"\n        sampleFileLink={(\n          <Link\n            href=\"https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf\"\n            download=\"Test.pdf\"\n            target=\"_blank\"\n          >\n            Download sample file\n          </Link>\n        )}\n      />\n      <Text size=\"large\" weight=\"strong\">Tight</Text>\n    </div>\n  );\n}\n    "
    ]
  },
  "EditableChipInput All": {
    "prefix": "EditableChipInput All",
    "description": "All",
    "body": [
      "import { EditableChipInput } from '@innovaccer/design-system';\n    () => {\n  const [value, setValue] = React.useState();\n\n  const onChange = (updatedValue) => {\n    setValue(updatedValue);\n  };\n  const onClick = (item) =>  console.log(item);\n\n  const placeholder ='Add Value';\n  const chipOptions = { onClick, clearButton:true };\n  const chipInputOptions = {\n    chipOptions,\n    allowDuplicates:false,\n    defaultValue:[],\n    autoFocus:true\n  };\n\n  const options = {\n    placeholder,\n    value,\n    onChange,\n    chipInputOptions\n  };\n  return (\n      <div style={{ width: 'var(--spacing-9)'}}>\n        <EditableChipInput\n          {...options}\n        />\n      </div>\n  );\n}\n    "
    ]
  },
  "EditableChipInput Uncontrolled": {
    "prefix": "EditableChipInput Uncontrolled",
    "description": "Uncontrolled",
    "body": [
      "import { EditableChipInput } from '@innovaccer/design-system';\n    () => {\n  const onClick = (item) => console.log(`onClick: ${item}`);\n  const chipOptions = { onClick, clearButton: true };\n  const chipInputOptions = {\n    chipOptions,\n    allowDuplicates: false,\n    defaultValue: [],\n    autoFocus: true,\n  };\n\n  const options = {\n    chipInputOptions,\n    placeholder: 'Add Value',\n  };\n  return (\n    <div className=\"w-25\">\n      <EditableChipInput {...options} />\n    </div>\n  );\n}\n    "
    ]
  },
  "EditableDropdown All": {
    "prefix": "EditableDropdown All",
    "description": "All",
    "body": [
      "import { Label, EditableDropdown } from '@innovaccer/design-system';\n    () => {\n  const dropdownOptions = [];\n  for (let i = 1; i <= 100; i++) {\n    dropdownOptions.push({\n      label: `Option ${i}`,\n      value: `Option ${i}`,\n      group: i >= 1 && i <= 40 ? 'Group 1' : 'Group 2',\n      selected: i === 2\n    });\n  };\n\n  const getSearchedOptions = (options, searchTerm) => {\n    const result = options.filter((option) => option.label.toLowerCase().includes(searchTerm.toLowerCase()));\n    return result;\n  };\n\n  const fetchOptions = (searchTerm) => {\n    const searchedOptions = searchTerm ? getSearchedOptions(dropdownOptions, searchTerm) : dropdownOptions;\n    return new Promise(resolve => {\n      this.window.setTimeout(() => {\n        resolve({\n          options: searchedOptions,\n          count: searchedOptions.length,\n        });\n      }, 1000);\n    });\n  };\n\n  const onChange = (selectedValues) => {\n    console.log(selectedValues);\n  };\n\n  return (\n    <div className=\"w-25\">\n      <Label withInput={true} className=\"ml-5\">Editable Dropdown</Label>\n      <EditableDropdown\n        placeholder=\"Select Option\"\n        dropdownOptions={{\n          fetchOptions,\n          onChange\n        }}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "EditableDropdown   Custom Render": {
    "prefix": "EditableDropdown   Custom Render",
    "description": "Custom Render",
    "body": [
      "import { StatusHint, Icon, Label, EditableDropdown } from '@innovaccer/design-system';\n    () => {\n  const options = [];\n  for (let i = 1; i <= 10; i++) {\n    options.push({\n      label: `Option ${i}`,\n      value: `Option ${i}`,\n      group: i >= 1 && i <= 40 ? 'Group 1' : 'Group 2',\n      selected: i === 2\n    });\n  };\n\n  const onChange = (selectedValues) => {\n    console.log(selectedValues);\n  };\n\n  const customRenderer = (label) => {\n    return (\n      <StatusHint appearance=\"warning\">{label}</StatusHint>\n    );\n  };\n\n  const optionRenderer = (props) => {\n    const { label } = props.optionData;\n    return (\n      <StatusHint className=\"px-5 py-4 cursor-pointer\" appearance=\"warning\">{label}</StatusHint>\n    );\n  };\n\n  const customTrigger = (label) => {\n    return (\n      <div\n        className=\"d-flex align-items-center justify-content-between pl-5 pr-4 bg-secondary cursor-pointer w-100\"\n        style={{ height: 'var(--spacing-3)' }}\n      >\n        <StatusHint appearance=\"warning\">{label}</StatusHint>\n        <Icon name=\"keyboard_arrow_down\" />\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"w-25\">\n      <Label withInput={true} className=\"ml-5\">Editable Dropdown</Label>\n      <EditableDropdown\n        customTriggerRenderer={customRenderer}\n        placeholder=\"Select Option\"\n        dropdownOptions={{\n          options,\n          onChange,\n          optionRenderer,\n          triggerOptions: { customTrigger },\n        }}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "EditableInput All": {
    "prefix": "EditableInput All",
    "description": "All",
    "body": [
      "import { EditableInput } from '@innovaccer/design-system';\n    () => {\n  const [value, setValue] = React.useState('');\n\n  const onChange = (updatedValue) => {\n    setValue(updatedValue);\n  };\n\n  const options = {\n    placeholder: 'First Name',\n    onChange,\n    value,\n  };\n\n  return (\n    <div style={{ width: 'var(--spacing-9)', height: 'var(--spacing-3)' }}>\n      <EditableInput\n        {...options}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "EditableInput   Error": {
    "prefix": "EditableInput   Error",
    "description": "Error",
    "body": [
      "import { EditableInput } from '@innovaccer/design-system';\n    () => {\n  const [value, setValue] = React.useState('');\n\n  const onChange = (value) => {\n    setValue(value);\n  }\n\n  return (\n    <div style={{ width: 'var(--spacing-9)' }}>\n      <EditableInput\n        placeholder=\"First Name\"\n        value={value}\n        onChange={onChange}\n        error={true}\n        errorMessage={'Error Message'}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "EditableInput   Size": {
    "prefix": "EditableInput   Size",
    "description": "Size",
    "body": [
      "import { Label, EditableInput } from '@innovaccer/design-system';\n    () => {\n  const [name, setName] = React.useState('');\n  const [weight, setWeight] = React.useState('');\n\n  const onChangeName = (value) => {\n    setName(value);\n  };\n\n  const onChangeWeight = (value) => {\n    setWeight(value);\n  }\n\n  return (\n    <div className=\"d-flex\">\n      <div className=\"d-flex flex-column\" style={{ width: 'var(--spacing-9)' }}>\n        <Label withInput={true} className=\"ml-5\">Regular</Label>\n        <EditableInput\n          placeholder=\"First Name\"\n          value={name}\n          onChange={onChangeName}\n          className=\"mr-5\"\n        />\n      </div>\n      <div className=\"d-flex ml-8 flex-column\" style={{ width: 'var(--spacing-7)' }}>\n        <Label withInput={true} className=\"ml-5\">Tiny</Label>\n        <EditableInput\n          placeholder=\"Add Weight\"\n          value={weight}\n          onChange={onChangeWeight}\n          size=\"tiny\"\n        />\n      </div>\n    </div>\n  );\n}\n    "
    ]
  },
  "EditableInput   Uncontrolled": {
    "prefix": "EditableInput   Uncontrolled",
    "description": "Uncontrolled",
    "body": [
      "import { EditableInput } from '@innovaccer/design-system';\n    () => {\n  return (\n    <div style={{ width: 'var(--spacing-9)' }}>\n      <EditableInput placeholder=\"First Name\" />\n    </div>\n  );\n}\n    "
    ]
  },
  "EmptyState All": {
    "prefix": "EmptyState All",
    "description": "All",
    "body": [
      "import { EmptyState, Button } from '@innovaccer/design-system';\n    () => {\n  const title = 'Manage your outreach campaigns';\n  const description = 'Campaigns let you reach out to patients with text messages, emails and voice calls';\n  return (\n    <div className=\"h-100\" style={{ backgroundColor: 'var(--secondary-lightest)' }}>\n      <EmptyState title={title} description={description} size=\"large\" imageSrc={noContent}>\n        <Button size=\"large\" appearance=\"primary\">\n          Add campaigns\n        </Button>\n      </EmptyState>\n    </div>\n  );\n}\n    "
    ]
  },
  "EmptyState No Content Available": {
    "prefix": "EmptyState No Content Available",
    "description": "No Content Available",
    "body": [
      "import { EmptyState, Button } from '@innovaccer/design-system';\n    () => {\n  const title = 'Manage your outreach campaigns';\n  const description = 'Campaigns let you reach out to patients with text messages, emails and voice calls';\n  return (\n    <div className=\"h-100 pb-5\" style={{ backgroundColor: 'var(--secondary-lightest)' }}>\n      <EmptyState title={title} description={description} imageSrc={noContent} size=\"large\">\n        <Button size=\"large\" appearance=\"primary\">\n          Reload page\n        </Button>\n      </EmptyState>\n    </div>\n  );\n}\n    "
    ]
  },
  "EmptyState No Search Results": {
    "prefix": "EmptyState No Search Results",
    "description": "No Search Results",
    "body": [
      "import { Card, EmptyState, Button } from '@innovaccer/design-system';\n    () => {\n  return (\n    <Card className=\"py-5\">\n      <EmptyState\n        title=\"We didn't find a match\"\n        description=\"Try adjusting your search to find what you are looking for.\"\n        size=\"small\"\n        imageSrc={noSearch}\n      >\n        <Button appearance=\"basic\">Try Again</Button>\n      </EmptyState>\n    </Card>\n  );\n}\n    "
    ]
  },
  "EmptyState Page Not Loaded": {
    "prefix": "EmptyState Page Not Loaded",
    "description": "Page Not Loaded",
    "body": [
      "import { EmptyState, Button } from '@innovaccer/design-system';\n    () => (\n  <div className=\"h-100 pb-5\" style={{ backgroundColor: 'var(--secondary-lightest)' }}>\n    <EmptyState\n      title=\"There's a problem loading this page.\"\n      description=\"A technical problem is preventing the page from loading. Try reloading this page.\"\n      imageSrc={noContent}\n      size=\"large\"\n    >\n      <Button size=\"large\" appearance=\"primary\">\n        Reload page\n      </Button>\n    </EmptyState>\n  </div>\n)\n    "
    ]
  },
  "EmptyState Page Not Loaded With SVG": {
    "prefix": "EmptyState Page Not Loaded With SVG",
    "description": "Page Not Loaded With SVG",
    "body": [
      "import { EmptyState, Button } from '@innovaccer/design-system';\n    () => {\n  return (\n    <div className=\"h-100 pb-5\" style={{ backgroundColor: 'var(--secondary-lightest)' }}>\n      <EmptyState\n        title=\"There's a problem loading this page.\"\n        description=\"A technical problem is preventing the page from loading. Try reloading this page.\"\n        size=\"large\"\n        image={\n          <svg\n            height=\"256px\"\n            viewBox=\"0 0 862 374\"\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n          >\n            <title>Group 17</title>\n            <g id=\"Error-States\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n              <g id=\"Artboard-Copy-31\" transform=\"translate(-289.000000, -119.000000)\">\n                <g id=\"Group-17\" transform=\"translate(290.000000, 119.000000)\">\n                  <g id=\"Group-14\">\n                    <g id=\"Group-25\" transform=\"translate(0.000000, 366.044314)\" strokeLinecap=\"round\">\n                      <line\n                        x1=\"10\"\n                        y1=\"1.5\"\n                        x2=\"60.5188679\"\n                        y2=\"1.5\"\n                        id=\"Line-8\"\n                        stroke=\"#D4D4D4\"\n                        strokeLinejoin=\"round\"\n                      />\n                      <line\n                        x1=\"71\"\n                        y1=\"1.5\"\n                        x2=\"154.207547\"\n                        y2=\"1.5\"\n                        id=\"Line-8-Copy-7\"\n                        stroke=\"#D4D4D4\"\n                        strokeLinejoin=\"round\"\n                      />\n                      <line\n                        x1=\"169\"\n                        y1=\"1.5\"\n                        x2=\"227.443396\"\n                        y2=\"1.5\"\n                        id=\"Line-8-Copy-8\"\n                        stroke=\"#D4D4D4\"\n                        strokeWidth=\"3\"\n                        strokeLinejoin=\"round\"\n                      />\n                      <line x1=\"0\" y1=\"1.5\" x2=\"2\" y2=\"1.5\" id=\"Line-8-Copy-3\" stroke=\"#A8A7A7\" />\n                      <line\n                        x1=\"272\"\n                        y1=\"1.5\"\n                        x2=\"541\"\n                        y2=\"1.5\"\n                        id=\"Line-8-Copy-5\"\n                        stroke=\"#D4D4D4\"\n                        strokeLinejoin=\"round\"\n                      />\n                      <line\n                        x1=\"560\"\n                        y1=\"1.5\"\n                        x2=\"690\"\n                        y2=\"1.5\"\n                        id=\"Line-8-Copy-2\"\n                        stroke=\"#D4D4D4\"\n                        strokeLinejoin=\"round\"\n                      />\n                      <line\n                        x1=\"707\"\n                        y1=\"1.5\"\n                        x2=\"839\"\n                        y2=\"1.5\"\n                        id=\"Line-8-Copy-9\"\n                        stroke=\"#D4D4D4\"\n                        strokeLinejoin=\"round\"\n                      />\n                      <line\n                        x1=\"851\"\n                        y1=\"1.5\"\n                        x2=\"860\"\n                        y2=\"1.5\"\n                        id=\"Line-8-Copy-12\"\n                        stroke=\"#D4D4D4\"\n                        strokeLinejoin=\"round\"\n                      />\n                      <line\n                        x1=\"550\"\n                        y1=\"1.5\"\n                        x2=\"551\"\n                        y2=\"1.5\"\n                        id=\"Line-8-Copy-13\"\n                        stroke=\"#D4D4D4\"\n                        strokeLinejoin=\"round\"\n                      />\n                      <line\n                        x1=\"245\"\n                        y1=\"1.5\"\n                        x2=\"262\"\n                        y2=\"1.5\"\n                        id=\"Line-8-Copy-11\"\n                        stroke=\"#D4D4D4\"\n                        strokeWidth=\"3\"\n                        strokeLinejoin=\"round\"\n                      />\n                      <line x1=\"560\" y1=\"1.5\" x2=\"572\" y2=\"1.5\" id=\"Line-8-Copy-6\" stroke=\"#A8A7A7\" />\n                    </g>\n                    <g id=\"Group-13\" transform=\"translate(48.000000, 0.000000)\">\n                      <g id=\"Group-7\" transform=\"translate(0.000000, 139.000000)\" stroke=\"#2D2B2B\">\n                        <g id=\"Group-2\" transform=\"translate(110.000000, 64.799664)\">\n                          <circle id=\"Oval\" fill=\"#2D2B2B\" cx=\"41.5\" cy=\"53.5\" r=\"3.5\" />\n                          <g id=\"Group\" strokeLinecap=\"round\">\n                            <g id=\"Group-3\" transform=\"translate(0.479185, 0.479185)\">\n                              <line\n                                x1=\"-1.14563404\"\n                                y1=\"5.81703389\"\n                                x2=\"11.3090866\"\n                                y2=\"5.81703389\"\n                                id=\"Line\"\n                                transform=\"translate(5.081726, 5.817034) rotate(45.000000) translate(-5.081726, -5.817034) \"\n                              />\n                              <line\n                                x1=\"5.08172627\"\n                                y1=\"-0.534261868\"\n                                x2=\"5.08172627\"\n                                y2=\"12.1683297\"\n                                id=\"Line-Copy\"\n                                transform=\"translate(5.081726, 5.817034) rotate(45.000000) translate(-5.081726, -5.817034) \"\n                              />\n                            </g>\n                            <g id=\"Group-3-Copy\" transform=\"translate(69.479185, 0.479185)\">\n                              <line\n                                x1=\"-1.14563404\"\n                                y1=\"5.81703389\"\n                                x2=\"11.3090866\"\n                                y2=\"5.81703389\"\n                                id=\"Line\"\n                                transform=\"translate(5.081726, 5.817034) rotate(45.000000) translate(-5.081726, -5.817034) \"\n                              />\n                              <line\n                                x1=\"5.08172627\"\n                                y1=\"-0.534261868\"\n                                x2=\"5.08172627\"\n                                y2=\"12.1683297\"\n                                id=\"Line-Copy\"\n                                transform=\"translate(5.081726, 5.817034) rotate(45.000000) translate(-5.081726, -5.817034) \"\n                              />\n                            </g>\n                          </g>\n                        </g>\n                        <g id=\"Group-15\" strokeLinecap=\"round\">\n                          <path\n                            d=\"M12,4.26325641e-14 L288.023484,4.26325641e-14 C294.650901,3.96387706e-14 300.023484,5.372583 300.023484,12 L300.023484,153.220226 L300.023484,153.220226 L-3.97903932e-13,153.220226 L-3.97903932e-13,12 C-4.00491913e-13,5.372583 5.372583,4.20736441e-14 12,4.26325641e-14 Z\"\n                            id=\"Rectangle\"\n                          />\n                          <path\n                            d=\"M-5.68434189e-14,153.699075 L300.023484,153.699075 L300.023484,167.699075 C300.023484,174.326492 294.650901,179.699075 288.023484,179.699075 L12,179.699075 C5.372583,179.699075 -5.60317944e-14,174.326492 -5.68434189e-14,167.699075 L-5.68434189e-14,153.699075 L-5.68434189e-14,153.699075 Z\"\n                            id=\"Rectangle-Copy-3\"\n                          />\n                        </g>\n                        <g id=\"Group-23\" transform=\"translate(110.090476, 179.195289)\" strokeLinecap=\"round\">\n                          <g id=\"Group-22\">\n                            <rect id=\"Rectangle\" x=\"24\" y=\"0.339622642\" width=\"32\" height=\"42\" />\n                            <rect\n                              id=\"Rectangle\"\n                              fill=\"#F5F5F5\"\n                              x=\"0\"\n                              y=\"33.9607619\"\n                              width=\"80.051109\"\n                              height=\"20.3962264\"\n                              rx=\"2\"\n                            />\n                          </g>\n                        </g>\n                        <ellipse\n                          id=\"Oval\"\n                          fill=\"#2D2B2B\"\n                          cx=\"15.2386163\"\n                          cy=\"10.7996636\"\n                          rx=\"1.69417244\"\n                          ry=\"1.699916\"\n                        />\n                        <ellipse\n                          id=\"Oval-Copy\"\n                          fill=\"#2D2B2B\"\n                          cx=\"26.0017906\"\n                          cy=\"10.7996636\"\n                          rx=\"1.69417244\"\n                          ry=\"1.699916\"\n                        />\n                        <ellipse\n                          id=\"Oval-Copy-2\"\n                          fill=\"#2D2B2B\"\n                          cx=\"36.7649649\"\n                          cy=\"10.7996636\"\n                          rx=\"1.69417244\"\n                          ry=\"1.699916\"\n                        />\n                        <line\n                          x1=\"1.43587272\"\n                          y1=\"20.2493691\"\n                          x2=\"298.768563\"\n                          y2=\"20.2493691\"\n                          id=\"Line-Copy-2\"\n                          strokeLinecap=\"round\"\n                        />\n                      </g>\n                      <g id=\"Group-12-Copy\" transform=\"translate(446.119654, 224.237839)\">\n                        <g id=\"Group-6\" transform=\"translate(18.880346, 12.762161)\" fill=\"#2D2B2B\">\n                          <circle id=\"Oval\" cx=\"6.5\" cy=\"3.5\" r=\"1.5\" />\n                          <circle id=\"Oval-Copy-11\" cx=\"16\" cy=\"15\" r=\"1\" />\n                          <circle id=\"Oval-Copy-3\" cx=\"14.5\" cy=\"1.5\" r=\"1.5\" />\n                          <circle id=\"Oval-Copy-4\" cx=\"13.5\" cy=\"9.5\" r=\"1.5\" />\n                          <circle id=\"Oval-Copy-9\" cx=\"8\" cy=\"11\" r=\"1\" />\n                          <circle id=\"Oval-Copy-6\" cx=\"19\" cy=\"7\" r=\"1\" />\n                          <circle id=\"Oval-Copy-7\" cx=\"25\" cy=\"4\" r=\"1\" />\n                          <circle id=\"Oval-Copy-8\" cx=\"1\" cy=\"8\" r=\"1\" />\n                        </g>\n                        <path\n                          d=\"M0.159841768,12.0319085 C1.45898037,6.55929267 3.28782305,3.31023965 5.64636981,2.28474948 C6.49004216,1.91792288 11.2404186,0.213542443 12.131247,0.0967511284 C14.4649583,9.25149141 7.09664695,12.6483281 2.81130343,12.9621489 C0.490203836,13.8714293 -0.393616719,13.5613492 0.159841768,12.0319085 Z\"\n                          id=\"Path-46\"\n                          fill=\"#F0F8FF\"\n                        />\n                        <path\n                          d=\"M147.94972,123.94893 C161.729512,121.740831 173.373054,109.678575 182.880346,87.7621614 C177.189708,111.886674 164.668932,127.176707 145.318018,133.63226 L147.94972,123.94893 Z\"\n                          id=\"Path-47\"\n                          fill=\"#F0F8FF\"\n                        />\n                        <path\n                          d=\"M145.943375,125.047021 C146.721054,125.205985 147.315607,125.289058 147.727034,125.29624 C148.138461,125.303421 148.640232,125.303421 149.232346,125.29624 L147.623459,131.230069 C146.767427,131.452105 145.998949,131.55718 145.318026,131.545295 C144.637102,131.533409 144.051269,131.458028 143.560527,131.319151 L145.943375,125.047021 Z\"\n                          id=\"Path-48\"\n                          fill=\"#F0F8FF\"\n                          transform=\"translate(146.396436, 128.296611) rotate(-1.000000) translate(-146.396436, -128.296611) \"\n                        />\n                      </g>\n                      <g id=\"Group-12\" transform=\"translate(451.119654, 191.237839)\">\n                        <g id=\"Group-6\" transform=\"translate(18.880346, 40.762161)\" fill=\"#2D2B2B\">\n                          <circle id=\"Oval\" cx=\"6.5\" cy=\"3.5\" r=\"1.5\" />\n                          <circle id=\"Oval-Copy-11\" cx=\"16\" cy=\"15\" r=\"1\" />\n                          <circle id=\"Oval-Copy-3\" cx=\"14.5\" cy=\"1.5\" r=\"1.5\" />\n                          <circle id=\"Oval-Copy-4\" cx=\"13.5\" cy=\"9.5\" r=\"1.5\" />\n                          <circle id=\"Oval-Copy-9\" cx=\"8\" cy=\"11\" r=\"1\" />\n                          <circle id=\"Oval-Copy-6\" cx=\"19\" cy=\"7\" r=\"1\" />\n                          <circle id=\"Oval-Copy-7\" cx=\"25\" cy=\"4\" r=\"1\" />\n                          <circle id=\"Oval-Copy-8\" cx=\"1\" cy=\"8\" r=\"1\" />\n                        </g>\n                        <path\n                          d=\"M57.880346,67.5369449 C38.9408126,74.1814305 0.159841768,74.5285405 0.159841768,37.3246409 C1.35555104,22.0427524 33.6341456,26.192421 40.1414615,26.192421 C46.6487775,26.192421 62.6014465,30.7058259 70.535254,30.7058259 C78.4690614,30.7058259 62.6014465,18.8373312 70.535254,3.95074746 C73.3002735,-2.24633295 76.4153041,-0.444383806 79.880346,9.35659488\"\n                          id=\"Path-42\"\n                          stroke=\"#2D2B2B\"\n                          strokeLinecap=\"round\"\n                        />\n                        <path\n                          d=\"M83.3843933,28.0967511 C78.6990518,18.3415279 80.5259955,9.09259547 88.8652243,0.349953887 C97.6219004,-3.69874926 101.730766,28.0967511 101.730766,58.7621614 C104.19468,74.3896189 115.391837,80.1938166 132.042878,97.891113 C154.421962,124.198633 153.21582,157.738198 136.445274,171.921811 C128.177642,178.359007 83.3843933,173.389881 72.5010672,174.806475 C61.6177411,176.22307 63.880346,167.490305 69.9178111,163.241646 C75.9552761,158.992986 83.615842,163.43591 86.3761751,157.157207 C89.1365081,150.878504 79.880346,125.084895 101.730766,105.449223\"\n                          id=\"Path-43\"\n                          stroke=\"#2D2B2B\"\n                          strokeLinecap=\"round\"\n                        />\n                        <path\n                          d=\"M0.159841768,40.0319085 C1.45898037,34.5592927 3.28782305,31.3102396 5.64636981,30.2847495 C6.49004216,29.9179229 11.2404186,28.2135424 12.131247,28.0967511 C14.4649583,37.2514914 7.09664695,40.6483281 2.81130343,40.9621489 C0.490203836,41.8714293 -0.393616719,41.5613492 0.159841768,40.0319085 Z\"\n                          id=\"Path-46\"\n                          stroke=\"#2D2B2B\"\n                          fill=\"#2D2B2B\"\n                        />\n                        <circle id=\"Oval\" stroke=\"#2D2B2B\" fill=\"#2D2B2B\" cx=\"66.380346\" cy=\"39.2621614\" r=\"2.5\" />\n                        <path\n                          d=\"M147.94972,151.94893 C161.729512,149.740831 173.373054,137.678575 182.880346,115.762161 C177.189708,139.886674 164.668932,155.176707 145.318018,161.63226 L147.94972,151.94893 Z\"\n                          id=\"Path-47\"\n                          stroke=\"#2D2B2B\"\n                          fill=\"#F5F5F5\"\n                          strokeLinecap=\"round\"\n                        />\n                        <path\n                          d=\"M145.943375,153.047021 C146.721054,153.205985 147.315607,153.289058 147.727034,153.29624 C148.138461,153.303421 148.640232,153.303421 149.232346,153.29624 L147.623459,159.230069 C146.767427,159.452105 145.998949,159.55718 145.318026,159.545295 C144.637102,159.533409 144.051269,159.458028 143.560527,159.319151 L145.943375,153.047021 Z\"\n                          id=\"Path-48\"\n                          fill=\"#FFFFFF\"\n                          transform=\"translate(146.396436, 156.296611) rotate(-1.000000) translate(-146.396436, -156.296611) \"\n                        />\n                      </g>\n                      <path\n                        d=\"M190,368.487294 L234.238468,368.487294 C239.314319,369.290012 245.614592,367.654648 253.139286,363.581201 C264.426327,357.471032 267.858415,368.487294 277.858415,368.487294 C284.525082,368.487294 290.564169,368.487294 295.975677,368.487294 C308.105846,367.752847 318.818393,364.898703 328.113318,359.924862 C337.408243,354.951021 346.885938,356.1698 356.546405,363.581201 C363.362552,366.85193 373.370179,368.487294 386.569285,368.487294 C399.768392,368.487294 405.050452,368.487294 402.415465,368.487294 C421.922996,370.753312 431.676762,356.969067 431.676762,327.13456 C435.09453,283.738068 431.354405,251.489375 454.391603,251 C465.05827,251 469.927735,262.333333 469,285\"\n                        id=\"Path-40\"\n                        stroke=\"#2D2B2B\"\n                        strokeLinecap=\"round\"\n                      />\n                      <g id=\"Group-11\" transform=\"translate(335.000000, 248.000000)\" stroke=\"#2D2B2B\">\n                        <rect id=\"Rectangle\" strokeLinecap=\"round\" x=\"0\" y=\"0\" width=\"53\" height=\"55\" rx=\"11\" />\n                        <rect\n                          id=\"Rectangle-Copy\"\n                          fill=\"#D8D8D8\"\n                          strokeLinecap=\"round\"\n                          x=\"9\"\n                          y=\"10\"\n                          width=\"35\"\n                          height=\"35\"\n                          rx=\"6\"\n                        />\n                        <g id=\"Group-8\" transform=\"translate(16.000000, 18.000000)\" fill=\"#2D2B2B\">\n                          <circle id=\"Oval\" cx=\"3.5\" cy=\"4.5\" r=\"2.5\" />\n                          <circle id=\"Oval-Copy-5\" cx=\"16.5\" cy=\"4.5\" r=\"2.5\" />\n                          <circle id=\"Oval-Copy-10\" cx=\"10.5\" cy=\"16.5\" r=\"2.5\" />\n                        </g>\n                      </g>\n                      <g\n                        id=\"Group-9\"\n                        opacity=\"0.292457217\"\n                        transform=\"translate(666.000000, 175.000000)\"\n                        stroke=\"#2D2B2B\"\n                        strokeLinecap=\"round\"\n                      >\n                        <g id=\"Group-10\" transform=\"translate(0.210927, 0.216768)\">\n                          <path\n                            d=\"M42.0690079,145.17992 C12.8470242,136.39069 -0.391453021,120.752887 2.35357633,98.266512 C9.10450589,79.0610482 21.5734395,104.303723 25.0826847,106.092326 C28.5919298,107.880929 38.2418862,107.712489 24.7844394,89.0058644 C11.3269926,70.2992402 15.2379893,52.6776658 21.3038914,54.3404599 C27.3697934,56.0032539 26.2406531,63.8037632 29.5072692,67.3540161 C32.7738853,70.9042689 40.1600018,73.4611958 36.1175752,46.7877595 C32.0751486,20.1143233 35.1193681,-10.399489 50.7595826,5.27596655 C66.3997971,20.9514221 54.8092961,54.0869616 52.7844394,58.3480546 C50.7595826,62.6091477 47.9971621,77.1816087 59.6987196,72.2678124 C67.2011073,66.7502645 72.8251771,49.9990494 78.9858742,59.6619884 C85.1465713,69.3249274 78.6065944,84.5996388 64.0604379,94.5267084 C47.0702486,102.323232 56.3989632,110.958401 69.0917013,104.612456 C87.3832726,91.7028917 87.9264783,122.823126 69.0917013,135.328319 C56.5351833,143.665115 47.5276188,146.948982 42.0690079,145.17992 Z\"\n                            id=\"Path-51\"\n                            transform=\"translate(42.507413, 73.322220) rotate(1.000000) translate(-42.507413, -73.322220) \"\n                          />\n                          <path\n                            d=\"M45.6898305,144.783232 C41.4466078,130.163183 40.3858021,112.327725 42.5074135,91.2768568 C45.6898305,59.7005543 47.7265777,26.9140149 45.6898305,20.401853\"\n                            id=\"Path-52\"\n                          />\n                        </g>\n                        <g id=\"Group-18\" transform=\"translate(13.000000, 148.000000)\">\n                          <polygon\n                            id=\"Path-49\"\n                            points=\"0.430863052 0.00504747026 61.4308631 0.00504747026 42.9997401 43.0050475 18.861986 43.0050475\"\n                          />\n                          <line x1=\"56.4308631\" y1=\"10.5050475\" x2=\"6.43086305\" y2=\"10.5050475\" id=\"Path-50\" />\n                        </g>\n                      </g>\n                      <g id=\"Group\" opacity=\"0.133300781\" transform=\"translate(162.000000, 0.000000)\" fill=\"#909090\">\n                        <rect id=\"Rectangle-Copy\" x=\"50\" y=\"33\" width=\"75\" height=\"2\" rx=\"1\" />\n                        <rect id=\"Rectangle-Copy-3\" x=\"81\" y=\"15\" width=\"2\" height=\"18\" rx=\"1\" />\n                        <rect id=\"Rectangle-Copy-5\" x=\"110\" y=\"0\" width=\"2\" height=\"13\" rx=\"1\" />\n                        <rect id=\"Rectangle-Copy-10\" x=\"32\" y=\"14\" width=\"2\" height=\"8\" rx=\"1\" />\n                        <rect id=\"Rectangle-Copy-6\" x=\"111\" y=\"35\" width=\"2\" height=\"18\" rx=\"1\" />\n                        <rect id=\"Rectangle-Copy-8\" x=\"83\" y=\"54\" width=\"2\" height=\"17\" rx=\"1\" />\n                        <rect id=\"Rectangle-Copy-12\" x=\"24\" y=\"54\" width=\"2\" height=\"12\" rx=\"1\" />\n                        <rect id=\"Rectangle-Copy-7\" x=\"59\" y=\"34\" width=\"2\" height=\"6\" rx=\"1\" />\n                        <rect id=\"Rectangle-Copy-2\" x=\"10\" y=\"13\" width=\"127\" height=\"2\" rx=\"1\" />\n                        <rect id=\"Rectangle-Copy-4\" x=\"0\" y=\"53\" width=\"140\" height=\"2\" rx=\"1\" />\n                      </g>\n                      <g\n                        id=\"Group-Copy\"\n                        opacity=\"0.133300781\"\n                        transform=\"translate(412.000000, 83.000000)\"\n                        fill=\"#909090\"\n                      >\n                        <rect\n                          id=\"Rectangle-Copy\"\n                          x=\"7\"\n                          y=\"35.4666667\"\n                          width=\"131\"\n                          height=\"1.86666667\"\n                          rx=\"0.933333333\"\n                        />\n                        <rect id=\"Rectangle-Copy-3\" x=\"21\" y=\"13.0666667\" width=\"2\" height=\"22.4\" rx=\"1\" />\n                        <rect id=\"Rectangle-Copy-5\" x=\"56\" y=\"0\" width=\"2\" height=\"11.2\" rx=\"1\" />\n                        <rect id=\"Rectangle-Copy-6\" x=\"123\" y=\"37.3333333\" width=\"2\" height=\"22.4\" rx=\"1\" />\n                        <rect id=\"Rectangle-Copy-8\" x=\"99\" y=\"60.6666667\" width=\"2\" height=\"20.5333333\" rx=\"1\" />\n                        <rect id=\"Rectangle-Copy-9\" x=\"27\" y=\"60.6666667\" width=\"2\" height=\"11.2\" rx=\"1\" />\n                        <rect id=\"Rectangle-Copy-11\" x=\"163\" y=\"60.6666667\" width=\"2\" height=\"11.2\" rx=\"1\" />\n                        <rect id=\"Rectangle-Copy-7\" x=\"60\" y=\"37.3333333\" width=\"2\" height=\"22.4\" rx=\"1\" />\n                        <rect id=\"Rectangle-Copy-2\" x=\"0\" y=\"11.2\" width=\"74\" height=\"1.86666667\" rx=\"0.933333333\" />\n                        <rect\n                          id=\"Rectangle-Copy-4\"\n                          x=\"4\"\n                          y=\"59.7333333\"\n                          width=\"186\"\n                          height=\"1.86666667\"\n                          rx=\"0.933333333\"\n                        />\n                      </g>\n                    </g>\n                  </g>\n                  <g id=\"Group-4\" transform=\"translate(510.000000, 285.000000)\" stroke=\"#2D2B2B\" strokeLinecap=\"round\">\n                    <path\n                      d=\"M0.140579809,20 L15.7942732,20 C16.7811299,6.66666667 14.217576,0 8.10361158,0 C1.98964714,0 -0.664696781,6.66666667 0.140579809,20 Z\"\n                      id=\"Path-41\"\n                      fill=\"#D8D8D8\"\n                    />\n                    <g id=\"Group-5\" transform=\"translate(4.000000, 19.000000)\" strokeWidth=\"2\">\n                      <line x1=\"1\" y1=\"1.997831\" x2=\"1\" y2=\"8.875\" id=\"Line-2\" />\n                      <line x1=\"8\" y1=\"1.997831\" x2=\"8\" y2=\"8.875\" id=\"Line-2-Copy\" />\n                    </g>\n                  </g>\n                </g>\n              </g>\n            </g>\n          </svg>\n        }\n      >\n        <Button size=\"large\" appearance=\"primary\">\n          Reload page\n        </Button>\n      </EmptyState>\n    </div>\n  );\n}\n    "
    ]
  },
  "FileList All": {
    "prefix": "FileList All",
    "description": "All",
    "body": [
      "import { FileList, Button } from '@innovaccer/design-system';\n    () => {\n  const fileList = [\n    {\n      file:{\n        name: 'Audio File.mp3',\n        size: '3 MB',\n        type: 'audio',\n      },\n      status: 'uploading',\n      progress: 45,\n      id: 1,\n    },\n    {\n      file:{\n        name: 'Video File.mp4',\n        size: '3 MB',\n        type: 'video',\n      },\n      status: 'completed',\n      id: 2,\n    },\n    {\n      file:{\n        name: 'Image file name can be some times very long in size so it will get truncated File.jpeg',\n        size: '3 MB',\n        type: 'image',\n      },\n      status: 'error',\n      errorMessage: 'Network failure',\n      id: 3,\n    },\n    {\n      file:{\n        name: 'Document File.pdf',\n        size: '3 MB',\n        type: 'application',\n      },\n      status: 'completed',\n      id: 4,\n    },\n    {\n      file:{\n        name: 'Other File',\n        size: '3 MB',\n        type: 'others',\n      },\n      status: 'completed',\n      id: 5,\n    }\n  ];\n\n  const onClick = (file) => {\n    console.log(`Clicked: ${file}`);\n  };\n\n  return (\n    <div className=\"pt-6 w-50\">\n      <FileList\n        onClick={onClick}\n        fileList={fileList}\n        actionRenderer={fileItem => {\n          if (fileItem.id === 3) {\n            return(\n              <>\n              <Button\n                appearance=\"transparent\"\n                icon=\"refresh\"\n                size=\"regular\"\n                onClick={() => onClick(fileItem)}\n                className={'cursor-pointer'}\n              />\n              <Button\n                appearance=\"transparent\"\n                icon=\"close\"\n                size=\"regular\"\n                onClick={() => onClick(fileItem)}\n                className={'cursor-pointer ml-2'}\n              />\n            </>\n            );\n          }\n          return (\n            <Button\n              appearance=\"transparent\"\n              icon=\"close\"\n              size=\"regular\"\n              onClick={() => {}}\n              className={'cursor-pointer'}\n            />\n          );\n        }\n        }\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "FileUploader": {
    "prefix": "FileUploader",
    "description": "All",
    "body": [
      "import {  } from '@innovaccer/design-system';\n    () => <></>\n    "
    ]
  },
  "FullscreenModal": {
    "prefix": "FullscreenModal",
    "description": "Medium",
    "body": [
      "import { Button, FullscreenModal, Text, Heading, Paragraph } from '@innovaccer/design-system';\n    \n() => {\n  const [open, setOpen] = React.useState(false);\n\n  const onClose = () => {\n    setOpen(!open);\n  };\n\n  const openModal = () => {\n    setOpen(true);\n  };\n\n\n  return (\n    <div>\n\n      <Button className=\"m-8\" appearance=\"primary\" onClick={openModal}>\n        Open Modal\n      </Button>\n\n      <FullscreenModal\n        open={open}\n        dimension=\"medium\"\n        onClose={onClose}\n        headerOptions={{\n          heading: 'This is modal Heading',\n          subHeading: 'This is modal subheading'\n        }}\n        footerOptions={{\n          actions: [\n            {\n              children: 'Basic',\n              appearance: 'basic',\n              onClick: ev => console.log('Basic button click', ev)\n            },\n            {\n              children: 'Primary',\n              appearance: 'primary',\n              className: 'ml-4',\n              onClick: ev => console.log('Primary button click', ev)\n            }\n          ]\n        }}\n      >\n        <Text>Fullscreen Modal Body</Text>\n        <Heading size=\"s\">Description Title</Heading>\n        <Paragraph>\n          Adding a subheading clearly indicates the hierarchy of the information.\n        </Paragraph>\n        <Paragraph>\n          Card Sections include supporting text like an article summary or a restaurant description.\n        </Paragraph>\n      </FullscreenModal>\n    </div>\n  );\n}\n    "
    ]
  },
  "Grid All": {
    "prefix": "Grid All",
    "description": "All",
    "body": [
      "import { Card, Grid } from '@innovaccer/design-system';\n    () => {\n  const applyLoaderSchema = true;\n\n  const loading = false;\n\n  const error = false;\n\n  const applySchema = true;\n\n  const applyData = true;\n\n  const totalRecords = data.length;\n\n  const type = 'resource';\n\n  const size = 'comfortable';\n\n  const draggable = true;\n\n  const nestedRows = false;\n\n  const withCheckbox = false;\n\n  const showMenu = true;\n\n  const withPagination = false;\n\n  const page = 1;\n\n  const pageSize = 12;\n\n  const headCellTooltip = false;\n\n  const separator = false;\n\n  return (\n    <div\n      style={{\n        height: '350px',\n      }}\n    >\n      <Card className=\"h-100 overflow-hidden\">\n        <Grid\n          schema={applySchema ? schema : undefined}\n          data={applyData ? data : undefined}\n          loading={loading}\n          error={error}\n          errorTemplate={errorTemplate}\n          totalRecords={totalRecords}\n          withCheckbox={withCheckbox}\n          showMenu={showMenu}\n          type={type}\n          size={size}\n          headCellTooltip={headCellTooltip}\n          separator={separator}\n          draggable={draggable}\n          nestedRows={nestedRows}\n          nestedRowRenderer={nestedRowRenderer}\n          withPagination={withPagination}\n          page={page}\n          pageSize={pageSize}\n          loaderSchema={applyLoaderSchema ? loaderSchema : undefined}\n          onRowClick={(rowData, rowIndex) =>\n            action(`on-row-click:- rowIndex: ${rowIndex} data: ${JSON.stringify(rowData)}`)()\n          }\n          onSelect={(rowIndex, selected) => action(`on-select:- rowIndex: ${rowIndex} selected: ${selected}`)()}\n          onSelectAll={(selected, selectedAll) => {\n            action(`on-select:- selected: ${selected} selectedAll: ${selectedAll}`)();\n          }}\n          sortingList={[{ name: 'name', type: 'desc' }]}\n          filterList={{\n            name: ['h-r', 's-z'],\n          }}\n        />\n      </Card>\n    </div>\n  );\n}\n    "
    ]
  },
  "Grid Grid Cell": {
    "prefix": "Grid Grid Cell",
    "description": "Grid Cell",
    "body": [
      "import { GridCell } from '@innovaccer/design-system';\n    () => {\n  const schema = {\n    name: 'name',\n    displayName: 'Name',\n  };\n\n  const size = 'comfortable';\n\n  const width = 250;\n\n  const cellType = 'STATUS_HINT';\n\n  const align = 'left';\n\n  const tooltip = true;\n\n  const loading = false;\n\n  return (\n    <div className=\"Grid-cell Grid-cell--body\" style={{ width, border: 'var(--border)' }}>\n      <div className=\"Grid-cellContent\">\n        <GridCell\n          size={size}\n          rowIndex={1}\n          colIndex={1}\n          loading={loading}\n          data={{\n            name: {\n              title: 'Schreiber Brynn',\n              metaList: ['Meta Item 1', 'Meta Item 2'],\n              icon: 'events',\n            },\n          }}\n          schema={{\n            ...schema,\n            width,\n            cellType,\n            align,\n            tooltip,\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n    "
    ]
  },
  "Grid In Modal": {
    "prefix": "Grid In Modal",
    "description": "Grid In Modal",
    "body": [
      "import { Button, Modal, Grid, Text } from '@innovaccer/design-system';\n    () => {\n  const [open, setOpen] = React.useState(false);\n  const backdropClose = false;\n\n  const onClose = () => {\n    setOpen(!open);\n  };\n\n  const gridData = [\n    {\n      fullname: 'Wadsworth Seden',\n      gender: 'Male',\n    },\n    {\n      fullname: 'Jakie Hapke',\n      gender: 'Male',\n    },\n    {\n      fullname: 'Louella Veneur',\n      gender: 'Female',\n    },\n  ];\n\n  return (\n    <div>\n      <Button appearance=\"primary\" onClick={() => setOpen(true)}>\n        Open Modal\n      </Button>\n      <Modal\n        open={open}\n        dimension=\"large\"\n        backdropClose={backdropClose}\n        onClose={onClose}\n        headerOptions={{\n          heading: 'Patients',\n        }}\n        footer={\n          <React.Fragment>\n            <Button>Cancel</Button>\n            <Button className=\"ml-4\">Next</Button>\n          </React.Fragment>\n        }\n        seperator={true}\n      >\n        <Grid\n          data-test=\"modal-in-grid\"\n          totalRecords={5}\n          pageSize={5}\n          schema={[\n            {\n              name: 'fullName',\n              displayName: 'Name',\n              width: '50%',\n              cellRenderer: ({ data }) => {\n                return (\n                  <div className=\"w-100\" style={{ textAlign: 'left' }}>\n                    <Text className=\"d-block\">{data.fullname}</Text>\n                    <Text className=\"d-block\" size=\"small\" appearance=\"subtle\">\n                      {data.fullname}\n                    </Text>\n                  </div>\n                );\n              },\n            },\n            {\n              name: 'gender',\n              displayName: 'Gender',\n              width: '50%',\n              cellRenderer: ({ data }) => {\n                return (\n                  <div className=\"w-100\" style={{ textAlign: 'left' }}>\n                    <Text className=\"d-block\">{data.gender}</Text>\n                    <Text className=\"d-block\" size=\"small\" appearance=\"subtle\">\n                      {data.gender}\n                    </Text>\n                  </div>\n                );\n              },\n            },\n          ]}\n          data={gridData}\n          showHead={true}\n          showMenu={false}\n          loading={false}\n        />\n      </Modal>\n    </div>\n  );\n}\n    "
    ]
  },
  "Grid   Grid Loading State": {
    "prefix": "Grid   Grid Loading State",
    "description": "Grid Loading State",
    "body": [
      "import { Grid } from '@innovaccer/design-system';\n    () => {\n  const schema = [\n    {\n      name: 'name',\n      displayName: 'Name',\n      width: '50%'\n    },\n    {\n      name: 'gender',\n      displayName: 'Gender',\n      width: '50%'\n    }\n  ];\n\n  return (\n    <Grid\n      totalRecords={10}\n      pageSize={5}\n      schema={schema}\n      loading={true}\n    />\n  );\n}\n\n    "
    ]
  },
  "Heading": {
    "prefix": "Heading",
    "description": "Size",
    "body": [
      "import { Heading, Text } from '@innovaccer/design-system';\n    () => {\n  const sizes = ['s', 'm', 'l', 'xl', 'xxl'];\n\n  return (\n    <div className=\"Row\">\n      {sizes.map((HeadingSize, ind) => {\n        return (\n          <div key={ind} className=\"mr-7\">\n            <div className=\"h-50\">\n              <Heading size={HeadingSize}>Heading</Heading>\n            </div>\n            <br />\n            <Text weight=\"strong\">{HeadingSize}</Text>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n    "
    ]
  },
  "HorizontalNav All": {
    "prefix": "HorizontalNav All",
    "description": "All",
    "body": [
      "import { HorizontalNav } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      name: 'menu_1',\n      label: 'Menu 1',\n      icon: 'event',\n    },\n    {\n      name: 'menu_2',\n      label: 'Menu 2',\n      count: 10\n    },\n    {\n      name: 'menu_3',\n      label: 'Menu 3',\n      disabled: true\n    }\n  ];\n\n  const [active, setActive] = React.useState({\n    name: 'menu_1'\n  });\n\n  const onClickHandler = (menu) => {\n    console.log('menu-clicked: ', menu);\n    setActive(menu);\n  };\n\n  return (\n    <div className=\"bg-secondary-lightest\" style={{ height: '200px' }}>\n      <div className=\"bg-light border-top border-bottom p-3\">\n        <HorizontalNav\n          className=\"w-100 justify-content-center\"\n          menus={data}\n          active={active}\n          onClick={onClickHandler}\n        />\n      </div>\n  </div>\n  );\n}\n    "
    ]
  },
  "HorizontalNav Default Horizontal Navigation": {
    "prefix": "HorizontalNav Default Horizontal Navigation",
    "description": "Default Horizontal Navigation",
    "body": [
      "import { HorizontalNav } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      name: 'engagements',\n      label: 'Engagements',\n    },\n    {\n      name: 'no_linked_activities',\n      label: 'No Linked Activities',\n    },\n  ];\n\n  const [active, setActive] = React.useState({\n    name: 'engagements'\n  });\n\n  const onClickHandler = (menu) => {\n    console.log('menu-clicked: ', menu);\n    setActive(menu);\n  };\n\n  return (\n    <div className=\"d-flex align-items-center py-6 bg-secondary-lightest\">\n      <HorizontalNav\n        className=\"w-100 justify-content-center\"\n        menus={data}\n        active={active}\n        onClick={onClickHandler}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "HorizontalNav Horizontal Navigation With Animation": {
    "prefix": "HorizontalNav Horizontal Navigation With Animation",
    "description": "Horizontal Navigation With Animation",
    "body": [
      "import { Card, Table, Text, Button, List, HorizontalNav } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      name: 'menu_1',\n      label: 'Menu 1',\n      icon: 'event',\n    },\n    {\n      name: 'menu_2',\n      label: 'Menu 2',\n      count: 10\n    },\n    {\n      name: 'menu_3',\n      label: 'Menu 3',\n      disabled: true\n    }\n  ];\n\n  const [menu, setActiveMenu] = React.useState({\n    name: 'menu_1',\n  });\n  const [active, setActive] = React.useState({\n    name: 'menu_1',\n  });\n\n  const handleAnimationEnd = () => {\n    setActive(menu);\n  }\n\n  const onClickHandler = (menu) => {\n    console.log('menu-clicked: ', menu);\n    setActiveMenu(menu);\n  };\n\n  const getMenu1List = (active, menu, handleAnimationEnd) => {\n\n    const data = [\n      {\n        name: 'MSSP Track 1 Urban',\n        status: 'Active',\n        measures: '9',\n        current_period: 'March 2017 - Feb 2018',\n        added_in: 'March 2014',\n      },\n      {\n        name: 'MSSP Track 1 Rural',\n        status: 'Active',\n        measures: '9',\n        current_period: 'March 2017 - Feb 201',\n        added_in: 'March 2015',\n      },\n      {\n        name: 'MSSP Track 2',\n        status: 'Inactive',\n        measures: '14',\n        current_period: 'March 2017 - Feb 201',\n        added_in: 'March 2016',\n      },\n      {\n        name: 'Aetna',\n        status: 'Active',\n        measures: '20',\n        current_period: 'March 2017 - Feb 201',\n        added_in: 'March 2019',\n      },\n      {\n        name: 'BCBS',\n        status: 'Active',\n        measures: '16',\n        current_period: 'March 2017 - Feb 201',\n        added_in: 'March 2017',\n      },\n    ];\n  \n    const schema = [\n      {\n        name: 'name',\n        displayName: 'Name',\n        width: '20%',\n        sorting: false,\n      },\n      {\n        name: 'status',\n        displayName: 'Status',\n        width: '20%',\n        translate: (a) => ({\n          title: a.status,\n          statusAppearance: a.status === 'Inactive' ? 'default' : 'success',\n        }),\n        cellType: 'STATUS_HINT',\n        sorting: false,\n      },\n      {\n        name: 'measures',\n        displayName: 'No. of Measures',\n        width: '20%',\n        sorting: false,\n      },\n      {\n        name: 'current_period',\n        displayName: 'Current Period',\n        width: '20%',\n        sorting: false,\n      },\n      {\n        name: 'added_in',\n        displayName: 'Added in',\n        width: '20%',\n        sorting: false,\n      },\n    ];\n  \n    return (\n      <Card\n        onAnimationEnd={handleAnimationEnd}\n        className={`${menu.name != active.name ? 'slideOut-left' : 'slideIn-left'} py-4`}\n      >\n        <Table\n          size=\"compressed\"\n          showMenu={false}\n          separator={false}\n          data={data}\n          schema={schema}\n          withHeader={true}\n          withPagination={false}\n          headerOptions={{ withSearch: true, }}\n          onSearch={(currData, searchTerm) => {\n            return currData.filter((d) => d.name.toLowerCase().match(searchTerm.toLowerCase()));\n          }}\n        />\n      </Card>\n    )\n  }\n\n  const getMenu2List = (active, menu, handleAnimationEnd) => {\n    const data = [\n      {\n        firstName: 'John',\n        lastName: 'Doe',\n        email: 'jonathandoe@gamil.com',\n        owner: true\n      },\n      {\n        firstName: 'Katty',\n        lastName: 'Perry',\n        email: 'kattyperry21@gamil.com',\n        edit: true\n      },\n      {\n        firstName: 'Daniel',\n        lastName: 'Low',\n        email: 'daniellow02@yahoo.com',\n        view: true\n      },\n    ];\n  \n    const schema = [\n      {\n        name: 'info',\n        displayName: 'Info',\n        width: '80%',\n        cellType: 'AVATAR_WITH_META_LIST',\n        translate: a => ({\n          firstName: a.firstName,\n          lastName: a.lastName,\n          title: `${a.firstName} ${a.lastName}`,\n          metaList: [a.email]\n        }),\n      },\n      {\n        name: 'rights',\n        displayName: 'Rights',\n        width: '20%',\n        cellRenderer: (props) => {\n          const renderRights = () => {\n            if (props.data.owner) {\n              return <Text appearance=\"subtle\" className=\"pr-5\">owner</Text>;\n            }\n  \n            if (props.data.edit || props.data.view) {\n              const rights = props.data.edit ? 'edit' : 'view';\n              return (\n                <Button\n                  icon=\"keyboard_arrow_down\"\n                  iconAlign=\"right\"\n                  appearance=\"transparent\"\n                  onClick={e => e.stopPropagation()}\n                >\n                  {`can ${rights}`}\n                </Button>\n              );\n            }\n  \n            return null;\n          };\n  \n          return (\n            <div className=\"d-flex align-items-center justify-content-end flex-grow-1\">\n              {renderRights()}\n            </div>\n          );\n        }\n      }\n    ];\n  \n    return (\n        <Card \n          onAnimationEnd={handleAnimationEnd}\n          className={`${menu.name != active.name ? 'slideOut-left' : 'slideIn-left'} py-4`}\n        >\n          <Text size=\"large\" weight=\"strong\" className=\"ml-5\">Sharing Test Manual</Text>\n          <List\n            type=\"resource\"\n            withHeader={true}\n            headerOptions={{\n              withSearch: true,\n              dynamicColumn: false\n            }}\n            separator={false}\n            showMenu={false}\n            data={data}\n            schema={schema}\n            withPagination={false}\n            onSearch={(currData, searchTerm) => {\n              return currData.filter(d =>\n                d.firstName.toLowerCase().match(searchTerm.toLowerCase())\n                || d.lastName.toLowerCase().match(searchTerm.toLowerCase())\n              );\n            }}\n            onRowClick={(rowData, rowIndex) =>\n              console.log(`o\n-row-click:- rowIndex: ${rowIndex} data: ${JSON.stringify(rowData)}`)\n            }\n          />\n        </Card>\n    );\n  };\n\n  return (\n    <div className='bg-secondary-lightest h-100 p-5 border-top border-bottom'>\n      <HorizontalNav\n        className=\"w-100 pb-5 mb-5 justify-content-center border-bottom\"\n        menus={data}\n        active={menu}\n        onClick={onClickHandler}\n      />\n\n      {active.name === 'menu_1' ?\n        getMenu1List(active, menu, handleAnimationEnd)\n        :\n        getMenu2List(active, menu, handleAnimationEnd)\n      }\n    </div>\n  );\n}\n    "
    ]
  },
  "HorizontalNav Horizontal Navigation With Count": {
    "prefix": "HorizontalNav Horizontal Navigation With Count",
    "description": "Horizontal Navigation With Count",
    "body": [
      "import { HorizontalNav } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      name: 'to-dos',\n      label: 'To-dos',\n      count: 15\n    },\n    {\n      name: 'activity_received',\n      label: 'Activity received',\n      count: 7\n    },\n    {\n      name: 'activity_sent',\n      label: 'Activity sent',\n      count: 9\n    },\n  ];\n\n  const [active, setActive] = React.useState({\n    name: 'to-dos'\n  });\n\n  const onClickHandler = (menu) => {\n    console.log('menu-clicked: ', menu);\n    setActive(menu);\n  };\n\n  return (\n    <div className=\"d-flex align-items-center py-6 bg-secondary-lightest\">\n      <HorizontalNav\n        className=\"w-100 justify-content-center\"\n        menus={data}\n        active={active}\n        onClick={onClickHandler}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "HorizontalNav Horizontal Navigation With Icon": {
    "prefix": "HorizontalNav Horizontal Navigation With Icon",
    "description": "Horizontal Navigation With Icon",
    "body": [
      "import { HorizontalNav } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      name: 'text',\n      label: 'Text',\n      icon: 'message'\n    },\n    {\n      name: 'voice',\n      label: 'Voice',\n      icon: 'mic'\n    },\n    {\n      name: 'mail',\n      label: 'Mail',\n      icon: 'email'\n    },\n  ];\n\n  const [active, setActive] = React.useState({\n    name: 'text'\n  });\n\n  const onClickHandler = (menu) => {\n    console.log('menu-clicked: ', menu);\n    setActive(menu);\n  };\n\n  return (\n    <div className=\"d-flex align-items-center py-6 bg-secondary-lightest\">\n      <HorizontalNav\n        className=\"w-100 justify-content-center\"\n        menus={data}\n        active={active}\n        onClick={onClickHandler}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "HorizontalNav Left Aligned Navigation Tabs": {
    "prefix": "HorizontalNav Left Aligned Navigation Tabs",
    "description": "Left Aligned Navigation Tabs",
    "body": [
      "import { HorizontalNav, Heading, Paragraph, Button, Modal, Label, Dropdown } from '@innovaccer/design-system';\n    () => {\n  const options = [];\n  for (let i = 1; i <= 10; i++) {\n    options.push({\n      label: `Option ${i}`,\n      value: `Option ${i}`,\n    });\n  }\n\n  const data = [\n    {\n      name: 'medicine',\n      label: 'Medicine',\n    },\n    {\n      name: 'period',\n      label: 'Period',\n    },\n    {\n      name: 'alias',\n      label: 'Alias',\n    },\n    {\n      name: 'priority',\n      label: 'Priority',\n    },\n  ];\n\n  const [open, setOpen] = React.useState(false);\n  const [active, setActive] = React.useState({\n    name: 'medicine'\n  });\n\n  const onClose = () => {\n    setOpen(!open);\n  };\n\n  const onClickHandler = (menu) => {\n    setActive(menu);\n  };\n\n  const subHeading = (\n    <HorizontalNav\n      align=\"left\"\n      menus={data}\n      active={active}\n      onClick={onClickHandler}\n      className=\"ml-5 mt-4\"\n    />\n  );\n\n  const header = (\n    <div>\n      <Heading className=\"ml-7 mb-3\">Medication</Heading>\n      {subHeading}\n    </div>\n  );\n\n  return (\n    <div>\n      <Paragraph>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n        sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.<br />\n        Ut enim ad minim veniam,\n        quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.<br />\n        Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. <br />\n        Excepteur sint occaecat cupidatat non proident,\n        sunt in culpa qui officia deserunt mollit anim id est laborum.<br />\n      </Paragraph>\n      <Button appearance=\"primary\" className=\"mt-3\" onClick={() => { setOpen(true) }}>Open</Button>\n      <Modal\n        open={open}\n        dimension=\"large\"\n        onClose={onClose}\n        header={header}\n        footer={(\n          <>\n            <Button appearance=\"basic\">Discard</Button>\n            <Button appearance=\"primary\" className=\"ml-4\">Create</Button>\n          </>\n        )}\n        seperator={true}\n      >\n        <div className=\"py-5 w-50\">\n          <Label withInput={true} required={true}>Type</Label>\n          <Dropdown\n            options={options}\n          />\n          <Label withInput={true} className=\"mt-6\">Active Date</Label>\n          <Dropdown\n            options={options}\n          />\n          <Label withInput={true} className=\"mt-6\" required={true}>Diagnosis Diseases</Label>\n          <Dropdown\n            options={options}\n          />\n        </div>\n      </Modal>\n    </div>\n  );\n}\n    "
    ]
  },
  "Icon All": {
    "prefix": "Icon All",
    "description": "All",
    "body": [
      "import { Icon } from '@innovaccer/design-system';\n    () => {\n  return(\n    <Icon size={50} name='place'/>\n    );\n}\n    "
    ]
  },
  "Icon": {
    "prefix": "Icon",
    "description": "Type",
    "body": [
      "import { Icon, Text } from '@innovaccer/design-system';\n    () => {\n  const types = ['filled', 'outlined', 'round', 'two-tone', 'sharp'];\n\n  const name = 'assignment';\n  return (\n    <div className=\"d-flex\">\n      {types.map((IconShape, ind) => {\n        return (\n          <div key={ind} className=\"mr-9\">\n            <div>\n              <Icon type={IconShape} size={50} name={name} />\n            </div>\n            <br />\n            <Text weight=\"strong\">{IconShape.charAt(0).toUpperCase() + IconShape.slice(1)}</Text>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n    "
    ]
  },
  "InlineMessage Inline Message Within Table": {
    "prefix": "InlineMessage Inline Message Within Table",
    "description": "Inline Message Within Table",
    "body": [
      "import { InlineMessage, Card, Table } from '@innovaccer/design-system';\n    \n() => {\n  const data = [\n    {\n        \"name\": \"Asthma Outreach\",\n        \"firstName\": \"Brooke\",\n        \"lastName\": \"Heeran\",\n        \"lastUpdated\": \"June 20, 2020\",\n        \"recipients\": 11846\n    },\n    {\n        \"firstName\": \"Frazer\",\n        \"lastName\": \"Cathro\",\n        \"lastUpdated\": \"June 19, 2020\",\n        \"name\": \"HbA1c Test due\",\n        \"recipients\": 12846\n    },\n    {\n        \"firstName\": \"Lemmie\",\n        \"name\": \"ER Education\",\n        \"lastName\": \"Ciric\",\n        \"lastUpdated\": \"May 19, 2020\",\n        \"recipients\": 118467\n    }\n];\n\n  const schema = [\n    {\n      name: 'name',\n      displayName: 'Name',\n      width: '30%',\n      cellType: 'WITH_META_LIST',\n      sorting: false,\n      translate: (a) => ({\n        title: a.name,\n        metaList: [`${a.recipients} recipients`]\n      }),\n    },\n    {\n      name: 'lastUpdated',\n      displayName: 'Last Updated on',\n      width: '30%',\n      sorting: false,\n    },\n    {\n      name: 'user',\n      displayName: 'Message',\n      sorting: false,\n      width: '40%',\n      cellRenderer: (props) => {\n        const { data } = props;\n        return (\n          <InlineMessage appearance='info' description='Patient profile updated.' />\n        );\n      }\n    }\n  ];\n\n  return (\n    <Card>\n      <Table\n        showMenu={false}\n        type=\"data\"\n        data={data}\n        schema={schema}\n        withHeader={false}\n        headerOptions={{\n          withSearch: false\n        }}\n      />\n    </Card>\n  );\n};\n\n    "
    ]
  },
  "InlineMessage Size": {
    "prefix": "InlineMessage Size",
    "description": "Size",
    "body": [
      "import { InlineMessage, Text } from '@innovaccer/design-system';\n    () => {\n  const sizes = ['small', 'regular'];\n\n  return (\n    <div className=\"d-flex align-items-center\">\n      {sizes.map((size, key) => {\n        return (\n          <div className=\"mr-9\" key={key}>\n            <div className=\"h-50\">\n              <InlineMessage size={size} appearance=\"info\" description=\"There are two new referral requests.\" />\n            </div>\n            <br />\n            <Text weight=\"strong\">{size}</Text>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n    "
    ]
  },
  "InlineMessage   Alert Message": {
    "prefix": "InlineMessage   Alert Message",
    "description": "Alert Message",
    "body": [
      "import { InlineMessage } from '@innovaccer/design-system';\n    () => <InlineMessage appearance=\"alert\" description=\"Inline message goes here.\" />\n    "
    ]
  },
  "InlineMessage   Default Message": {
    "prefix": "InlineMessage   Default Message",
    "description": "Default Message",
    "body": [
      "import { InlineMessage } from '@innovaccer/design-system';\n    () => <InlineMessage description=\"Create a strong, unique password.\" />\n    "
    ]
  },
  "InlineMessage   Info Message": {
    "prefix": "InlineMessage   Info Message",
    "description": "Info Message",
    "body": [
      "import { InlineMessage } from '@innovaccer/design-system';\n    () => <InlineMessage appearance=\"info\" description=\"There are two new referral requests.\" />\n    "
    ]
  },
  "InlineMessage   Success Message": {
    "prefix": "InlineMessage   Success Message",
    "description": "Success Message",
    "body": [
      "import { InlineMessage } from '@innovaccer/design-system';\n    () => <InlineMessage appearance=\"success\" description=\"Inline message goes here.\" />\n    "
    ]
  },
  "InlineMessage   Warning Message": {
    "prefix": "InlineMessage   Warning Message",
    "description": "Warning Message",
    "body": [
      "import { InlineMessage } from '@innovaccer/design-system';\n    () => <InlineMessage appearance=\"warning\" description=\"Inline message goes here.\" />\n    "
    ]
  },
  "Input": {
    "prefix": "Input",
    "description": "With Six Fields",
    "body": [
      "import { Label, VerificationCodeInput } from '@innovaccer/design-system';\n    () => {\n  return (\n    <>\n      <Label withInput={true}>Verification code</Label>\n      <VerificationCodeInput fields={6} />\n    </>\n  );\n}\n    "
    ]
  },
  "Input   Action Icon": {
    "prefix": "Input   Action Icon",
    "description": "Action Icon",
    "body": [
      "import { Icon, Input } from '@innovaccer/design-system';\n    () => {\n  const actionIcon = (\n    <Icon name=\"events\" onClick={() => console.log(\"custom action icon\")} />\n  );\n\n  return (\n    <Input\n      name=\"input\"\n      actionIcon={actionIcon}\n    />\n  );\n}\n    "
    ]
  },
  "InputMask All": {
    "prefix": "InputMask All",
    "description": "All",
    "body": [
      "import { InputMask } from '@innovaccer/design-system';\n    // import { Utils } from '@innovaccer/design-system';\n\n() => {\n  const dateMask = Utils.masks.date['mm/dd/yyyy'];\n  const dateValidator = (val) => Utils.validators.date(val, 'mm/dd/yyyy');\n\n  return (\n    <div className=\"w-25\">\n      <InputMask\n        mask={dateMask}\n        validators={dateValidator}\n      />\n    </div>\n  );\n};\n\n    "
    ]
  },
  "InputMask Card Number": {
    "prefix": "InputMask Card Number",
    "description": "Card Number",
    "body": [
      "import { Label, InputMask } from '@innovaccer/design-system';\n    () => {\n  return (\n    <div className=\"w-25\">\n      <Label className=\"mb-3\">Card Number</Label>\n      <InputMask\n        mask={[\n          /\\d/,\n          /\\d/,\n          /\\d/,\n          /\\d/,\n          ' ',\n          /\\d/,\n          /\\d/,\n          /\\d/,\n          /\\d/,\n          ' ',\n          /\\d/,\n          /\\d/,\n          /\\d/,\n          /\\d/,\n          ' ',\n          /\\d/,\n          /\\d/,\n          /\\d/,\n          /\\d/,\n        ]}\n        placeholder=\"____ ____ ____ ____\"\n        name=\"card_number\"\n        icon=\"credit_card\"\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "InputMask Help Text": {
    "prefix": "InputMask Help Text",
    "description": "Help Text",
    "body": [
      "import { Row, Label, InputMask } from '@innovaccer/design-system';\n    () => {\n  return (\n    <Row className=\"w-25 d-flex\">\n      <div>\n        <Label withInput={true}>Phone Number</Label>\n        <InputMask\n          icon=\"call\"\n          name=\"primary_phone\"\n          placeholder=\"(___) ___-____\"\n          helpText=\"Enter Your Phone number\"\n          mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n        />\n      </div>\n\n      <div className=\"mt-8\">\n        <Label withInput={true}>Phone Number</Label>\n        <InputMask\n          icon=\"call\"\n          error={true}\n          name=\"primary_phone\"\n          placeholder=\"(000) 0__-____\"\n          caption=\"Please Enter Correct Phone number\"\n          mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n        />\n      </div>\n    </Row>\n  );\n}\n    "
    ]
  },
  "InputMask Phone Number": {
    "prefix": "InputMask Phone Number",
    "description": "Phone Number",
    "body": [
      "import { Label, InputMask } from '@innovaccer/design-system';\n    () => {\n  return (\n    <div className=\"w-25\">\n      <Label withInput={true}>Phone Number</Label>\n      <InputMask\n        mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n        placeholder=\"(___) ___-____\"\n        name=\"primary_phone\"\n        icon=\"call\"\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "Label": {
    "prefix": "Label",
    "description": "State",
    "body": [
      "import { Label } from '@innovaccer/design-system';\n    () => {\n  return (\n    <div className=\"d-flex\">\n      <div className=\"mr-5\">\n        <Label>Enabled Label</Label>\n      </div>\n      <div>\n        <Label disabled={true}>Disabled Label</Label>\n      </div>\n    </div>\n  );\n}\n    "
    ]
  },
  "Legend All": {
    "prefix": "Legend All",
    "description": "All",
    "body": [
      "import { Legend } from '@innovaccer/design-system';\n    () => {\n  return(\n    <Legend iconAppearance=\"inverse\" iconSize={14}>\n    Legend\n  </Legend>\n    );\n}\n    "
    ]
  },
  "Legend": {
    "prefix": "Legend",
    "description": "Label Weight",
    "body": [
      "import { Legend } from '@innovaccer/design-system';\n    () => {\n  return (\n    <div className=\"d-flex\">\n      <div className=\"mr-5\">\n        <Legend labelWeight={'strong'}>Strong</Legend>\n      </div>\n      <div>\n        <Legend labelWeight={'medium'}>Medium</Legend>\n      </div>\n    </div>\n  );\n}\n    "
    ]
  },
  "Link": {
    "prefix": "Link",
    "description": "Size",
    "body": [
      "import { Link } from '@innovaccer/design-system';\n    () => {\n  return (\n    <div className=\"d-flex\">\n      <Link href=\"http://innovaccer.com\" size=\"regular\">\n        Regular Link.\n      </Link>\n      <Link href=\"http://innovaccer.com\" size=\"tiny\" className=\"ml-7\">\n        Tiny Link.\n      </Link>\n    </div>\n  );\n}\n    "
    ]
  },
  "List All": {
    "prefix": "List All",
    "description": "All",
    "body": [
      "import { Card, List } from '@innovaccer/design-system';\n    () => {\n  const async = true;\n\n  const applyLoaderSchema = true;\n\n  const type = 'resource';\n\n  const size = 'comfortable';\n\n  const withHeader = false;\n\n  const withCheckbox = false;\n\n  const withPagination = true;\n\n  const page = 1;\n\n  const paginationType = 'jump';\n\n  const pageSize = 12;\n\n  const multipleSorting = false;\n\n  const separator = false;\n\n  let dataAttr = {};\n  if (async) {\n    dataAttr = {\n      fetchData,\n    };\n  } else {\n    dataAttr = {\n      schema,\n      data,\n    };\n  }\n\n  return (\n    <div\n      style={{\n        height: '350px',\n        // overflow: 'hidden'\n      }}\n    >\n      <Card className=\"h-100 overflow-hidden\">\n        <List\n          {...dataAttr}\n          withHeader={withHeader}\n          headerOptions={{\n            withSearch: true,\n          }}\n          withCheckbox={withCheckbox}\n          type={type}\n          size={size}\n          separator={separator}\n          withPagination={withPagination}\n          paginationType={paginationType}\n          page={page}\n          pageSize={pageSize}\n          loaderSchema={applyLoaderSchema ? loaderSchema : undefined}\n          onRowClick={(rowData, rowIndex) =>\n            action(`on-row-click:- rowIndex: ${rowIndex} data: ${JSON.stringify(rowData)}`)()\n          }\n          onSelect={(rowIndex, selected, selectedList) =>\n            action(\n              `on-select:- rowIndex: ${rowIndex} selected: ${selected} selectedList: ${JSON.stringify(selectedList)}`\n            )()\n          }\n          onPageChange={(newPage) => action(`on-page-change:- ${newPage}`)()}\n          multipleSorting={multipleSorting}\n          sortingList={[{ name: 'name', type: 'desc' }]}\n          filterList={{\n            name: ['h-r', 's-z'],\n          }}\n        />\n      </Card>\n    </div>\n  );\n}\n    "
    ]
  },
  "Loaders Placeholder All": {
    "prefix": "Loaders Placeholder All",
    "description": "All",
    "body": [
      "import { Placeholder, PlaceholderParagraph } from '@innovaccer/design-system';\n    () => {\n  const withImage = false;\n  const round = false;\n  const imageSize = 'large';\n\n  const options = {\n    withImage,\n    round,\n    imageSize,\n  };\n\n  return (\n    <Placeholder {...options}>\n      <PlaceholderParagraph length=\"small\" />\n      <PlaceholderParagraph length=\"medium\" />\n    </Placeholder>\n  );\n}\n    "
    ]
  },
  "PlaceholderImage": {
    "prefix": "PlaceholderImage",
    "description": "Size",
    "body": [
      "import { PlaceholderImage, Text } from '@innovaccer/design-system';\n    () => {\n  const round = false;\n  const sizes = ['small', 'medium', 'large'];\n  const options = {\n    round,\n  };\n\n  return (\n    <div className=\"d-flex\">\n      {sizes.map((PlaceholderSize, ind) => {\n        return (\n          <div key={ind} className=\"mr-7\">\n            <div style={{ height: '50px' }}>\n              <PlaceholderImage size={PlaceholderSize} {...options} />\n            </div>\n            <br />\n            <Text weight=\"strong\">{PlaceholderSize.charAt(0).toUpperCase() + PlaceholderSize.slice(1)}</Text>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n    "
    ]
  },
  "PlaceholderParagraph": {
    "prefix": "PlaceholderParagraph",
    "description": "Size",
    "body": [
      "import { PlaceholderParagraph, Text } from '@innovaccer/design-system';\n    () => {\n  const sizes = ['xxs', 'xs', 's', 'm', 'l', 'xl', 'xxl', 'xxxl'];\n\n  return (\n    <div>\n      {sizes.map((s, ind) => {\n        return (\n          <div key={ind} className=\"mb-7\">\n            <PlaceholderParagraph size={s} />\n            <Text weight=\"strong\">{s}</Text>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n    "
    ]
  },
  "Loaders Placeholder Skeleton Loaders": {
    "prefix": "Loaders Placeholder Skeleton Loaders",
    "description": "Skeleton Loaders",
    "body": [
      "import { Card, Placeholder, PlaceholderParagraph } from '@innovaccer/design-system';\n    () => {\n  return (\n    <Card>\n      <div className=\"px-6 py-5\">\n        <Placeholder round={true} imageSize=\"large\">\n          <PlaceholderParagraph length=\"large\" size=\"m\" />\n          <PlaceholderParagraph size=\"m\" />\n        </Placeholder>\n      </div>\n      <div style={{ borderTop: 'var(--border)' }} className=\"px-6 py-5\">\n        <Placeholder round={true} imageSize=\"large\">\n          <PlaceholderParagraph length=\"large\" size=\"m\" />\n          <PlaceholderParagraph size=\"m\" />\n        </Placeholder>\n      </div>\n      <div style={{ borderTop: 'var(--border)' }} className=\"px-6 py-5\">\n        <Placeholder round={true} imageSize=\"large\">\n          <PlaceholderParagraph length=\"large\" size=\"m\" />\n          <PlaceholderParagraph size=\"m\" />\n        </Placeholder>\n      </div>\n      <div style={{ borderTop: 'var(--border)' }} className=\"px-6 py-5\">\n        <Placeholder round={true} imageSize=\"large\">\n          <PlaceholderParagraph length=\"large\" size=\"m\" />\n          <PlaceholderParagraph size=\"m\" />\n        </Placeholder>\n      </div>\n    </Card>\n  );\n}\n    "
    ]
  },
  "Loaders Placeholder   Image": {
    "prefix": "Loaders Placeholder   Image",
    "description": "Image",
    "body": [
      "import { Placeholder, PlaceholderParagraph, Text } from '@innovaccer/design-system';\n    () => (\n  <div className='d-flex'>\n      <div className='w-25 mr-8'>\n        <Placeholder withImage={true}>\n          <PlaceholderParagraph length=\"large\" />\n        </Placeholder>\n        <Text weight=\"strong\">With Image</Text>\n      </div>\n      <div className='w-25'>\n        <Placeholder withImage={false}>\n          <PlaceholderParagraph length=\"large\" />\n        </Placeholder>\n        <Text weight=\"strong\">Without Image</Text>\n      </div>\n    </div>\n)\n    "
    ]
  },
  "Loaders Placeholder   Image Shape": {
    "prefix": "Loaders Placeholder   Image Shape",
    "description": "Image Shape",
    "body": [
      "import { Placeholder, PlaceholderParagraph, Text } from '@innovaccer/design-system';\n    () => {\n  return (\n    <div className=\"d-flex\">\n      <div className=\"w-25 mr-8\">\n        <Placeholder withImage={true} round={true}>\n          <PlaceholderParagraph length=\"large\" />\n        </Placeholder>\n        <Text weight=\"strong\">Round</Text>\n      </div>\n      <div className=\"w-25\">\n        <Placeholder withImage={true}>\n          <PlaceholderParagraph length=\"large\" />\n        </Placeholder>\n        <Text weight=\"strong\">Square</Text>\n      </div>\n    </div>\n  );\n}\n    "
    ]
  },
  "Loaders Placeholder   Image Size": {
    "prefix": "Loaders Placeholder   Image Size",
    "description": "Image Size",
    "body": [
      "import { Placeholder, PlaceholderParagraph, Text } from '@innovaccer/design-system';\n    () => {\n  const sizes = ['small', 'medium', 'large'];\n\n  return (\n    <div className=\"d-flex\">\n      {sizes.map((size, ind) => {\n        return (\n          <div key={ind} className=\"w-25 mr-8\">\n            <Placeholder imageSize={size} withImage={true}>\n              <PlaceholderParagraph length=\"large\" />\n            </Placeholder>\n            <Text weight=\"strong\">{size.charAt(0).toUpperCase() + size.slice(1)}</Text>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n    "
    ]
  },
  "Loaders Spinner All": {
    "prefix": "Loaders Spinner All",
    "description": "All",
    "body": [
      "import { Spinner } from '@innovaccer/design-system';\n    () => {\n  const appearance = 'white';\n\n  const size = 'small';\n\n  const options = {\n    appearance,\n    size,\n  };\n\n  return (\n    <div className={appearance === 'white' ? 'bg-dark' : 'bg-transparent'}>\n      <Spinner {...options} />\n    </div>\n  );\n}\n    "
    ]
  },
  "Loaders Spinner Inline Loader": {
    "prefix": "Loaders Spinner Inline Loader",
    "description": "Inline Loader",
    "body": [
      "import { Spinner, Text } from '@innovaccer/design-system';\n    () => (\n  <div className=\"d-flex\">\n    <Spinner appearance=\"primary\" size=\"small\" className=\"mr-3\" />\n    <Text>uploading...</Text>\n  </div>\n)\n    "
    ]
  },
  "Loaders Spinner Modal Loader": {
    "prefix": "Loaders Spinner Modal Loader",
    "description": "Modal Loader",
    "body": [
      "import { Spinner } from '@innovaccer/design-system';\n    () => <Spinner appearance=\"primary\" size=\"medium\" />\n    "
    ]
  },
  "Spinner": {
    "prefix": "Spinner",
    "description": "Size",
    "body": [
      "import { Spinner, Text } from '@innovaccer/design-system';\n    () => {\n  const sizes = ['small', 'medium', 'large'];\n  return (\n    <div className=\"d-flex\">\n      {sizes.map((SpinnerSize, ind) => {\n        return (\n          <div key={ind} className=\"mr-8\">\n            <div className=\"h-75\">\n              <Spinner size={SpinnerSize} />\n            </div>\n            <Text weight=\"strong\">{SpinnerSize.charAt(0).toUpperCase() + SpinnerSize.slice(1)}</Text>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n    "
    ]
  },
  "Message All": {
    "prefix": "Message All",
    "description": "All",
    "body": [
      "import { Message, Text } from '@innovaccer/design-system';\n    () => {\n  const appearance = 'warning';\n  const title = 'Design System';\n  const description = 'Design System is a library of reusable components';\n\n  return (\n    <Message\n      appearance={appearance}\n      title={title}\n      description={description}\n      actions={\n        <>\n          <Text className=\"cursor-pointer\" appearance=\"link\">\n            Action 1\n          </Text>\n          <Text className=\"ml-5 cursor-pointer\" appearance=\"link\">\n            Action 2\n          </Text>\n        </>\n      }\n    />\n  );\n}\n    "
    ]
  },
  "Message Alert Message": {
    "prefix": "Message Alert Message",
    "description": "Alert Message",
    "body": [
      "import { Row, Column, Message } from '@innovaccer/design-system';\n    () => (\n  <Row>\n    <Column size=\"8\">\n      <Message appearance=\"alert\" description=\"Could not start verification. Please try again later.\" />\n    </Column>\n  </Row>\n)\n    "
    ]
  },
  "Message Custom Description": {
    "prefix": "Message Custom Description",
    "description": "Custom Description",
    "body": [
      "import { Row, Column, Message, Text } from '@innovaccer/design-system';\n    () => (\n  <Row>\n    <Column size=\"8\">\n      <Message\n        actions={\n          <>\n            <Text className=\"cursor-pointer\" appearance=\"link\">\n              Try again\n            </Text>\n          </>\n        }\n      >\n        <Text appearance=\"default\">Sorry we couldn't subscribe you. Please try again.</Text>\n      </Message>\n    </Column>\n  </Row>\n)\n    "
    ]
  },
  "Message Info Message": {
    "prefix": "Message Info Message",
    "description": "Info Message",
    "body": [
      "import { Row, Column, Message } from '@innovaccer/design-system';\n    () => (\n  <Row>\n    <Column size=\"8\">\n      <Message appearance=\"info\" description=\"Patient profile has been updated with new records.\" />\n    </Column>\n  </Row>\n)\n    "
    ]
  },
  "Message Message With Actions": {
    "prefix": "Message Message With Actions",
    "description": "Message With Actions",
    "body": [
      "import { Row, Column, Message, Text } from '@innovaccer/design-system';\n    () => (\n  <Row>\n    <Column size=\"8\">\n      <Message\n        appearance=\"alert\"\n        description=\"Sorry we couldn't subscribe you. Please try again.\"\n        actions={\n          <>\n            <Text className=\"cursor-pointer\" appearance=\"link\">\n              Try again\n            </Text>\n          </>\n        }\n      />\n    </Column>\n  </Row>\n)\n    "
    ]
  },
  "Message Message With Title": {
    "prefix": "Message Message With Title",
    "description": "Message With Title",
    "body": [
      "import { Row, Column, Message, Text } from '@innovaccer/design-system';\n    () => (\n  <Row>\n    <Column size=\"8\">\n      <Message\n        appearance=\"warning\"\n        title=\"Sender 'Alta Wells' already exists \"\n        description=\"Based on the details you've entered, we found that this sender might already be on our platform.\"\n        actions={\n          <>\n            <Text className=\"cursor-pointer\" appearance=\"link\">\n              Edit details\n            </Text>\n          </>\n        }\n      />\n    </Column>\n  </Row>\n)\n    "
    ]
  },
  "Message Success Message": {
    "prefix": "Message Success Message",
    "description": "Success Message",
    "body": [
      "import { Row, Column, Message } from '@innovaccer/design-system';\n    () => (\n  <Row>\n    <Column size=\"8\">\n      <Message appearance=\"success\" description=\"Password updated. Login with your updated credentials.\" />\n    </Column>\n  </Row>\n)\n    "
    ]
  },
  "Message": {
    "prefix": "Message",
    "description": "Appearance Without Title",
    "body": [
      "import { Message, Text } from '@innovaccer/design-system';\n    () => {\n  const appearances = ['alert', 'info', 'success', 'warning'];\n  const innerStyle = {\n    display: 'flex',\n    'align-items': 'center',\n    'flex-direction': 'column',\n  };\n  return (\n    <div className=\"Row\">\n      {appearances.map((appear, ind) => {\n        return (\n          <div key={ind} style={innerStyle} className=\"mr-7 mb-7 w-25 d-flex\">\n            <Message\n              appearance={appear}\n              description=\"Patient record has been updated with new records.\"\n              actions={\n                <>\n                  <Text className=\"cursor-pointer\" appearance=\"link\">\n                    Action 1\n                  </Text>\n                  <Text className=\"ml-5 cursor-pointer\" appearance=\"link\">\n                    Action 2\n                  </Text>\n                </>\n              }\n            />\n            <br />\n            <Text weight=\"strong\">{appear.charAt(0).toUpperCase() + appear.slice(1)}</Text>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n    "
    ]
  },
  "Message Warning Message": {
    "prefix": "Message Warning Message",
    "description": "Warning Message",
    "body": [
      "import { Row, Column, Message } from '@innovaccer/design-system';\n    () => (\n  <Row>\n    <Column size=\"8\">\n      <Message appearance=\"warning\" description=\"Try to save again. If it continues to fail, please raise a ticket.\" />\n    </Column>\n  </Row>\n)\n    "
    ]
  },
  "MetaList All": {
    "prefix": "MetaList All",
    "description": "All",
    "body": [
      "import { MetaList } from '@innovaccer/design-system';\n    () => {\n  const list = [\n    {\n      label: 'Meta data',\n      icon: 'assessment',\n    },\n    {\n      label: 'Meta data',\n      icon: 'assessment',\n    },\n  ];\n\n  return (\n    <div>\n      <MetaList list={list} />\n    </div>\n  );\n}\n    "
    ]
  },
  "MetaList With Separator": {
    "prefix": "MetaList With Separator",
    "description": "With Separator",
    "body": [
      "import { MetaList } from '@innovaccer/design-system';\n    () => {\n  const seperator = true;\n\n  const list = [\n    {\n      label: 'Meta data',\n      icon: 'assessment',\n    },\n    {\n      label: 'Meta data',\n      icon: 'assessment',\n    },\n  ];\n\n  return (\n    <div>\n      <MetaList list={list} seperator={seperator} />\n    </div>\n  );\n}\n    "
    ]
  },
  "Modal": {
    "prefix": "Modal",
    "description": "Custom Header",
    "body": [
      "import { Button, Sidesheet, Heading, Badge, Divider, Text, ModalDescription } from '@innovaccer/design-system';\n    () => {\n  const [open, setOpen] = React.useState(false);\n\n  const onClose = () => {\n    setOpen(!open);\n  };\n\n  const options = {\n    onClose,\n    open,\n    footer: (\n      <>\n        <Button appearance=\"primary\" className=\"mr-4\">\n          Primary\n        </Button>\n        <Button appearance=\"basic\">Basic</Button>\n      </>\n    ),\n  };\n\n  const modalDescriptionOptions = {\n    title: 'Description Title',\n    description: 'Adding a subheading clearly indicates the hierarchy of the information.',\n    removePadding: true,\n  };\n\n  const modalDescriptionOptionsWithoutTitle = {\n    description: 'Card Sections include supporting text like an article summary or a restaurant description.',\n    removePadding: true,\n  };\n\n  return (\n    <div>\n      <Button appearance=\"primary\" onClick={() => setOpen(true)}>Open Sidesheet</Button>\n      <Sidesheet\n        {...options}\n        dimension=\"regular\"\n        header={\n          <div className=\"pl-7\">\n            <Heading size=\"s\">Untitled document</Heading>\n            <div className=\"d-flex\">\n              <div className=\"mr-3\">\n                <Badge appearance=\"primary\">User Interface</Badge>\n              </div>\n              <div className=\"mr-3\">\n                <Badge>Design</Badge>\n              </div>\n              <div className=\"mr-3\">\n                <Badge>Development</Badge>\n              </div>\n            </div>\n            <Divider></Divider>\n          </div>\n        }\n      >\n        <Text>Modal Body</Text>\n        <ModalDescription {...modalDescriptionOptions} />\n        <ModalDescription {...modalDescriptionOptionsWithoutTitle} />\n      </Sidesheet>\n    </div>\n  );\n}\n    "
    ]
  },
  "Navigation Navigation Tabs": {
    "prefix": "Navigation Navigation Tabs",
    "description": "Navigation Tabs",
    "body": [
      "import { Navigation } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      name: 'tab1',\n      label: 'Tab #1',\n    },\n    {\n      name: 'tab2',\n      label: 'Tab #2'\n    },\n    {\n      name: 'tab3',\n      label: 'Tab #3',\n    },\n    {\n      name: 'tab4',\n      label: 'Tab #3',\n    }\n  ];\n\n  const [active, setActive] = React.useState({\n    name: 'tab1'\n  });\n\n  const onClickHandler = (menu) => {\n    setActive(menu);\n  };\n\n  const align = 'center';\n\n  return (\n    <Navigation\n      align={align}\n      menus={data}\n      active={active}\n      onClick={onClickHandler}\n    />\n  );\n}\n    "
    ]
  },
  "Navigation Navigation Tabs With Count": {
    "prefix": "Navigation Navigation Tabs With Count",
    "description": "Navigation Tabs With Count",
    "body": [
      "import { Navigation } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      name: 'tab1',\n      label: 'Tab #1',\n      count: 1\n    },\n    {\n      name: 'tab2',\n      label: 'Tab #2',\n      count: 2,\n      disabled: true\n    },\n    {\n      name: 'tab3',\n      label: 'Tab #3',\n      count: 10\n    },\n    {\n      name: 'tab4',\n      label: 'Tab #3',\n      count: 100\n    }\n  ];\n\n  const [active, setActive] = React.useState({\n    name: 'tab1'\n  });\n\n  const onClickHandler = (menu) => {\n    setActive(menu);\n  };\n\n  const align = 'center';\n\n  return (\n    <Navigation\n      align={align}\n      menus={data}\n      active={active}\n      onClick={onClickHandler}\n    />\n  );\n}\n    "
    ]
  },
  "Navigation Navigation Tabs With Icon": {
    "prefix": "Navigation Navigation Tabs With Icon",
    "description": "Navigation Tabs With Icon",
    "body": [
      "import { Navigation } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      name: 'tab1',\n      label: 'Tab #1',\n      icon: 'events'\n    },\n    {\n      name: 'tab2',\n      label: 'Tab #2',\n      icon: 'events'\n    },\n    {\n      name: 'tab3',\n      label: 'Tab #3',\n      icon: 'events'\n    },\n    {\n      name: 'tab4',\n      label: 'Tab #3',\n      icon: 'events'\n    }\n  ];\n\n  const [active, setActive] = React.useState({\n    name: 'tab1'\n  });\n\n  const onClickHandler = (menu) => {\n    setActive(menu);\n  };\n\n  const align = 'center';\n\n  return (\n    <Navigation\n      align={align}\n      menus={data}\n      active={active}\n      onClick={onClickHandler}\n    />\n  );\n}\n    "
    ]
  },
  "Navigation   Horizontal": {
    "prefix": "Navigation   Horizontal",
    "description": "Horizontal",
    "body": [
      "import { Navigation } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      name: 'menu_1',\n      label: 'Menu 1',\n      icon: 'event',\n    },\n    {\n      name: 'menu_2',\n      label: 'Menu 2',\n      count: 10\n    },\n    {\n      name: 'menu_3',\n      label: 'Menu 3',\n      disabled: true\n    }\n  ];\n\n  const [active, setActive] = React.useState({\n    name: 'menu_1'\n  });\n\n  const onClickHandler = (menu) => {\n    console.log('menu-clicked: ', menu);\n    setActive(menu);\n  };\n\n  const align = 'center';\n\n  return (\n    <div style={{ height: '200px', background: 'var(--secondary-lightest)' }}>\n      <div\n        style={{\n            background: 'white',\n            padding: 'var(--spacing-m)',\n            borderTop: 'var(--border)',\n            borderBottom: 'var(--border)'\n        }}\n      >\n        <Navigation\n          align={align}\n          menus={data}\n          active={active}\n          onClick={onClickHandler}\n        />\n      </div>\n  </div>\n  );\n}\n    "
    ]
  },
  "Navigation   Vertical": {
    "prefix": "Navigation   Vertical",
    "description": "Vertical",
    "body": [
      "import { Navigation } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      name: 'patient_360',\n      label: 'Patient 360',\n      icon: 'assignment_ind',\n      link: '/patient360'\n    },\n    {\n      name: 'care_management',\n      label: 'Care Management and Resources',\n      icon: 'forum',\n      subMenu: [\n        {\n          name: 'care_management.timeline',\n          label: 'Timeline'\n        },\n        {\n          name: 'care_management.care_plans',\n          label: 'Care Plans'\n        }\n      ]\n    },\n    {\n      name: 'episodes',\n      label: 'Episodes',\n      disabled: true,\n      icon: 'airline_seat_flat_angled'\n    },\n    {\n      name: 'risk',\n      label: 'Risk',\n      icon: 'favorite',\n      subMenu: [\n        {\n          name: 'risk.timeline',\n          label: 'Timeline'\n        },\n        {\n          name: 'risk.care_plans',\n          label: 'Care Plans'\n        }\n      ]\n    },\n    {\n      name: 'claims',\n      label: 'Claims',\n      icon: 'receipt'\n    },\n    {\n      name: 'profile',\n      label: 'Profile',\n      icon: 'account_circle'\n    },\n    {\n      name: 'manula_entry',\n      label: 'Manual Entry',\n      icon: 'border_color'\n    },\n    {\n      name: 'documents',\n      label: 'Documents',\n      icon: 'assignment'\n    }\n  ];\n\n  const [active, setActive] = React.useState({\n    name: 'care_management.timeline'\n  });\n  const [expanded, setExpanded] = React.useState(false);\n\n  const onClickHandler = (menu) => {\n    console.log('menu-clicked: ', menu);\n    setActive(menu);\n  };\n\n  return (\n    <div style={{ height: 'calc(80vh)', background: 'var(--secondary-lightest)' }}>\n      <Navigation\n        type=\"vertical\"\n        menus={data}\n        expanded={expanded}\n        footer={true}\n        onToggle={(val) => setExpanded(val)}\n        active={active}\n        onClick={onClickHandler}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "Navigation   Vertical Round": {
    "prefix": "Navigation   Vertical Round",
    "description": "Vertical Round",
    "body": [
      "import { Navigation } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      name: 'patient_360',\n      label: 'Patient 360',\n      icon: 'assignment_ind',\n      link: '/patient360'\n    },\n    {\n      name: 'care_management',\n      label: 'Care Management and Resources',\n      icon: 'forum',\n      subMenu: [\n        {\n          name: 'care_management.timeline',\n          label: 'Timeline'\n        },\n        {\n          name: 'care_management.care_plans',\n          label: 'Care Plans'\n        }\n      ]\n    },\n    {\n      name: 'episodes',\n      label: 'Episodes',\n      disabled: true,\n      icon: 'airline_seat_flat_angled'\n    },\n    {\n      name: 'risk',\n      label: 'Risk',\n      icon: 'favorite',\n      subMenu: [\n        {\n          name: 'risk.timeline',\n          label: 'Timeline'\n        },\n        {\n          name: 'risk.care_plans',\n          label: 'Care Plans'\n        }\n      ]\n    },\n    {\n      name: 'claims',\n      label: 'Claims',\n      icon: 'receipt'\n    },\n    {\n      name: 'profile',\n      label: 'Profile',\n      icon: 'account_circle'\n    },\n    {\n      name: 'manula_entry',\n      label: 'Manual Entry',\n      icon: 'border_color'\n    },\n    {\n      name: 'documents',\n      label: 'Documents',\n      icon: 'assignment'\n    }\n  ];\n\n  const [active, setActive] = React.useState({\n    name: 'care_management.timeline'\n  });\n  const [expanded, setExpanded] = React.useState(false);\n\n  const onClickHandler = (menu) => {\n    console.log('menu-clicked: ', menu);\n    setActive(menu);\n  };\n\n  return (\n    <div style={{ height: 'calc(80vh)', background: 'var(--secondary-lightest)' }}>\n      <Navigation\n        type=\"vertical\"\n        menus={data}\n        expanded={expanded}\n        footer={true}\n        onToggle={(val) => setExpanded(val)}\n        active={active}\n        rounded={true}\n        onClick={onClickHandler}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "PageHeader Level 0   With Navigation": {
    "prefix": "PageHeader Level 0   With Navigation",
    "description": "With Navigation",
    "body": [
      "import { Navigation, Text, Button, PageHeader } from '@innovaccer/design-system';\n    () => {\n  const title = 'Page title';\n\n  const navigationData = [\n    {\n      name: 'menu_1',\n      label: 'Menu 1',\n      icon: 'event',\n    },\n    {\n      name: 'menu_2',\n      label: 'Menu 2'\n    },\n    {\n      name: 'menu_3',\n      label: 'Menu 3',\n      disabled: true\n    }\n  ];\n\n  const options = {\n    title,\n    navigation: <Navigation menus={navigationData} onClick={(menu) => console.log(menu)} active={{ name: 'menu_1' }} />,\n    actions: (\n      <div className=\"d-flex justify-content-end align-items-center\">\n        <span className=\"mr-4\"><Text appearance=\"subtle\">Meta data</Text></span>\n        <Button appearance=\"primary\">Primary</Button>\n      </div>\n    )\n  };\n\n  return (\n    <div className=\"w-100 py-6 bg-secondary-lightest\">\n      <PageHeader {...options} />\n    </div>\n  );\n}\n    "
    ]
  },
  "PageHeader Level 0   With Stepper": {
    "prefix": "PageHeader Level 0   With Stepper",
    "description": "With Stepper",
    "body": [
      "import { Stepper, Text, Button, PageHeader } from '@innovaccer/design-system';\n    () => {\n  const title = 'Page title';\n\n   const stepperData = [\n    {\n      value: 'step_1',\n      label: 'Step 1',\n    },\n    {\n      value: 'step_2',\n      label: 'Step 2'\n    },\n    {\n      value: 'step_3',\n      label: 'Step 3',\n    }\n  ];\n\n  const [active, setActive] = React.useState(0);\n  const [completed, setCompleted] = React.useState(-1);\n\n  const onChangeHandler = (activeStep) => {\n    setActive(activeStep)\n  };\n\n  const onClickHandler = () => {\n    if (active > completed) setCompleted(active);\n    active > completed ? setActive(active + 1) : setActive(completed + 1);\n  }\n\n  const options = {\n    title,\n    seperator: true,\n    stepper: <Stepper steps={stepperData} onChange={onChangeHandler} active={active} completed={completed} />,\n    actions: (\n      <div className=\"d-flex justify-content-end align-items-center\">\n        <span className=\"mr-4\"><Text appearance=\"subtle\">Meta data</Text></span>\n        <Button appearance=\"primary\" onClick={onClickHandler}>Primary</Button>\n      </div>\n    )\n  };\n\n  return (\n    <div className=\"w-100 py-6 bg-secondary-lightest\">\n      <PageHeader {...options} />\n    </div>\n  );\n}\n    "
    ]
  },
  "PageHeader Level 0   With Tabs": {
    "prefix": "PageHeader Level 0   With Tabs",
    "description": "With Tabs",
    "body": [
      "import { TabsWrapper, Tab, Pills, Text, Button, PageHeader } from '@innovaccer/design-system';\n    () => {\n  const active = 1;\n\n  const title = 'Page title';\n\n  const onTabChangeHandler = (tabIndex) => {\n    console.log(tabIndex);\n  };\n\n  const options = {\n    title,\n    tabs: (\n      <TabsWrapper\n        active={active}\n        onTabChange={onTabChangeHandler}\n      >\n        <Tab\n          label={(\n            <>\n              <div className=\"Tab-count\">\n                <Pills appearance=\"secondary\">2</Pills>\n              </div>\n              <Text appearance={active !== 0 ? 'subtle' : undefined}>Tab 1</Text>\n            </>\n          )}\n        >\n          {null}\n        </Tab>\n        <Tab\n          label={(\n            <>\n              <div className=\"Tab-count\">\n                <Pills appearance=\"secondary\">12</Pills>\n              </div>\n              <Text appearance={active !== 1 ? 'subtle' : undefined}>Tab 2</Text>\n            </>\n          )}\n        >\n          {null}\n        </Tab>\n        <Tab\n          label={(\n            <>\n              <div className=\"Tab-count\">\n                <Pills appearance=\"secondary\">5</Pills>\n              </div>\n              <Text appearance={active !== 2 ? 'subtle' : undefined}>Tab 3</Text>\n            </>\n          )}\n        >\n          {null}\n        </Tab>\n      </TabsWrapper>\n    ),\n    actions: (\n      <div className=\"d-flex justify-content-end align-items-center\">\n        <span className=\"mr-4\"><Text appearance=\"subtle\">Meta data</Text></span>\n        <Button appearance=\"primary\">Primary</Button>\n      </div>\n    )\n  };\n\n  return (\n    <div className=\"w-100 py-6 bg-secondary-lightest\">\n      <PageHeader {...options} />\n    </div>\n  );\n}\n    "
    ]
  },
  "PageHeader Level 0 With Filter": {
    "prefix": "PageHeader Level 0 With Filter",
    "description": "Level 0 With Filter",
    "body": [
      "import { Tabs, Button, PageHeader } from '@innovaccer/design-system';\n    () => {\n  const tabs = [\n    {\n      count: 4,\n      label: 'Current'\n    },\n    {\n      count: 4,\n      label: 'Invited'\n    },\n    {\n      count: 4,\n      label: 'Inactive'\n    }\n  ];\n\n  const [activeIndex, setActiveIndex] = React.useState(0);\n\n  const tab = (\n    <Tabs\n      tabs={tabs}\n      activeIndex={activeIndex}\n      onTabChange={setActiveIndex}\n    />\n  );\n\n  const actions = (\n    <div className=\"d-flex justify-content-end align-items-center\">\n      <Button icon=\"get_app\" className=\"mr-4\">Download Records</Button>\n      <Button appearance=\"primary\">Invite users</Button>\n    </div>\n  );\n\n  return (\n    <div className=\"py-6 bg-secondary-lightest\" style={{width:'900px'}}>\n      <PageHeader\n        title=\"Users\"\n        separator={true}\n        tabs={tab}\n        actions={actions}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "PageHeader Level 0 With Navigation": {
    "prefix": "PageHeader Level 0 With Navigation",
    "description": "Level 0 With Navigation",
    "body": [
      "import { Navigation, Button, PageHeader } from '@innovaccer/design-system';\n    () => {\n  const navigationData = [\n    {\n      name: 'menu_1',\n      label: 'Virtual Visits',\n    },\n    {\n      name: 'menu_2',\n      label: 'Assesments'\n    }\n  ];\n\n  const [active, setActive] = React.useState({\n    name: 'menu_1'\n  });\n\n  const onClickHandler = (menu) => {\n    setActive(menu);\n  };\n\n  const navigation = <Navigation menus={navigationData} onClick={onClickHandler} active={active}/>;\n  const actions = (\n    <div className=\"d-flex justify-content-end align-items-center\">\n      <Button className=\"mr-4\">Reorganize</Button>\n      <Button icon=\"get_app\">Export to PDF</Button>\n    </div>\n  );\n\n  return (\n    <div className=\"py-6 bg-secondary-lightest\" style={{width:'900px'}}>\n      <PageHeader\n        title=\"Dashboard\"\n        separator={true}\n        navigation={navigation}\n        actions={actions}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "PageHeader Level 1   With Navigation": {
    "prefix": "PageHeader Level 1   With Navigation",
    "description": "With Navigation",
    "body": [
      "import { Navigation, Button, Breadcrumbs, Badge, StatusHint, MetaList, PageHeader } from '@innovaccer/design-system';\n    () => {\n  const navigationPosition = 'center';\n\n  const title = 'Page title';\n\n  const navigationData = [\n    {\n      name: 'menu_1',\n      label: 'Menu 1',\n      icon: 'event',\n    },\n    {\n      name: 'menu_2',\n      label: 'Menu 2'\n    },\n    {\n      name: 'menu_3',\n      label: 'Menu 3',\n      disabled: true\n    }\n  ];\n\n  const breadcrumbData = [\n    {\n      label: 'Level 0',\n      link: '/level0'\n    },\n    {\n      label: 'Level 1',\n      link: '/level1'\n    }\n  ];\n\n  const options = {\n    navigationPosition,\n    title,\n    navigation: (\n      <Navigation\n        menus={navigationData}\n        onClick={menu => console.log(menu)}\n        active={{ name: 'menu_1' }}\n        align={navigationPosition === 'bottom' ? 'left' : 'center'}\n      />\n    ),\n    actions: (\n      <div className=\"d-flex justify-content-end align-items-center\">\n        <Button appearance=\"primary\">Primary</Button>\n      </div>\n    ),\n    breadcrumbs: (\n      <Breadcrumbs\n        list={breadcrumbData}\n        onClick={link => console.log(link)}\n      />\n    ),\n    badge: (\n      <Badge appearance=\"secondary\">Badge</Badge>\n    ),\n    status: (\n      <StatusHint appearance=\"alert\">Alert</StatusHint>\n    ),\n    meta: (\n      <MetaList\n        list={[{ label: 'Meta data' }]}\n        seperator={true}\n      />\n    )\n  };\n  return (\n    <div className=\"w-100 py-6 bg-secondary-lightest\">\n      <PageHeader {...options} />\n    </div>\n  );\n}\n    "
    ]
  },
  "PageHeader Level 1   With Stepper": {
    "prefix": "PageHeader Level 1   With Stepper",
    "description": "With Stepper",
    "body": [
      "import { Stepper, Button, Breadcrumbs, Badge, StatusHint, MetaList, PageHeader } from '@innovaccer/design-system';\n    () => {\n  const navigationPosition = 'center';\n\n  const title = 'Page title';\n\n  const stepperData = [\n    {\n      value: 'step_1',\n      label: 'Step 1',\n    },\n    {\n      value: 'step_2',\n      label: 'Step 2'\n    },\n    {\n      value: 'step_3',\n      label: 'Step 3',\n    }\n  ];\n\n  const breadcrumbData = [\n    {\n      label: 'Level 0',\n      link: '/level0'\n    },\n    {\n      label: 'Level 1',\n      link: '/level1'\n    }\n  ];\n\n  const [active, setActive] = React.useState(0);\n  const [completed, setCompleted] = React.useState(-1);\n\n  const onChangeHandler = (activeStep) => {\n    setActive(activeStep)\n  };\n\n  const onClickHandler = () => {\n    if (active > completed) setCompleted(active);\n    active > completed ? setActive(active + 1) : setActive(completed + 1);\n  };\n\n   const options = {\n    navigationPosition,\n    title,\n    seperator: true,\n    stepper: <Stepper steps={stepperData} onChange={onChangeHandler} active={active} completed={completed} />,\n    actions: (\n      <div className=\"d-flex justify-content-end align-items-center\">\n        <Button appearance=\"primary\" onClick={onClickHandler}>Next</Button>\n      </div>\n    ),\n    breadcrumbs: (\n      <Breadcrumbs\n        list={breadcrumbData}\n      />\n    ),\n    badge: (\n      <Badge appearance=\"secondary\">Badge</Badge>\n    ),\n    status: (\n      <StatusHint appearance=\"alert\">Alert</StatusHint>\n    ),\n    meta: (\n      <MetaList\n        list={[{ label: 'Meta data' }]}\n        seperator={true}\n      />\n    )\n  };\n\n  return (\n    <div className=\"w-100 py-6 bg-secondary-lightest\">\n      <PageHeader {...options} />\n    </div>\n  );\n}\n    "
    ]
  },
  "PageHeader Level 1   With Tabs": {
    "prefix": "PageHeader Level 1   With Tabs",
    "description": "With Tabs",
    "body": [
      "import { TabsWrapper, Tab, Badge, Text, Button, Breadcrumbs, StatusHint, MetaList, PageHeader } from '@innovaccer/design-system';\n    () => {\n  const activeTab = 1;\n\n  const title = 'Page title';\n\n  const onTabChangeHandler = (tabIndex) => {\n    console.log(tabIndex);\n  };\n\n  const breadcrumbData = [\n    {\n      label: 'Level 0',\n      link: '/level0'\n    },\n    {\n      label: 'Level 1',\n      link: '/level1'\n    }\n  ];\n\n  const options = {\n    title,\n    tabs: (\n      <TabsWrapper\n        activeTab={activeTab}\n        onTabChange={onTabChangeHandler}\n      >\n        <Tab\n          label={(\n            <>\n              <div className=\"Tab-count\">\n                <Badge appearance=\"secondary\">2</Badge>\n              </div>\n              <Text appearance={activeTab !== 0 ? 'subtle' : undefined}>Tab 1</Text>\n            </>\n          )}\n        >\n          {null}\n        </Tab>\n        <Tab\n          label={(\n            <>\n              <div className=\"Tab-count\">\n                <Badge appearance=\"secondary\">12</Badge>\n              </div>\n              <Text appearance={activeTab !== 1 ? 'subtle' : undefined}>Tab 2</Text>\n            </>\n          )}\n        >\n          {null}\n        </Tab>\n        <Tab\n          label={(\n            <>\n              <div className=\"Tab-count\">\n                <Badge appearance=\"secondary\">5</Badge>\n              </div>\n              <Text appearance={activeTab !== 2 ? 'subtle' : undefined}>Tab 3</Text>\n            </>\n          )}\n        >\n          {null}\n        </Tab>\n      </TabsWrapper>\n    ),\n    actions: (\n      <div className=\"d-flex justify-content-end align-items-center\">\n        <Button appearance=\"primary\">Primary</Button>\n      </div>\n    ),\n    breadcrumbs: (\n      <Breadcrumbs\n        list={breadcrumbData}\n        onClick={link => console.log(link)}\n      />\n    ),\n    badge: (\n      <Badge appearance=\"secondary\">Badge</Badge>\n    ),\n    status: (\n      <StatusHint appearance=\"alert\">Alert</StatusHint>\n    ),\n    meta: (\n      <MetaList\n        list={[{ label: 'Meta data' }]}\n        seperator={true}\n      />\n    )\n  };\n  return (\n    <div className=\"w-100 py-6 bg-secondary-lightest\">\n      <PageHeader {...options} />\n    </div>\n  );\n}\n    "
    ]
  },
  "PageHeader Level 1 With Filter": {
    "prefix": "PageHeader Level 1 With Filter",
    "description": "Level 1 With Filter",
    "body": [
      "import { Tabs, Breadcrumbs, PageHeader } from '@innovaccer/design-system';\n    () => {\n  const tabs = [\n    {\n      count: 32,\n      label: 'New'\n    },\n    {\n      count: 4,\n      label: 'Invalid'\n    },\n    {\n      count: 2,\n      label: 'Duplicate'\n    }\n  ];\n\n  const [activeIndex, setActiveIndex] = React.useState(0);\n\n  const tab = (\n    <Tabs\n      tabs={tabs}\n      activeIndex={activeIndex}\n      onTabChange={setActiveIndex}\n    />\n  );\n\n  const breadcrumbs = (\n    <Breadcrumbs\n      list={[{\n        label: 'Senders',\n        link: '/Senders'\n      }]}\n      onClick={link => console.log(`on-click: ${link}`)}\n    />\n  );\n\n  return (\n    <div className=\"py-6 bg-secondary-lightest\" style={{width:'900px'}}>\n      <PageHeader\n        title=\"Sender creation report\"\n        separator={true}\n        tabs={tab}\n        breadcrumbs={breadcrumbs}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "PageHeader Level 1 With Navigation": {
    "prefix": "PageHeader Level 1 With Navigation",
    "description": "Level 1 With Navigation",
    "body": [
      "import { Navigation, Breadcrumbs, Badge, MetaList, StatusHint, PageHeader } from '@innovaccer/design-system';\n    () => {\n  const navigationData = [\n    {\n      name: 'menu_1',\n      label: 'Performance',\n    },\n    {\n      name: 'menu_2',\n      label: 'Recipients'\n    }\n  ];\n\n  const [active, setActive] = React.useState({\n    name: 'menu_1'\n  });\n\n  const onClickHandler = (menu) => {\n    setActive(menu);\n  };\n\n  const navigation = (\n    <Navigation\n      menus={navigationData}\n      onClick={onClickHandler}\n      active={active}\n      align=\"center\"\n    />\n  );\n  const actions = (\n    <div className=\"d-flex justify-content-end align-items-center\"/>\n  );\n  const breadcrumbs = (\n    <Breadcrumbs\n      list={[{\n        label: 'Outreach',\n        link: '/Outreach'\n      }]}\n      onClick={link => console.log(`on-click: ${link}`)}\n    />\n  );\n  const badge = (\n    <Badge subtle={true} appearance=\"success\">Sent</Badge>\n  );\n  const meta = (\n    <MetaList\n      list={[{ label: 'Text' }, { label: 'Email' }]}\n    />\n  );\n\n  const status = <StatusHint appearance=\"info\">Ongoing</StatusHint>;\n\n  return (\n    <div className=\"py-5 bg-secondary-lightest\" style={{width:'900px'}}>\n      <PageHeader\n        title=\"Covid-19\"\n        separator={true}\n        navigationPosition=\"center\"\n        navigation={navigation}\n        actions={actions}\n        breadcrumbs={breadcrumbs}\n        badge={badge}\n        status={status}\n        meta={meta}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "PageHeader Level 1 With Stepper": {
    "prefix": "PageHeader Level 1 With Stepper",
    "description": "Level 1 With Stepper",
    "body": [
      "import { Stepper, Text, Avatar, Dropdown, Button, Breadcrumbs, Badge, MetaList, PageHeader } from '@innovaccer/design-system';\n    () => {\n  const stepperData = [\n    {\n      value: 'step_1',\n      label: 'Recipients',\n    },\n    {\n      value: 'step_2',\n      label: 'Message'\n    },\n    {\n      value: 'step_3',\n      label: 'Schedule',\n    }\n  ];\n\n  const options = [\n    {\n      label: 'Option 1',\n      value: 'Option 1',\n    },\n    {\n      label: 'Option 2',\n      value: 'Option 2',\n    },\n    {\n      label: 'Option 3',\n      value: 'Option 3',\n    }\n  ];\n\n  const [active, setActive] = React.useState(0);\n  const [completed, setCompleted] = React.useState(-1);\n\n  const onChangeHandler = (activeStep) => {\n    setActive(activeStep);\n  };\n\n  const onClickHandler = () => {\n    if (active > completed) setCompleted(active);\n    active > completed ? setActive(active + 1) : setActive(completed + 1);\n  };\n\n  const stepper = <Stepper steps={stepperData} onChange={onChangeHandler} active={active} completed={completed} />;\n  const actions = (\n    <div className=\"d-flex justify-content-end align-items-center\">\n      <Text className=\"mr-4\">few minutes ago</Text>\n      <Avatar className=\"mr-4\" firstName=\"John\" lastName=\"Doe\" appearance=\"accent2\"/>\n      <div className=\"mr-4\">\n        <Dropdown\n          menu={true}\n          icon=\"more_horiz\"\n          options={options}\n        />\n      </div>\n      <Button className=\"mr-4\">Finish Later</Button>\n      <Button className=\"mr-4\" appearance=\"primary\" onClick={onClickHandler}>Next</Button>\n    </div>\n  );\n  const breadcrumbs = (\n    <Breadcrumbs\n      list={[{\n        label: 'Campaigns',\n        link: '/Campaigns'\n      }]}\n      onClick={link => console.log(`on-click: ${link}`)}\n    />\n  );\n  const badge = (\n    <Badge appearance=\"secondary\">Message</Badge>\n  );\n  const meta = (\n    <MetaList\n      list={[{ label: 'Draft' }]}\n      seperator={false}\n    />\n  );\n\n  return (\n    <div className=\"py-6 bg-secondary-lightest\" style={{width:'1200px'}}>\n      <PageHeader\n        title=\"Annual Wellness Visit\"\n        separator={true}\n        navigationPosition=\"center\"\n        stepper={stepper}\n        actions={actions}\n        breadcrumbs={breadcrumbs}\n        badge={badge}\n        meta={meta}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "PageHeader Level 2 And Beyond": {
    "prefix": "PageHeader Level 2 And Beyond",
    "description": "Level 2 And Beyond",
    "body": [
      "import { Stepper, Dropdown, Button, Breadcrumbs, PageHeader } from '@innovaccer/design-system';\n    () => {\n  const stepperData = [\n    {\n      value: 'Upload',\n      label: 'Upload',\n    },\n    {\n      value: 'configure',\n      label: 'configure'\n    },\n  ];\n\n  const breadcrumbData = [\n    {\n      label: 'Care Management',\n      link: '/Care Management'\n    },\n    {\n      label: 'Care Potential',\n      link: '/Care Potential'\n    }\n  ];\n\n  const [active, setActive] = React.useState(0);\n  const [completed, setCompleted] = React.useState(-1);\n\n  const onChangeHandler = (activeStep) => {\n    setActive(activeStep);\n  };\n\n  const onClickHandler = () => {\n    if (active > completed) setCompleted(active);\n    active > completed ? setActive(active + 1) : setActive(completed + 1);\n  };\n  const options = [\n    {\n      label: 'Option 1',\n      value: 'Option 1',\n    },\n    {\n      label: 'Option 2',\n      value: 'Option 2',\n    },\n    {\n      label: 'Option 3',\n      value: 'Option 3',\n    }\n  ];\n\n  const stepper = <Stepper steps={stepperData} onChange={onChangeHandler} active={active} completed={completed} />;\n  const actions = (\n    <div className=\"d-flex justify-content-end align-items-center\">\n      <div className=\"mr-4\">\n        <Dropdown\n          menu={true} icon=\"more_horiz\"\n          options={options}\n        />\n      </div>\n      <Button className=\"mr-4\">Cancel</Button>\n      <Button className=\"mr-4\" appearance=\"primary\" onClick={onClickHandler}>Next</Button>\n    </div>\n  );\n  const breadcrumbs = (\n    <Breadcrumbs\n      list={breadcrumbData}\n      onClick={link => console.log(`on-click: ${link}`)}\n    />\n  );\n\n  return (\n    <div className=\"w-100 p-6 bg-secondary-lightest\">\n      <PageHeader\n        title=\"Upload\"\n        navigationPosition=\"center\"\n        separator={false}\n        stepper={stepper}\n        actions={actions}\n        breadcrumbs={breadcrumbs}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "PageHeader Responsiveness": {
    "prefix": "PageHeader Responsiveness",
    "description": "Responsiveness",
    "body": [
      "import { Text, AvatarGroup, Dropdown, Breadcrumbs, StatusHint, Navigation, PageHeader } from '@innovaccer/design-system';\n    () => {\n  const navigationData = [\n    {\n      name: 'menu_1',\n      label: 'Interventions',\n    },\n    {\n      name: 'menu_2',\n      label: 'No Linked Activites'\n    }\n  ];\n\n  const list = [\n    {\n      firstName: 'John',\n      lastName: 'Doe',\n      appearance: 'accent2',\n    },\n    {\n      firstName: 'Steven',\n      lastName: 'Packton',\n      appearance: 'accent3',\n    }\n  ];\n\n  const options = [\n    {\n      icon: 'print',\n      label: 'Edit',\n      value: 'Edit',\n    },\n    {\n      icon: 'assignment_turned_in',\n      label: 'Complete',\n      value: 'Complete',\n    },\n  ];\n\n  const [active, setActive] = React.useState({\n    name: 'menu_1'\n  });\n\n  const onClickHandler = (menu) => {\n    setActive(menu);\n  };\n\n  const actions = (\n    <div className=\"d-flex justify-content-end align-items-center\">\n    <Text className=\"mr-4\">Updated 1 day ago</Text>\n    <AvatarGroup className=\"mr-5\" list={list}/>\n    <div className=\"mr-4\">\n      <Dropdown\n        menu={true}\n        optionType=\"WITH_ICON\"\n        icon=\"more_horiz\"\n        options={options}\n        align=\"left\"\n      />\n    </div>\n    </div>\n  );\n\n  const breadcrumbs = (\n    <Breadcrumbs\n      list={[{\n        label: 'Care potential',\n        link: '/Care potential'\n      }]}\n      onClick={link => console.log(`on-click: ${link}`)}\n    />\n  );\n\n  const status = (\n    <StatusHint appearance=\"info\">Ongoing</StatusHint>\n  );\n\n  const navigation = (\n    <Navigation\n      menus={navigationData}\n      onClick={onClickHandler}\n      active={active}\n    />\n  );\n\n  return (\n    <div className=\"py-6 bg-secondary-lightest\">\n      <PageHeader\n        navigationPosition=\"bottom\"\n        title=\"Pac Follow-Up Protocol\"\n        separator={true}\n        navigation={navigation}\n        actions={actions}\n        breadcrumbs={breadcrumbs}\n        status={status}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "Pagination All": {
    "prefix": "Pagination All",
    "description": "All",
    "body": [
      "import { Pagination } from '@innovaccer/design-system';\n    () => {\n  const paginationType = 'jump';\n\n  const page = 1;\n\n  const totalPages = 50;\n\n  return (\n    <Pagination\n      type={paginationType}\n      page={page}\n      totalPages={totalPages}\n      onPageChange={(pageNo) => action(`No-change-action: ${pageNo}`)()}\n    />\n  );\n}\n    "
    ]
  },
  "Pagination": {
    "prefix": "Pagination",
    "description": "Type",
    "body": [
      "import { Text, Pagination } from '@innovaccer/design-system';\n    () => {\n  const paginationTypes = ['basic', 'jump'];\n\n  const page = 1;\n\n  const totalPages = 50;\n\n  const innerStyle = {\n    display: 'flex',\n    'flex-direction': 'column',\n    'align-items': 'center',\n  };\n\n  return (\n    <div className=\"d-flex\">\n      {paginationTypes.map((displayType, ind) => {\n        return (\n          <div key={ind} style={innerStyle}>\n            <Text weight=\"strong\">{displayType}</Text>\n            <br />\n            <Pagination\n              type={displayType}\n              page={page}\n              totalPages={totalPages}\n              onPageChange={(pageNo) => action(`No-change-action: ${pageNo}`)()}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n    "
    ]
  },
  "Paragraph": {
    "prefix": "Paragraph",
    "description": "Appearance",
    "body": [
      "import { Paragraph, Text } from '@innovaccer/design-system';\n    () => {\n  const appearances = ['default', 'white', 'destructive', 'subtle', 'disabled'];\n  return (\n    <div className=\"d-flex\">\n      {appearances.map((appear, ind) => {\n        return (\n          <div key={ind} className=\"mr-6\">\n            <div className={appear === 'white' ? 'bg-dark' : 'bg-transparent'}>\n              <Paragraph appearance={appear}>Paragraph</Paragraph>\n            </div>\n            <br />\n            <Text weight=\"strong\">{appear.charAt(0).toUpperCase() + appear.slice(1)}</Text>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n    "
    ]
  },
  "Pills All": {
    "prefix": "Pills All",
    "description": "All",
    "body": [
      "import { Pills } from '@innovaccer/design-system';\n    () => {\n  const appearance = 'warning';\n  const subtle = false;\n  const children = 10;\n\n  return (\n    <Pills appearance={appearance} subtle={subtle}>\n      {children}\n    </Pills>\n  );\n}\n    "
    ]
  },
  "Pills": {
    "prefix": "Pills",
    "description": "Subtle",
    "body": [
      "import { Pills, Text } from '@innovaccer/design-system';\n    () => {\n  const ButtonSubtle = true;\n  const weight = 'strong';\n  const children = 10;\n  const appearances = [\n    'primary',\n    'secondary',\n    'alert',\n    'warning',\n    'success',\n    'accent1',\n    'accent2',\n    'accent3',\n    'accent4',\n  ];\n  return (\n    <div className=\"d-flex\">\n      {appearances.map((appear, ind) => {\n        return (\n          <div key={ind} className=\"mr-9\">\n            <Pills appearance={appear} subtle={ButtonSubtle}>\n              {children}\n            </Pills>\n            <br />\n            <Text weight={weight}>{appear.charAt(0).toUpperCase() + appear.slice(1)}</Text>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n    "
    ]
  },
  "Popover All": {
    "prefix": "Popover All",
    "description": "All",
    "body": [
      "import { Popover, Button, Text } from '@innovaccer/design-system';\n    () => {\n  return(\n    <div className='mb-11'>\n      <Popover\n        position=\"bottom-start\"\n        on=\"click\"\n        trigger={<Button appearance=\"basic\">Open Popover</Button>}\n      >\n        <div style={{ width: 100 }} className='mx-6 my-6'>\n          <Text>Popup</Text>\n          <Button appearance=\"primary\" className=\"mt-4\">Click</Button>\n        </div>\n      </Popover>\n    </div>\n  );\n}\n    "
    ]
  },
  "Popover Dark Popover": {
    "prefix": "Popover Dark Popover",
    "description": "Dark Popover",
    "body": [
      "import { Popover, Button } from '@innovaccer/design-system';\n    () => (\n  <div className=\"mb-9\">\n    <Popover\n      position=\"bottom\"\n      on=\"click\"\n      trigger={<Button appearance=\"basic\">Open Popover</Button>}\n      dark={true}\n      open={false}\n    >\n      <div style={{ width: 'var(--spacing-7)', height: 'var(--spacing-7)' }} />\n    </Popover>\n  </div>\n)\n    "
    ]
  },
  "Popover Light Popover": {
    "prefix": "Popover Light Popover",
    "description": "Light Popover",
    "body": [
      "import { Popover, Button } from '@innovaccer/design-system';\n    () => (\n  <div className=\"mb-9\">\n    <Popover position=\"bottom\" on=\"click\" trigger={<Button appearance=\"basic\">Open Popover</Button>} open={false}>\n      <div style={{ width: 'var(--spacing-7)', height: 'var(--spacing-7)' }} />\n    </Popover>\n  </div>\n)\n    "
    ]
  },
  "Popover Popover With Action": {
    "prefix": "Popover Popover With Action",
    "description": "Popover With Action",
    "body": [
      "import { Popover, Button, Text } from '@innovaccer/design-system';\n    () => (\n  <div className=\"mb-10\">\n    <Popover position=\"bottom-start\" on=\"click\" trigger={<Button appearance=\"basic\">Open Popover</Button>} open={false}>\n      <div style={{ width: 'var(--spacing-9)' }} className=\"mx-6 my-6\">\n        <Text>You have some edits saved in draft state.You can resume editing or discard those changes.</Text>\n        <div className=\"d-flex\">\n          <Button className=\"mt-4\" appearance=\"primary\">\n            Edit Registry\n          </Button>\n          <Button className=\"mt-4 ml-5\" appearance=\"basic\">\n            Discard Changes\n          </Button>\n        </div>\n      </div>\n    </Popover>\n  </div>\n)\n    "
    ]
  },
  "Popover Popover With Input": {
    "prefix": "Popover Popover With Input",
    "description": "Popover With Input",
    "body": [
      "import { Popover, Link, Label, Input, Textarea, Button } from '@innovaccer/design-system';\n    () => (\n  <div className=\"mb-13\">\n    <Popover position=\"bottom-start\" on=\"click\" trigger={<Link>Open Popover</Link>} open={false}>\n      <div style={{ width: 'var(--spacing-9)', height: 'var(--spacing-8)+var(--spacing-xl)' }} className=\"mx-6 my-6\">\n        <Label required={true} withInput={true}>\n          Name\n        </Label>\n        <Input name=\"input\" required={true} placeholder=\"Name\" />\n        <Label className=\"mt-4\" withInput={true}>\n          Description\n        </Label>\n        <Textarea name=\"Textarea\" placeholder=\"Write a description\" />\n        <div className=\"d-flex justify-content-end\">\n          <Button className=\"mt-5\" appearance=\"primary\">\n            Save Filter\n          </Button>\n        </div>\n      </div>\n    </Popover>\n  </div>\n)\n    "
    ]
  },
  "Popover Popover With Menu": {
    "prefix": "Popover Popover With Menu",
    "description": "Popover With Menu",
    "body": [
      "import { Avatar, Text, Button, Popover } from '@innovaccer/design-system';\n    () => {\n  const trigger = (\n    <div className=\"d-flex\">\n      <Avatar firstName=\"John\" lastName=\"Doe\" />\n      <Text className=\"ml-4 mt-4\" size=\"large\">\n        Open Popover\n      </Text>\n      <Button appearance=\"transparent\" icon=\"arrow_drop_down\" />\n    </div>\n  );\n\n  return (\n    <div className=\"mb-12\">\n      <Popover position=\"bottom-start\" on=\"click\" trigger={trigger} open={false}>\n        <div style={{ width: 'var(--spacing-9)' }} className=\" mx-6 my-6\">\n          <div className=\"d-flex\">\n            <Avatar firstName=\"John\" lastName=\"Doe\" />\n            <div className=\"Option-label\">\n              <Text className=\"ml-4\">James Donovan</Text>\n              <Text className=\"ml-4\" appearance=\"subtle\">\n                jdonovan @two.health\n              </Text>\n            </div>\n          </div>\n          <div className=\"Dropdown-wrapper\">\n            <div className=\"Option OptionWrapper\">Account Overview</div>\n            <div className=\"Option OptionWrapper\">Sign Out</div>\n          </div>\n        </div>\n      </Popover>\n    </div>\n  );\n}\n    "
    ]
  },
  "Popover   Boundary Element": {
    "prefix": "Popover   Boundary Element",
    "description": "Boundary Element",
    "body": [
      "import { Popover, Button, Text } from '@innovaccer/design-system';\n    () => {\n  const ref = React.useRef(null);\n\n  return(\n    <div ref={ref} style={{ height: 150, padding: 20, border: '1px dashed', overflow: 'auto'}}>\n      <Popover\n        position=\"bottom-start\"\n        on=\"click\"\n        open={true}\n        trigger={<Button appearance=\"basic\">Open Popup</Button>}\n        boundaryElement={ref}\n        closeOnScroll={true}\n      >\n        <div style={{ width: 100 }} className='mx-6 my-6'>\n          <Text>Popup</Text>\n          <Button appearance=\"primary\" className=\"mt-4\">Click</Button>\n        </div>\n      </Popover>\n      <div style={{height: 300}} />\n    </div>\n  );\n}\n    "
    ]
  },
  "Popover": {
    "prefix": "Popover",
    "description": "Theme",
    "body": [
      "import { Button, Popover, Text } from '@innovaccer/design-system';\n    () => {\n  const trigger = <Button appearance=\"basic\">Light Theme</Button>;\n  const triggerDark = <Button appearance=\"basic\">Dark Theme</Button>;\n\n  const options = {\n    open: true,\n  };\n\n  return (\n    <div className=\"d-flex\">\n      <div className=\"mb-11\" style={{ marginRight: '40%' }}>\n        <Popover trigger={triggerDark} dark={true} {...options}>\n          <div style={{ width: 100 }} className=\"mx-6 my-6\">\n            <Text appearance={'white'}>Popup</Text>\n            <Button appearance=\"primary\" className=\"mt-4\">\n              Click\n            </Button>\n          </div>\n        </Popover>\n      </div>\n      <div>\n        <Popover trigger={trigger} dark={false} {...options}>\n          <div style={{ width: 100 }} className=\"mx-6 my-6\">\n            <Text>Popup</Text>\n            <Button appearance=\"primary\" className=\"mt-4\">\n              Click\n            </Button>\n          </div>\n        </Popover>\n      </div>\n    </div>\n  );\n}\n    "
    ]
  },
  "ProgressBar All": {
    "prefix": "ProgressBar All",
    "description": "All",
    "body": [
      "import { ProgressBar } from '@innovaccer/design-system';\n    () => {\n  const value = 10;\n  const max = 100;\n\n  return (\n    <div className=\"w-50\">\n      <ProgressBar value={value} max={max} />\n    </div>\n  );\n}\n    "
    ]
  },
  "ProgressBar Fifty Percent": {
    "prefix": "ProgressBar Fifty Percent",
    "description": "Fifty Percent",
    "body": [
      "import { ProgressBar } from '@innovaccer/design-system';\n    () => <ProgressBar value={50} max={100} />\n    "
    ]
  },
  "ProgressBar": {
    "prefix": "ProgressBar",
    "description": "With Animation",
    "body": [
      "import { ProgressBar } from '@innovaccer/design-system';\n    () => {\n  const [progress, setProgress] = React.useState(0);\n  \n  React.useEffect(() => {\n    const interval = setInterval(() => {\n      setProgress(progress + 25);\n    }, 1000);\n  });\n\n  return <ProgressBar value={progress} max={100} />;\n}\n    "
    ]
  },
  "ProgressRing All": {
    "prefix": "ProgressRing All",
    "description": "All",
    "body": [
      "import { ProgressRing } from '@innovaccer/design-system';\n    () => {\n  const size = 'small';\n  const value = 30;\n  const max = 100;\n\n  return <ProgressRing value={value} size={size} max={max} />;\n}\n    "
    ]
  },
  "ProgressRing": {
    "prefix": "ProgressRing",
    "description": "With Animation",
    "body": [
      "import { ProgressRing } from '@innovaccer/design-system';\n    () => {\n  const [progress, setProgress] = React.useState(0);\n  \n  React.useEffect(() => {\n    const interval = setInterval(() => {\n      setProgress(progress + 25);\n    }, 1000);\n  });\n\n  return <ProgressRing value={progress} max={100} />;\n}\n    "
    ]
  },
  "Radio All": {
    "prefix": "Radio All",
    "description": "All",
    "body": [
      "import { Radio } from '@innovaccer/design-system';\n    () => {\n  const size = 'tiny';\n\n  const label = 'Radio';\n\n  const disabled = false;\n\n  const defaultChecked = false;\n\n  const checked = undefined;\n\n  const name = 'gender';\n\n  const onChangeHandler = (event) => {\n    return action(`onChange: ${event.target.value}: ${event.target.checked}`)();\n  };\n\n  return (\n    <div>\n      <Radio\n        disabled={disabled}\n        size={size}\n        label={label}\n        name={name}\n        value={label}\n        defaultChecked={defaultChecked}\n        checked={checked}\n        onChange={onChangeHandler}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "Radio Alignment Of Radio Group": {
    "prefix": "Radio Alignment Of Radio Group",
    "description": "Alignment Of Radio Group",
    "body": [
      "import { Row, Column, Text, Radio } from '@innovaccer/design-system';\n    () => (\n  <Row>\n    <Column>\n      <div className=\"pb-5\">\n        <Text>Horizontal alignment</Text>\n      </div>\n      <div className=\"d-flex\">\n        <div className=\"mr-9 \">\n          <Radio size={'regular'} label={'Male'} name={'Gender'} value={'Male'} defaultChecked={true} />\n        </div>\n\n        <div className=\"mr-9 \">\n          <Radio size={'regular'} label={'Female'} name={'Gender'} value={'Female'} />\n        </div>\n\n        <div className=\"mr-9 \">\n          <Radio size={'regular'} label={'Other'} name={'Gender'} value={'Other'} />\n        </div>\n      </div>\n    </Column>\n    <Column>\n      <div className=\"pb-5\">\n        <Text>Vertical alignment</Text>\n      </div>\n\n      <Radio size={'regular'} label={'Male'} name={'gender'} value={'Male'} defaultChecked={true} />\n\n      <Radio size={'regular'} label={'Female'} name={'gender'} value={'Female'} />\n\n      <Radio size={'regular'} label={'Other'} name={'gender'} value={'Other'} />\n    </Column>\n  </Row>\n)\n    "
    ]
  },
  "Radio Default Radio": {
    "prefix": "Radio Default Radio",
    "description": "Default Radio",
    "body": [
      "import { Radio } from '@innovaccer/design-system';\n    () => <Radio label={'Survey Outreach'} name={'Radio'} value={'Radio'} />\n    "
    ]
  },
  "Radio Error Radio": {
    "prefix": "Radio Error Radio",
    "description": "Error Radio",
    "body": [
      "import { Radio } from '@innovaccer/design-system';\n    () => <Radio label={'Error label'} name={'Radio'} value={'Radio'} error={true} />\n    "
    ]
  },
  "Radio Overflow Content": {
    "prefix": "Radio Overflow Content",
    "description": "Overflow Content",
    "body": [
      "import { Radio } from '@innovaccer/design-system';\n    () => (\n  <div className=\"w-25\">\n    <Radio label=\"Share both your healthcare data and some personal information.\" name=\"options\" value=\"Option 1\" />\n  </div>\n)\n    "
    ]
  },
  "Radio Radio Group": {
    "prefix": "Radio Radio Group",
    "description": "Radio Group",
    "body": [
      "import { Text, Radio } from '@innovaccer/design-system';\n    () => (\n  <>\n    <Text weight=\"strong\">Priority</Text>\n    <div className=\"mt-4\">\n      <Radio size={'regular'} label={'High'} name={'Priority'} value={'High'} defaultChecked={true} />\n      <Radio size={'regular'} label={'Medium'} name={'Priority'} value={'Medium'} />\n      <Radio size={'regular'} label={'Low'} name={'Priority'} value={'Low'} />\n    </div>\n  </>\n)\n    "
    ]
  },
  "Radio   Controlled Radio Group": {
    "prefix": "Radio   Controlled Radio Group",
    "description": "Controlled Radio Group",
    "body": [
      "import { Radio } from '@innovaccer/design-system';\n    () => {\n  const [selected, setSelected] = React.useState('Option 2');\n\n  const onChangeHandler = (event) => {\n    setSelected(event.target.value);\n  };\n\n  return (\n    <div>\n      <Radio\n        label={'Option 1'}\n        name={'options'}\n        value={'Option 1'}\n        checked={selected === 'Option 1'}\n        onChange={onChangeHandler}\n      />\n      <Radio\n        label={'Option 2'}\n        name={'options'}\n        value={'Option 2'}\n        checked={selected === 'Option 2'}\n        onChange={onChangeHandler}\n      />\n      <Radio\n        label={'Option 3'}\n        name={'options'}\n        value={'Option 3'}\n        checked={selected === 'Option 3'}\n        onChange={onChangeHandler}\n      />\n    </div>\n  );\n};\n\n    "
    ]
  },
  "Radio   Size": {
    "prefix": "Radio   Size",
    "description": "Size",
    "body": [
      "import { Radio } from '@innovaccer/design-system';\n    () => {\n  const sizes = ['tiny', 'regular'];\n\n  const name = 'gender';\n  return (\n    <div className=\"d-flex\">\n      {sizes.map((RadioSize, ind) => {\n        return (\n          <div key={ind} className=\"mr-9\">\n            <Radio\n              size={RadioSize}\n              label={RadioSize.charAt(0).toUpperCase() + RadioSize.slice(1)}\n              name={name}\n              value={RadioSize}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n    "
    ]
  },
  "Radio   State": {
    "prefix": "Radio   State",
    "description": "State",
    "body": [
      "import { Radio } from '@innovaccer/design-system';\n    () => {\n  const name = 'state';\n\n  return (\n    <div className=\"d-flex\">\n      <div className=\"mr-9\">\n        <Radio label={'Disabled'} name={name} value={'Disabled'} disabled={true} />\n      </div>\n      <div>\n        <Radio label={'Enabled'} name={name} value={'Enabled'} disabled={false} />\n      </div>\n    </div>\n  );\n}\n    "
    ]
  },
  "Radio   Uncontrolled Radio Group": {
    "prefix": "Radio   Uncontrolled Radio Group",
    "description": "Uncontrolled Radio Group",
    "body": [
      "import { Radio } from '@innovaccer/design-system';\n    () => {\n  const onChangeHandler = (event) => {\n    return action(`onChange: ${event.target.value}: ${event.target.checked}`)();\n  };\n\n  return (\n    <div>\n      <Radio label={'Option 1'} name={'options'} value={'Option 1'} onChange={onChangeHandler} />\n      <Radio label={'Option 2'} name={'options'} value={'Option 2'} defaultChecked={true} onChange={onChangeHandler} />\n      <Radio label={'Option 3'} name={'options'} value={'Option 3'} onChange={onChangeHandler} />\n    </div>\n  );\n}\n    "
    ]
  },
  "Radio With Help Text": {
    "prefix": "Radio With Help Text",
    "description": "With Help Text",
    "body": [
      "import { Radio } from '@innovaccer/design-system';\n    () => {\n  return (\n    <Radio\n      label={'Share all your data'}\n      value={'accepted'}\n      name={'consent'}\n      helpText={'This app will have access to both your healthcare data and some personal information.'}\n      className=\"w-50\"\n    />\n  );\n}\n    "
    ]
  },
  "RangeSlider All": {
    "prefix": "RangeSlider All",
    "description": "All",
    "body": [
      "import { RangeSlider } from '@innovaccer/design-system';\n    () => {\n  const min = 0;\n  const max = 10;\n  const stepSize = 0.1;\n  const labelStepSize = 1;\n  const label = 'Slider Label';\n  const disabled = false;\n\n  const onChange = (value) => {\n    return action(`new value: ${value}`);\n  };\n\n  const options = {\n    min,\n    max,\n    stepSize,\n    labelStepSize,\n    label,\n    disabled,\n    onChange,\n    defaultValue: [2, 4],\n  };\n\n  return <RangeSlider className=\"mt-2\" {...options} />;\n}\n    "
    ]
  },
  "RangeSlider   Controlled Slider": {
    "prefix": "RangeSlider   Controlled Slider",
    "description": "Controlled Slider",
    "body": [
      "import { RangeSlider } from '@innovaccer/design-system';\n    () => {\n  const [value, setValue] = React.useState([2, 4]);\n\n  const onChange = (value) => {\n    this.window.setTimeout(() => {\n      setValue(value);\n    }, 1000);\n  };\n\n  return (\n    <RangeSlider\n      min={1}\n      max={10}\n      label='Controlled Slider'\n      stepSize={0.1}\n      labelStepSize={1}\n      value={value}\n      onChange={onChange}\n    />\n  );\n}\n    "
    ]
  },
  "RangeSlider   Cutsom Labels": {
    "prefix": "RangeSlider   Cutsom Labels",
    "description": "Cutsom Labels",
    "body": [
      "import { RangeSlider } from '@innovaccer/design-system';\n    () => {\n  const [value, setValue] = React.useState([2, 4]);\n\n  const onChange = (value) => {\n    setValue(value);\n  };\n\n  const labelRenderer = (value) => {\n    return `${value}%`;\n  };\n\n  return (\n    <RangeSlider\n      min={1}\n      max={10}\n      stepSize={0.1}\n      labelStepSize={1}\n      value={value}\n      onChange={onChange}\n      labelRenderer={labelRenderer}\n    />\n  );\n}\n    "
    ]
  },
  "RangeSlider   Disabled": {
    "prefix": "RangeSlider   Disabled",
    "description": "Disabled",
    "body": [
      "import { RangeSlider } from '@innovaccer/design-system';\n    () => {\n  return (\n    <div>\n      <RangeSlider\n        className=\"mb-9 mt-2\"\n        label=\"Disabled Slider\"\n        disabled={true}\n        stepSize={0.1}\n        labelStepSize={1}\n        defaultValue={[2, 4]}\n      />\n      <RangeSlider label=\"Default Slider\" stepSize={0.1} labelStepSize={1} defaultValue={[2, 4]} className=\"mt-2\" />\n    </div>\n  );\n}\n    "
    ]
  },
  "RangeSlider   Disctere Slider": {
    "prefix": "RangeSlider   Disctere Slider",
    "description": "Disctere Slider",
    "body": [
      "import { RangeSlider } from '@innovaccer/design-system';\n    () => {\n  return (\n    <RangeSlider\n      min={1}\n      max={10}\n      label=\"Discrete Slider\"\n      stepSize={1}\n      labelStepSize={1}\n      defaultValue={[2, 4]}\n      className=\"mt-2\"\n    />\n  );\n}\n    "
    ]
  },
  "RangeSlider   Free Slider": {
    "prefix": "RangeSlider   Free Slider",
    "description": "Free Slider",
    "body": [
      "import { RangeSlider } from '@innovaccer/design-system';\n    () => {\n  return (\n    <RangeSlider\n      min={1}\n      max={10}\n      label=\"Free Slider\"\n      stepSize={0.1}\n      labelStepSize={1}\n      defaultValue={[2, 4]}\n      className=\"mt-2\"\n    />\n  );\n}\n    "
    ]
  },
  "RangeSlider   Slider Label": {
    "prefix": "RangeSlider   Slider Label",
    "description": "Slider Label",
    "body": [
      "import { Text, RangeSlider } from '@innovaccer/design-system';\n    () => {\n  return (\n    <div>\n      <div className=\"mb-9\">\n        <Text weight=\"strong\">With Slider Label</Text>\n        <br />\n        <RangeSlider label=\"Slider-label\" stepSize={0.1} labelStepSize={1} defaultValue={[2, 4]} className=\"mt-2\" />\n      </div>\n      <div>\n        <Text weight=\"strong\">Without Slider Label</Text>\n        <br />\n        <RangeSlider stepSize={0.1} labelStepSize={1} defaultValue={[2, 4]} className=\"mt-2\" />\n      </div>\n    </div>\n  );\n}\n    "
    ]
  },
  "RangeSlider   Uncontrolled Slider": {
    "prefix": "RangeSlider   Uncontrolled Slider",
    "description": "Uncontrolled Slider",
    "body": [
      "import { RangeSlider } from '@innovaccer/design-system';\n    () => {\n  return (\n    <RangeSlider\n      min={1}\n      max={10}\n      label=\"Uncontrolled Slider\"\n      stepSize={0.1}\n      labelStepSize={1}\n      defaultValue={[2, 4]}\n      className=\"mt-2\"\n    />\n  );\n}\n    "
    ]
  },
  "Sidesheet": {
    "prefix": "Sidesheet",
    "description": "Two Steps",
    "body": [
      "import { Button, Sidesheet, Heading, Text, ModalDescription } from '@innovaccer/design-system';\n    () => {\n  const [open, setOpen] = React.useState(false);\n  const [page, setPage] = React.useState(1);\n  const [animate, setAnimate] = React.useState(true);\n\n  const onClose = () => {\n    setOpen(false);\n  };\n\n  React.useEffect(() => {\n    setAnimate(true);\n    return () => {\n      setAnimate(false);\n    }\n  }, [page])\n\n  const backIconCallback = (e) => {\n    console.log('back icon clicked');\n    setPage(1);\n  };\n\n  const headerOptions = {\n    backIconCallback,\n    backIcon: page === 2,\n    heading: `Heading ${page}`,\n    subHeading: 'Subheading',\n  };\n\n  const options = {\n    onClose,\n    open,\n    headerOptions,\n    stickFooter: true,\n    backdropClose: true,\n    footer: (\n      <>\n        {page === 1 && (\n          <Button\n            appearance=\"primary\"\n            className=\"mr-4\"\n            onClick={() => setPage(2)}\n          >\n            Next\n          </Button>\n        )}\n        {page === 2 && (\n          <>\n            <Button\n              appearance=\"primary\"\n              onClick={() => console.log('Submit button click')}\n              className=\"mr-4\"\n            >\n              Submit\n            </Button>\n            <Button\n              appearance=\"basic\"\n              onClick={() => setPage(1)}\n            >\n              Back\n            </Button>\n          </>\n        )}\n      </>\n    )\n  };\n\n  const modalDescriptionOptions = {\n    title: 'Description Title',\n    description: 'Adding a subheading clearly indicates the hierarchy of the information.',\n    removePadding: true\n  };\n\n  const modalDescriptionOptionsWithoutTitle = {\n    description: 'Card Sections include supporting text like an article summary or a restaurant description.',\n    removePadding: true\n  };\n\n  return (\n    <div>\n      <Button appearance=\"primary\" onClick={() => setOpen(true)}>Open Sidesheet</Button>\n      <Sidesheet {...options} >\n        <div \n          className={ animate ? 'fade-in' : ''} \n          onAnimationEnd={() => setAnimate(false)}\n        >\n          <Heading size=\"s\">{`Page ${page}`}</Heading>\n          <Text>Modal Body</Text>\n          <ModalDescription {...modalDescriptionOptions} />\n          <ModalDescription {...modalDescriptionOptionsWithoutTitle} />\n        </div>\n      </Sidesheet>\n    </div>\n  );\n}\n    "
    ]
  },
  "Slider All": {
    "prefix": "Slider All",
    "description": "All",
    "body": [
      "import { Slider } from '@innovaccer/design-system';\n    () => {\n  const min = 0;\n  const max = 10;\n  const stepSize = 0.1;\n  const labelStepSize = 1;\n  const defaultValue = 4;\n  const label = 'Slider Label';\n  const disabled = false;\n\n  const onChange = (value) => {\n    return action(`new value: ${value}`);\n  };\n\n  const options = {\n    min,\n    max,\n    stepSize,\n    labelStepSize,\n    label,\n    disabled,\n    defaultValue,\n    onChange,\n  };\n\n  return <Slider key={defaultValue} className=\"mt-2\" {...options} />;\n}\n    "
    ]
  },
  "Slider   Controlled Slider": {
    "prefix": "Slider   Controlled Slider",
    "description": "Controlled Slider",
    "body": [
      "import { Slider } from '@innovaccer/design-system';\n    () => {\n  const [value, setValue] = React.useState(4);\n\n  const onChange = (value) => {\n    this.window.setTimeout(() => {\n      setValue(value);\n    }, 1000);\n  };\n\n  return (\n    <Slider\n      min={1}\n      max={10}\n      label='Controlled Slider'\n      stepSize={0.1}\n      labelStepSize={1}\n      value={value}\n      onChange={onChange}\n      className=\"mt-2\"\n    />\n  );\n}\n    "
    ]
  },
  "Slider   Cutsom Labels": {
    "prefix": "Slider   Cutsom Labels",
    "description": "Cutsom Labels",
    "body": [
      "import { Slider } from '@innovaccer/design-system';\n    () => {\n  const [value, setValue] = React.useState(4);\n\n  const onChange = (value) => {\n    setValue(value);\n  };\n\n  const labelRenderer = (value) => {\n    return `${value}%`;\n  };\n\n  return (\n    <Slider\n      min={1}\n      max={10}\n      stepSize={0.1}\n      labelStepSize={1}\n      value={value}\n      onChange={onChange}\n      labelRenderer={labelRenderer}\n    />\n  );\n}\n    "
    ]
  },
  "Slider   Disabled": {
    "prefix": "Slider   Disabled",
    "description": "Disabled",
    "body": [
      "import { Slider } from '@innovaccer/design-system';\n    () => {\n  return (\n    <div>\n      <Slider\n        className=\"mb-9 mt-2\"\n        label=\"Disabled Slider\"\n        disabled={true}\n        stepSize={0.1}\n        labelStepSize={1}\n        defaultValue={4}\n      />\n      <Slider label=\"Default Slider\" stepSize={0.1} labelStepSize={1} defaultValue={4} className=\"mt-2\" />\n    </div>\n  );\n}\n    "
    ]
  },
  "Slider   Disctere Slider": {
    "prefix": "Slider   Disctere Slider",
    "description": "Disctere Slider",
    "body": [
      "import { Slider } from '@innovaccer/design-system';\n    () => {\n  return (\n    <Slider min={1} max={10} label=\"Discrete Slider\" stepSize={1} labelStepSize={1} defaultValue={4} className=\"mt-2\" />\n  );\n}\n    "
    ]
  },
  "Slider   Free Slider": {
    "prefix": "Slider   Free Slider",
    "description": "Free Slider",
    "body": [
      "import { Slider } from '@innovaccer/design-system';\n    () => {\n  return (\n    <Slider min={1} max={10} label=\"Free Slider\" stepSize={0.1} labelStepSize={1} defaultValue={4} className=\"mt-2\" />\n  );\n}\n    "
    ]
  },
  "Slider   Slider Label": {
    "prefix": "Slider   Slider Label",
    "description": "Slider Label",
    "body": [
      "import { Text, Slider } from '@innovaccer/design-system';\n    () => {\n  return (\n    <div>\n      <div className=\"mb-9\">\n        <Text weight=\"strong\">With Slider Label</Text>\n        <br />\n        <Slider label=\"Slider-label\" stepSize={0.1} labelStepSize={1} defaultValue={4} className=\"mt-2\" />\n      </div>\n      <div>\n        <Text weight=\"strong\">Without Slider Label</Text>\n        <br />\n        <Slider stepSize={0.1} labelStepSize={1} defaultValue={4} className=\"mt-2\" />\n      </div>\n    </div>\n  );\n}\n    "
    ]
  },
  "Slider   Uncontrolled Slider": {
    "prefix": "Slider   Uncontrolled Slider",
    "description": "Uncontrolled Slider",
    "body": [
      "import { Slider } from '@innovaccer/design-system';\n    () => {\n  return (\n    <Slider\n      min={1}\n      max={10}\n      label=\"Uncontrolled Slider\"\n      stepSize={0.1}\n      labelStepSize={1}\n      defaultValue={4}\n      className=\"mt-2\"\n    />\n  );\n}\n    "
    ]
  },
  "StatusHint All": {
    "prefix": "StatusHint All",
    "description": "All",
    "body": [
      "import { StatusHint } from '@innovaccer/design-system';\n    () => {\n  const children = 'Status Hint';\n\n  const appearance = 'success';\n\n  const options = {\n    appearance,\n  };\n\n  return (\n    <div>\n      <StatusHint {...options}>{children}</StatusHint>\n    </div>\n  );\n}\n    "
    ]
  },
  "StatusHint": {
    "prefix": "StatusHint",
    "description": "Appearance",
    "body": [
      "import { StatusHint } from '@innovaccer/design-system';\n    () => {\n  const appearances = ['info', 'success', 'alert', 'warning', 'default'];\n\n  return (\n    <div>\n      {appearances.map((iconAppearance, i) => {\n        return (\n          <div key={i} className=\"mb-4\">\n            <StatusHint appearance={iconAppearance}>{iconAppearance}</StatusHint>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n    "
    ]
  },
  "Stepper All": {
    "prefix": "Stepper All",
    "description": "All",
    "body": [
      "import { Stepper } from '@innovaccer/design-system';\n    () => {\n  const [active, setActive] = React.useState(2);\n\n  const steps = [\n    {\n      label: 'Step',\n      value: 'Step1'\n    },\n    {\n      label: 'Step',\n      value: 'Step2'\n    },\n    {\n      label: 'Step',\n      value: 'Step3'\n    },\n    {\n      label: 'Step',\n      value: 'Step4'\n    }\n  ];\n\n  const onChange = (index) => {\n    setActive(index);\n  };\n\n  return (\n    <Stepper\n      steps={steps}\n      active={active}\n      completed={1}\n      onChange={onChange}\n    />\n  );\n}\n    "
    ]
  },
  "Stepper Skippable Step": {
    "prefix": "Stepper Skippable Step",
    "description": "Skippable Step",
    "body": [
      "import { Stepper, Button } from '@innovaccer/design-system';\n    () => {\n  const steps = [\n    {\n      label: 'Application details',\n      value: 'application_details'\n    },\n    {\n      label: 'Approval questions',\n      value: 'approval_questions'\n    },\n    {\n      label: 'Payer information',\n      value: 'payer_information'\n    },\n  ];\n\n  const [active, setActive] = React.useState(0);\n  const [completed, setCompleted] = React.useState(active - 1);\n  const [skipIndexes, setSkip] = React.useState([]);\n  const requiredSteps = [0];\n\n  const onChange = (activeStep) => {\n    setActive(activeStep);\n  };\n\n  const onClickHandler = () => {\n    if (skipIndexes.includes(active)) {\n      const updatedSkip = [...skipIndexes];\n      const index = updatedSkip.findIndex(skippedIndex => skippedIndex === active);\n      updatedSkip.splice(index, 1);\n      setSkip(updatedSkip);\n    }\n    const updatedActive = active > completed ? active + 1 : completed + 1;\n    if (active > completed) setCompleted(active);\n    setActive(updatedActive);\n  };\n\n  const onSkipHandler = () => {\n    const updatedActive = active > completed ? active + 1 : completed + 1;\n    setActive(updatedActive);\n    if (!skipIndexes.includes(active)) {\n      setSkip([...skipIndexes, active, updatedActive]);\n    }\n  };\n\n  return (\n    <div\n      className=\"d-flex flex-column justify-content-between align-items-end py-4 px-4 bg-secondary-lightest\"\n      style={{ height: '200px' }}\n    >\n      <div className=\"d-flex justify-content-center py-5 w-100\">\n        <Stepper\n          steps={steps}\n          active={active}\n          completed={completed}\n          onChange={onChange}\n          skipIndexes={skipIndexes}\n        />\n      </div>\n      <br />\n      <div className=\"w-25 d-flex justify-content-end\">\n        <Button onClick={onSkipHandler} disabled={requiredSteps.includes(active)} className=\"mr-4\">Skip</Button>\n        <Button onClick={onClickHandler} appearance=\"primary\">Next</Button>\n      </div>\n    </div>\n  );\n}\n    "
    ]
  },
  "Stepper Standalone Stepper": {
    "prefix": "Stepper Standalone Stepper",
    "description": "Standalone Stepper",
    "body": [
      "import { Stepper } from '@innovaccer/design-system';\n    () => {\n  const [active, setActive] = React.useState(0);\n\n  const steps = [\n    {\n      label: 'Enter email',\n      value: 'enter_email'\n    },\n    {\n      label: 'Verify email',\n      value: 'verify_email'\n    },\n    {\n      label: 'Create profile',\n      value: 'create_profile'\n    },\n    {\n      label: 'Setup organization',\n      value: 'setup_organization'\n    },\n    {\n      label: 'Invite team',\n      value: 'invite_team'\n    }\n  ];\n\n  const onChange = (index) => {\n    setActive(index);\n  };\n\n  return (\n    <Stepper\n      steps={steps}\n      active={active}\n      completed={-1}\n      onChange={onChange}\n    />\n  );\n}\n    "
    ]
  },
  "Stepper Stepper In Page Header": {
    "prefix": "Stepper Stepper In Page Header",
    "description": "Stepper In Page Header",
    "body": [
      "import { Stepper, Text, Avatar, Dropdown, Button, Breadcrumbs, Badge, MetaList, PageHeader } from '@innovaccer/design-system';\n    () => {\n  const stepperData = [\n    {\n      value: 'step_1',\n      label: 'Recipients',\n    },\n    {\n      value: 'step_2',\n      label: 'Message'\n    },\n    {\n      value: 'step_3',\n      label: 'Schedule',\n    }\n  ];\n\n  const options = [\n    {\n      label: 'Option 1',\n      value: 'Option 1',\n    },\n    {\n      label: 'Option 2',\n      value: 'Option 2',\n    },\n    {\n      label: 'Option 3',\n      value: 'Option 3',\n    }\n  ];\n\n  const [active, setActive] = React.useState(0);\n  const [completed, setCompleted] = React.useState(-1);\n\n  const onChangeHandler = (activeStep) => {\n    setActive(activeStep);\n  };\n\n  const onClickHandler = () => {\n    if (active > completed) setCompleted(active);\n    active > completed ? setActive(active + 1) : setActive(completed + 1);\n  };\n\n  const stepper = <Stepper steps={stepperData} onChange={onChangeHandler} active={active} completed={completed} />;\n\n  const actions = (\n    <div className=\"d-flex justify-content-end align-items-center\">\n      <Text className=\"mr-4\">few minutes ago</Text>\n      <Avatar className=\"mr-4\" firstName=\"John\" lastName=\"Doe\" appearance=\"accent2\"/>\n      <div className=\"mr-4\">\n        <Dropdown\n          menu={true}\n          icon=\"more_horiz\"\n          options={options}\n        />\n      </div>\n      <Button className=\"mr-4\">Finish Later</Button>\n      <Button className=\"mr-4\" appearance=\"primary\" onClick={onClickHandler}>Next</Button>\n    </div>\n  );\n\n  const breadcrumbs = (\n    <Breadcrumbs\n      list={[{\n        label: 'Campaigns',\n        link: '/Campaigns'\n      }]}\n      onClick={link => console.log(`on-click: ${link}`)}\n    />\n  );\n\n  const badge = (\n    <Badge appearance=\"secondary\">Message</Badge>\n  );\n\n  const meta = (\n    <MetaList\n      list={[{ label: 'Alert'}, { label: 'Draft' }]}\n      seperator={true}\n    />\n  );\n\n  return (\n    <div className=\"p-6 bg-secondary-lightest\" style={{width:'1200px'}}>\n      <PageHeader\n        title=\"Annual Wellness Visit\"\n        separator={true}\n        navigationPosition=\"center\"\n        stepper={stepper}\n        actions={actions}\n        breadcrumbs={breadcrumbs}\n        badge={badge}\n        meta={meta}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "Stepper Stepper With Animation": {
    "prefix": "Stepper Stepper With Animation",
    "description": "Stepper With Animation",
    "body": [
      "import { Card, Heading, Text, Label, Dropdown, DateRangePicker, Row, Column, Icon, Checkbox, InputMask, Radio, Button, List, Stepper } from '@innovaccer/design-system';\n    () => {\n  const steps = [\n    {\n      label: 'Step 1',\n      value: 'Step1',\n    },\n    {\n      label: 'Step 2',\n      value: 'Step2',\n    },\n    {\n      label: 'Step 3',\n      value: 'Step3',\n    },\n  ];\n  const [active, setActive] = React.useState(0);\n  const [completed, setCompleted] = React.useState(-1);\n  const [activeCard, setActiveCard] = React.useState(0);\n  const [step, setStep] = React.useState(0);\n  const maxSteps = steps.length;\n  const [tab, setTab] = React.useState(1);\n  const [skipIndices, setSkipIndices] = React.useState([]);\n\n  const handleAnimationEnd = () => {\n    if (step === activeCard) {\n      setActiveCard(active);\n    }\n    setStep(active);\n  };\n\n  const getClasses = () => {\n    if (activeCard !== active && step !== active) {\n      if (tab === 1) {\n        return 'slideOut-left';\n      }\n      else {\n        return 'slideOut-right';\n      }\n    }\n    else {\n      if (tab === 1) {\n        return 'slideIn-left';\n      }\n      else {\n        return 'slideIn-right';\n      }\n    }\n  }\n\n  const step1 = () => {\n    const options = [];\n    for (let i = 1; i <= 10; i++) {\n      options.push({\n        label: `Option ${i}`,\n        value: `Option ${i}`,\n      });\n    }\n    return (\n      <div\n        className={`py-4 w-100 position-relative ${getClasses()}`}\n        onAnimationEnd={handleAnimationEnd}\n      >\n        <Card className=\"px-6 py-6\">\n          <Heading className=\"mb-6\" size=\"s\">\n            Configure Initiative\n          </Heading>\n          <Text weight=\"strong\">Population Filter</Text>\n          <div className=\"d-flex mt-5 mb-4\">\n            <div className=\"mr-6\" style={{ width: 'var(--spacing-8)' }}>\n              <Label withInput={true}>Region</Label>\n              <Dropdown options={options} />\n            </div>\n            <div style={{ width: 'var(--spacing-9)' }}>\n              <Label withInput={true}>Organization</Label>\n              <Dropdown options={options} />\n            </div>\n          </div>\n          <div className=\"pt-6\">\n            <Text weight=\"strong\">Time Period</Text>\n            <div className=\"mt-5\">\n              <DateRangePicker withInput />\n            </div>\n          </div>\n        </Card>\n      </div>\n    );\n  };\n\n  const step2 = () => {\n    const languages = [\n      {\n        label: 'Hindi',\n        value: 'Hindi',\n      },\n      {\n        label: 'English',\n        value: 'English',\n        selected: true,\n      },\n      {\n        label: 'French',\n        value: 'French',\n      },\n    ];\n    const method = [\n      {\n        label: 'Phone',\n        value: 'Phone',\n      },\n      {\n        label: 'Message',\n        value: 'Message',\n        selected: true,\n      },\n      {\n        label: 'Email',\n        value: 'Email',\n      },\n      {\n        label: 'Letter',\n        value: 'Letter',\n      },\n    ];\n\n    return (\n      <div\n        className={`py-4 w-100 position-relative ${getClasses()}`}\n        onAnimationEnd={handleAnimationEnd}\n      >\n        <Card className=\"px-6 py-6\">\n          <form>\n            <Row className=\"mb-6\">\n              <Column size={3} className=\"d-flex align-items-center\">\n                <Icon className=\"mr-4\" name=\"language\" />\n                <Text>Known Languages</Text>\n              </Column>\n              <Column size={8} className=\"d-flex align-items-center\">\n                <div className=\"mr-5 w-25 align-items-center\">\n                  <Dropdown options={languages} />\n                </div>\n                <Checkbox className=\"align-items-center\" name=\"defaultLanguage\" label=\"Set as Default\" />\n              </Column>\n            </Row>\n            <Row className=\"my-5\">\n              <Column className=\"d-flex align-items-center\" size={3}>\n                <Icon className=\"mr-4\" name=\"record_voice_over\" />\n                <Text>Preferred Method of Contact</Text>\n              </Column>\n              <Column size={8} className=\"d-flex align-items-center\">\n                <Dropdown options={method} />\n              </Column>\n            </Row>\n            <Row className=\"mt-6\">\n              <Column size={3} className=\"d-flex align-items-center\">\n                <Icon className=\"mr-4\" name=\"call\" />\n                <Text>Phone Numbers</Text>\n              </Column>\n              <Column size={8} className=\"d-flex align-items-center\">\n                <InputMask\n                  mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n                  placeholder=\"(___) ___-____\"\n                  className=\"mr-4\"\n                  name=\"primaryPhoneNumber\"\n                />\n                <Radio name=\"defaultPhoneNumber\" value=\"defaultPrimaryPhoneNumber\" label=\"Mark as Preferred\" />\n              </Column>\n            </Row>\n            <Row className=\"my-5\">\n              <Column size={3} className=\"d-flex align-items-center\" />\n              <Column size={8} className=\"d-flex\">\n                <InputMask\n                  mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n                  placeholder=\"(___) ___-____\"\n                  className=\"mr-4\"\n                  name=\"secondaryPhoneNumber\"\n                />\n                <Radio name=\"defaultPhoneNumber\" value=\"defaultSecondaryPhoneNumber\" label=\"Mark as Preferred\" />\n              </Column>\n            </Row>\n          </form>\n        </Card>\n      </div>\n    );\n  };\n\n  const step3 = () => {\n    const data = [\n      {\n        firstName: 'John',\n        lastName: 'Doe',\n        email: 'jonathandoe@gamil.com',\n        owner: true,\n      },\n      {\n        firstName: 'Katty',\n        lastName: 'Perry',\n        email: 'kattyperry21@gamil.com',\n        edit: true,\n      },\n      {\n        firstName: 'Daniel',\n        lastName: 'Low',\n        email: 'daniellow02@yahoo.com',\n        view: true,\n      },\n    ];\n\n    const schema = [\n      {\n        name: 'info',\n        displayName: 'Info',\n        width: '80%',\n        cellType: 'AVATAR_WITH_META_LIST',\n        translate: (a) => ({\n          firstName: a.firstName,\n          lastName: a.lastName,\n          title: `${a.firstName} ${a.lastName}`,\n          metaList: [a.email],\n        }),\n      },\n      {\n        name: 'rights',\n        displayName: 'Rights',\n        width: '20%',\n        cellRenderer: (props) => {\n          const renderRights = () => {\n            if (props.data.owner) {\n              return (\n                <Text appearance=\"subtle\" className=\"pr-5\">\n                  owner\n                </Text>\n              );\n            }\n\n            if (props.data.edit || props.data.view) {\n              const rights = props.data.edit ? 'edit' : 'view';\n              return (\n                <Button\n                  icon=\"keyboard_arrow_down\"\n                  iconAlign=\"right\"\n                  appearance=\"transparent\"\n                  onClick={(e) => e.stopPropagation()}\n                >\n                  {`can ${rights}`}\n                </Button>\n              );\n            }\n\n            return null;\n          };\n\n          return <div className=\"d-flex align-items-center justify-content-end flex-grow-1\">{renderRights()}</div>;\n        },\n      },\n    ];\n\n    return (\n      <div\n        className={`py-4 w-100 position-relative ${getClasses()}`}\n        onAnimationEnd={handleAnimationEnd}\n      >\n        <Card className={`py-4`}>\n          <Text size=\"large\" weight=\"strong\" className=\"ml-5\">\n            Sharing Test Manual\n          </Text>\n          <List\n            type=\"resource\"\n            withHeader={true}\n            headerOptions={{\n              withSearch: true,\n              dynamicColumn: false,\n            }}\n            separator={false}\n            showMenu={false}\n            data={data}\n            schema={schema}\n            withPagination={false}\n            onSearch={(currData, searchTerm) => {\n              return currData.filter(\n                (d) =>\n                  d.firstName.toLowerCase().match(searchTerm.toLowerCase()) ||\n                  d.lastName.toLowerCase().match(searchTerm.toLowerCase())\n              );\n            }}\n          />\n        </Card>\n      </div>\n    );\n  };\n\n  const onChange = (activeStep) => {\n    setActiveCard(activeStep);\n  };\n\n  const onNextHandler = () => {\n    setTab(1);\n    if (skipIndices.includes(active)) {\n      const updatedSkip = [...skipIndices];\n      const index = skipIndices.findIndex((skippedIndex) => skippedIndex === active);\n      updatedSkip.splice(index, 1);\n      setSkipIndices([...updatedSkip]);\n    }\n    setCompleted(active);\n    setActive(active + 1);\n  };\n\n  const onSkipHandler = () => {\n    setTab(1);\n    if (!skipIndices.includes(active)) {\n      setSkipIndices([...skipIndices, active]);\n    }\n    setActive(active + 1);\n  };\n\n  const onPreviousHandler = () => {\n    setTab(0);\n    if (skipIndices.includes(active)) {\n      const updatedSkip = [...skipIndices];\n      const index = skipIndices.findIndex((skippedIndex) => skippedIndex === active);\n      updatedSkip.splice(index, 1);\n      setSkipIndices([...updatedSkip]);\n    }\n    setCompleted(active - 1);\n    setActive(active - 1);\n  };\n\n  const resetStepper = () => {\n    setTab(1);\n    setActive(0);\n    setActiveCard(0);\n    setCompleted(-1);\n    setStep(0);\n    setSkipIndices([]);\n  };\n\n  const renderStep = () => {\n    switch (step) {\n      case 0:\n        return step1();\n      case 1:\n        return step2();\n      case 2:\n        return step3();\n    }\n  };\n\n  return (\n    <div className=\"d-flex flex-column py-4 px-6 bg-secondary-lightest\">\n      <div className=\"d-flex justify-content-center py-5 w-100\">\n        <Stepper steps={steps} active={active} completed={completed} onChange={onChange} skipIndexes={skipIndices} />\n      </div>\n      {renderStep()}\n      <div className=\"w-100 d-flex justify-content-between Stepper-button\">\n        {active === maxSteps ? (\n          <div className=\"w-100 d-flex justify-content-center\">\n            <Button onClick={resetStepper}>Reset</Button>\n          </div>\n        ) : (\n          <div className=\"my-4 w-100 d-flex justify-content-between\">\n            <Button onClick={onPreviousHandler} disabled={active === 0}>\n              Previous\n            </Button>\n            <div className=\"d-flex flex-row\">\n              <Button className=\"mr-4\" onClick={onSkipHandler}>\n                {active < maxSteps - 1 ? 'Skip' : 'Skip and Finish'}\n              </Button>\n              <Button onClick={onNextHandler} appearance=\"primary\">\n                {active < maxSteps - 1 ? 'Next' : 'Finish'}\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n    "
    ]
  },
  "Stepper   Active Step": {
    "prefix": "Stepper   Active Step",
    "description": "Active Step",
    "body": [
      "import { Stepper } from '@innovaccer/design-system';\n    () => {\n  const [active, setActive] = React.useState(0);\n\n  const steps = [\n    {\n      label: 'Step',\n      value: 'Step1'\n    },\n    {\n      label: 'Step',\n      value: 'Step2'\n    },\n    {\n      label: 'Step',\n      value: 'Step3'\n    },\n    {\n      label: 'Step',\n      value: 'Step4'\n    }\n  ];\n\n  const onChange = (index) => {\n    setActive(index);\n  };\n\n  return (\n    <Stepper\n      steps={steps}\n      active={active}\n      onChange={onChange}\n    />\n  );\n}\n    "
    ]
  },
  "Stepper   Completed Step": {
    "prefix": "Stepper   Completed Step",
    "description": "Completed Step",
    "body": [
      "import { Stepper } from '@innovaccer/design-system';\n    () => {\n  const [active, setActive] = React.useState(3);\n\n  const steps = [\n    {\n      label: 'Step',\n      value: 'Step1'\n    },\n    {\n      label: 'Step',\n      value: 'Step2'\n    },\n    {\n      label: 'Step',\n      value: 'Step3'\n    },\n    {\n      label: 'Step',\n      value: 'Step4'\n    }\n  ];\n\n  const onChange = (index) => {\n    setActive(index);\n  };\n\n  return (\n    <Stepper\n      steps={steps}\n      active={active}\n      completed={2}\n      onChange={onChange}\n    />\n  );\n}\n    "
    ]
  },
  "Stepper   Stepper With Skip": {
    "prefix": "Stepper   Stepper With Skip",
    "description": "Stepper With Skip",
    "body": [
      "import { Stepper, Button } from '@innovaccer/design-system';\n    () => {\n  const steps = [\n    {\n      label: 'Step',\n      value: 'Step1'\n    },\n    {\n      label: 'Step',\n      value: 'Step2'\n    },\n    {\n      label: 'Step',\n      value: 'Step3'\n    },\n    {\n      label: 'Step',\n      value: 'Step4'\n    }\n  ];\n\n  const [active, setActive] = React.useState(0);\n  const [completed, setCompleted] = React.useState(active - 1);\n  const [skipIndexes, setSkipIndexes] = React.useState([]);\n  const requiredSteps = [0];\n\n  const onChange = (activeStep) => {\n    setActive(activeStep);\n  };\n\n  const onClickHandler = () => {\n    if (skipIndexes.includes(active)) {\n      const updatedSkip = [...skipIndexes];\n      const index = updatedSkip.findIndex(skippedIndex => skippedIndex === active);\n      updatedSkip.splice(index, 1);\n      setSkipIndexes(updatedSkip);\n    }\n    const updatedActive = active > completed ? active + 1 : completed + 1;\n    if (active > completed) setCompleted(active);\n    setActive(updatedActive);\n  };\n\n  const onSkipHandler = () => {\n    const updatedActive = active > completed ? active + 1 : completed + 1;\n    setActive(updatedActive);\n    if (!skipIndexes.includes(active)) {\n      setSkipIndexes([...skipIndexes, active]);\n    }\n  };\n\n  return (\n    <div\n      className=\"d-flex flex-column justify-content-between align-items-end py-4 px-4 bg-secondary-lightest\"\n      style={{ height: '200px' }}\n    >\n      <div className=\"d-flex justify-content-center py-5 bg-light w-100\">\n        <Stepper\n          steps={steps}\n          active={active}\n          completed={completed}\n          onChange={onChange}\n          skipIndexes={skipIndexes}\n        />\n      </div>\n      <br />\n      <div className=\"w-25 d-flex justify-content-end\">\n        <Button onClick={onSkipHandler} disabled={requiredSteps.includes(active)} className=\"mr-4\">Skip</Button>\n        <Button onClick={onClickHandler} appearance=\"primary\">Next</Button>\n      </div>\n    </div>\n  );\n}\n    "
    ]
  },
  "Stepper variants Stepper With Trigger": {
    "prefix": "Stepper variants Stepper With Trigger",
    "description": "Stepper With Trigger",
    "body": [
      "import { Stepper, Button } from '@innovaccer/design-system';\n    () => {\n  const steps = [\n    {\n      label: 'Step',\n      value: 'Step1'\n    },\n    {\n      label: 'Step',\n      value: 'Step2'\n    },\n    {\n      label: 'Step',\n      value: 'Step3'\n    },\n    {\n      label: 'Step',\n      value: 'Step4'\n    }\n  ];\n  const [active, setActive] = React.useState(0);\n  const [completed, setCompleted] = React.useState(active - 1);\n  const onChange = (index) => {\n    setActive(index);\n  };\n  const onClickHandler = () => {\n    if (active > completed) setCompleted(active);\n    active > completed ? setActive(active + 1) : setActive(completed + 1);\n  };\n  return (\n    <div\n      className=\"d-flex flex-column justify-content-between align-items-end py-4 px-4\"\n      style={{ height: '200px', background: 'var(--secondary-lightest)' }}\n    >\n      <div className=\"d-flex justify-content-center py-5 bg-light w-100\">\n        <Stepper\n          steps={steps}\n          active={active}\n          completed={completed}\n          onChange={onChange}\n        />\n      </div>\n      <br />\n      <div className=\"w-25 d-flex justify-content-end\">\n        <Button onClick={onClickHandler} appearance=\"primary\">Next</Button>\n      </div>\n    </div>\n  );\n}\n    "
    ]
  },
  "Subheading": {
    "prefix": "Subheading",
    "description": "Appearance",
    "body": [
      "import { Subheading, Text } from '@innovaccer/design-system';\n    () => {\n  const appearances = ['default', 'subtle', 'disabled', 'white'];\n\n  return (\n    <div className=\"d-flex\">\n      {appearances.map((appear, ind) => {\n        return (\n          <div key={ind} className=\"mr-6\">\n            <div className={appear === 'white' ? 'bg-dark' : 'bg-transparent'}>\n              <Subheading appearance={appear}>Subheading</Subheading>\n            </div>\n            <br />\n            <Text weight=\"strong\">{appear.charAt(0).toUpperCase() + appear.slice(1)}</Text>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n    "
    ]
  },
  "Switch All": {
    "prefix": "Switch All",
    "description": "All",
    "body": [
      "import { Label, Switch } from '@innovaccer/design-system';\n    () => {\n  const size = 'tiny';\n\n  const [checked, setChecked] = React.useState(false);\n\n  const disabled = false;\n\n  const onChangeHandler = (_event, checkedValue) => {\n    setChecked(!checked);\n    return action(`switch-change: ${checkedValue}`)();\n  };\n\n  return (\n    <form>\n      <Label htmlFor=\"vaccination-status\">Have you been vaccinated ?</Label>\n      <div>\n        <Switch id=\"vaccination-status\" disabled={disabled} checked={checked} size={size} onChange={onChangeHandler} />\n      </div>\n    </form>\n  );\n}\n    "
    ]
  },
  "Switch": {
    "prefix": "Switch",
    "description": "State",
    "body": [
      "import { Switch, Text } from '@innovaccer/design-system';\n    () => {\n  return (\n    <div className=\"d-flex\">\n      <div className=\"mr-9\">\n        <Switch aria-label=\"Switch enabled\" defaultChecked={true} disabled={false} />\n        <br />\n        <Text weight=\"strong\">Enabled</Text>\n      </div>\n      <div>\n        <Switch aria-label=\"Switch disabled\" disabled={true} defaultChecked={true} />\n        <br />\n        <Text weight=\"strong\">Disabled</Text>\n      </div>\n    </div>\n  );\n}\n    "
    ]
  },
  "Table All": {
    "prefix": "Table All",
    "description": "All",
    "body": [
      "import { Card, Table } from '@innovaccer/design-system';\n    () => {\n  const async = false;\n\n  let loading;\n  let error;\n  let applyData;\n  let applySchema;\n  const applyLoaderSchema = true;\n\n  if (!async) {\n    loading = false;\n\n    error = false;\n\n    applySchema = true;\n\n    applyData = true;\n  }\n\n  const type = 'resource';\n\n  const size = 'comfortable';\n\n  const draggable = true;\n\n  const nestedRows = false;\n\n  const withHeader = true;\n\n  const withCheckbox = false;\n\n  const showMenu = true;\n\n  const withPagination = false;\n\n  const page = 1;\n\n  const paginationType = 'jump';\n\n  const pageSize = 12;\n\n  const multipleSorting = false;\n\n  const headCellTooltip = false;\n\n  const separator = false;\n\n  const filterPosition = 'HEADER';\n\n  let dataAttr = {};\n  if (async) {\n    dataAttr = {\n      fetchData,\n    };\n  } else {\n    dataAttr = {\n      loading,\n      error,\n      schema: applySchema ? schema : [],\n      data: applyData ? data : [],\n    };\n  }\n\n  return (\n    <div\n      style={{\n        height: '350px',\n      }}\n    >\n      <Card className=\"h-100 overflow-hidden\">\n        <Table\n          key={`${async}`}\n          {...dataAttr}\n          loading={loading}\n          error={error}\n          errorTemplate={errorTemplate}\n          withHeader={withHeader}\n          headerOptions={{\n            withSearch: true,\n          }}\n          withCheckbox={withCheckbox}\n          showMenu={showMenu}\n          type={type}\n          size={size}\n          headCellTooltip={headCellTooltip}\n          separator={separator}\n          draggable={draggable}\n          nestedRows={nestedRows}\n          nestedRowRenderer={nestedRowRenderer}\n          withPagination={withPagination}\n          page={page}\n          paginationType={paginationType}\n          pageSize={pageSize}\n          loaderSchema={applyLoaderSchema ? loaderSchema : undefined}\n          onRowClick={(rowData, rowIndex) =>\n            action(`on-row-click:- rowIndex: ${rowIndex} data: ${JSON.stringify(rowData)}`)()\n          }\n          onSelect={(rowIndex, selected, selectedList, selectAll) =>\n            action(\n              `on-select:- rowIndex: ${rowIndex} selected: ${selected} selectedList: ${JSON.stringify(\n                selectedList\n              )} selectAll: ${selectAll}`\n            )()\n          }\n          onPageChange={(newPage) => action(`on-page-change:- ${newPage}`)()}\n          onSearch={(currData, searchTerm) => {\n            action(`on-search:- currData: ${JSON.stringify(currData)}, searchTerm: ${searchTerm}`)();\n            return currData;\n          }}\n          multipleSorting={multipleSorting}\n          sortingList={[{ name: 'name', type: 'desc' }]}\n          filterList={{\n            name: ['h-r', 's-z'],\n          }}\n          filterPosition={filterPosition}\n        />\n      </Card>\n    </div>\n  );\n}\n    "
    ]
  },
  "Table Async Table": {
    "prefix": "Table Async Table",
    "description": "Async Table",
    "body": [
      "import { Icon, GridCell, Card, Table } from '@innovaccer/design-system';\n    \n() => {\n  const translateData = (schema, data) => {\n    let newData = data;\n\n    if (schema.translate) {\n      const translatedData = schema.translate(data);\n      newData = {\n        ...newData,\n        [schema.name]: typeof translatedData === 'object' ? {\n          ...newData[schema.name],\n          ...translatedData\n        } : translatedData\n      };\n    }\n    if (typeof newData[schema.name] !== 'object') newData[schema.name] = { title: newData[schema.name] };\n\n    return newData;\n  }\n\n  const filterData = (schema, data, filterList) => {\n    let filteredData = data;\n    if (filterList) {\n      Object.keys(filterList).forEach(schemaName => {\n        const filters = filterList[schemaName];\n        const sIndex = schema.findIndex(s => s.name === schemaName);\n        const { onFilterChange } = schema[sIndex];\n        if (filters.length && onFilterChange) {\n          filteredData = filteredData.filter(d => onFilterChange(d, filters));\n        }\n      });\n    }\n\n    return filteredData;\n  };\n\n  const sortData = (schema, data, sortingList) => {\n    const sortedData = [...data];\n    sortingList.forEach(l => {\n      const sIndex = schema.findIndex(s => s.name === l.name);\n      if (sIndex !== -1) {\n        const defaultComparator = (a, b) => {\n          const aData = translateData(schema[sIndex], a);\n          const bData = translateData(schema[sIndex], b);\n          return aData[l.name].title.localeCompare(bData[l.name].title);\n        };\n\n        const {\n          comparator = defaultComparator\n        } = schema[sIndex];\n\n        sortedData.sort(comparator);\n        if (l.type === 'desc') sortedData.reverse();\n      }\n    });\n\n    return sortedData;\n  };\n\n  const paginateData = (data, page, pageSize) => {\n    const start = (page - 1) * pageSize;\n    const end = start + pageSize;\n    const paginatedData = data.slice(start, end);\n    return paginatedData;\n  };\n\n  const data = [\n    {\n        \"firstName\": \"Brooke\",\n        \"lastName\": \"Heeran\",\n        \"email\": \"bheeran0@altervista.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Frazer\",\n        \"lastName\": \"Cathro\",\n        \"email\": \"fcathro1@ucla.edu\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lemmie\",\n        \"lastName\": \"Ciric\",\n        \"email\": {\n            \"title\": \"lciric2@dmoz.org\",\n            \"metaList\": [\n                \"First\",\n                \"Second\"\n            ]\n        },\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Randy\",\n        \"lastName\": \"Boatwright\",\n        \"email\": \"rboatwright3@arstechnica.com\",\n        \"status\": \"Completed\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rolando\",\n        \"lastName\": \"Cyples\",\n        \"email\": \"rcyples4@biglobe.ne.jp\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lem\",\n        \"lastName\": \"Males\",\n        \"email\": \"lmales5@admin.ch\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Sayres\",\n        \"lastName\": \"Adelberg\",\n        \"email\": \"sadelberg6@uol.com.br\",\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Murray\",\n        \"lastName\": \"Bravington\",\n        \"email\": \"mbravington7@drupal.org\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Jena\",\n        \"lastName\": \"Swatheridge\",\n        \"email\": \"jswatheridge8@npr.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Annabel\",\n        \"lastName\": \"Nelsey\",\n        \"email\": \"anelsey9@google.com\",\n        \"gender\": \"Female\",\n        \"status\": \"Completed\"\n    }\n];\n\n  const schema = [\n    {\n      name: 'name',\n      displayName: 'Name',\n      width: 300,\n      resizable: true,\n      separator: true,\n      tooltip: true,\n      translate: a => ({\n        title: `${a.firstName} ${a.lastName}`,\n        firstName: a.firstName,\n        lastName: a.lastName\n      }),\n      filters: [\n        { label: 'A-G', value: 'a-g' },\n        { label: 'H-R', value: 'h-r' },\n        { label: 'S-Z', value: 's-z' },\n      ],\n      onFilterChange: (a, filters) => {\n        for (const filter of filters) {\n          switch (filter) {\n            case 'a-g':\n              if (a.firstName[0].toLowerCase() >= 'a' && a.firstName[0].toLowerCase() <= 'g') return true;\n              break;\n            case 'h-r':\n              if (a.firstName[0].toLowerCase() >= 'h' && a.firstName[0].toLowerCase() <= 'r') return true;\n              break;\n            case 's-z':\n              if (a.firstName[0].toLowerCase() >= 's' && a.firstName[0].toLowerCase() <= 'z') return true;\n              break;\n          }\n        }\n        return false;\n      },\n      cellType: 'AVATAR_WITH_TEXT',\n    },\n    {\n      name: 'email',\n      displayName: 'Email',\n      width: 350,\n      resizable: true,\n      sorting: false,\n      cellType: 'WITH_META_LIST'\n    },\n    {\n      name: 'gender',\n      displayName: 'Gender',\n      width: 200,\n      resizable: true,\n      comparator: (a, b) => a.gender.localeCompare(b.gender),\n      cellType: 'STATUS_HINT',\n      translate: a => ({\n        title: a.gender,\n        statusAppearance: (a.gender === 'Female') ? 'alert' : 'success'\n      }),\n      filters: [\n        { label: 'Male', value: 'male' },\n        { label: 'Female', value: 'female' },\n      ],\n      onFilterChange: (a, filters) => {\n        for (const filter of filters) {\n          if (a.gender.toLowerCase() === filter) return true;\n        }\n        return false;\n      },\n    },\n    {\n      name: 'icon',\n      displayName: 'Icon',\n      width: 100,\n      resizable: true,\n      align: 'center',\n      cellType: 'ICON',\n      sorting: false,\n      translate: _ => ({\n        icon: 'events'\n      })\n    },\n    {\n      name: 'customCell',\n      displayName: 'Custom Cell',\n      width: 200,\n      resizable: true,\n      cellType: 'WITH_META_LIST',\n      sorting: false,\n      cellRenderer: props => {\n        return (\n          <>\n            <Icon className=\"mr-5\" name=\"events\" />\n            <GridCell\n              {...props}\n              schema={{\n                ...props.schema,\n                name: 'email'\n              }}\n            />\n          </>\n        );\n      }\n    },\n  ];\n\n  const fetchData = (options) => {\n    const {\n      page,\n      pageSize,\n      sortingList,\n      filterList,\n      searchTerm\n    } = options;\n\n    const onSearch = (d, searchTerm = '') => {\n      return (\n        d.firstName.toLowerCase().match(searchTerm.toLowerCase())\n        || d.lastName.toLowerCase().match(searchTerm.toLowerCase())\n      );\n\n      return true;\n    }\n\n    const filteredData = filterData(schema, data, filterList);\n    const searchedData = filteredData.filter(d => onSearch(d, searchTerm));\n    const sortedData = sortData(schema, searchedData, sortingList);\n\n    if (page && pageSize) {\n      return new Promise(resolve => {\n        window.setTimeout(() => {\n          const start = (page - 1) * pageSize;\n          const end = start + pageSize;\n          const slicedData = sortedData.slice(start, end);\n          resolve({\n            searchTerm,\n            schema,\n            count: sortedData.length,\n            data: slicedData,\n          });\n        }, 2000);\n      });\n    }\n\n    return new Promise(resolve => {\n      window.setTimeout(() => {\n        resolve({\n          searchTerm,\n          schema,\n          count: sortedData.length,\n          data: sortedData,\n        });\n      }, 2000);\n    });\n  }\n\n  const loaderSchema = [\n    {\n        \"name\": \"name\",\n        \"displayName\": \"Name\",\n        \"width\": \"40%\",\n        \"resizable\": true,\n        \"tooltip\": true,\n        \"separator\": true,\n        \"filters\": [\n            {\n                \"label\": \"A-G\",\n                \"value\": \"a-g\"\n            },\n            {\n                \"label\": \"H-R\",\n                \"value\": \"h-r\"\n            },\n            {\n                \"label\": \"S-Z\",\n                \"value\": \"s-z\"\n            }\n        ],\n        \"cellType\": \"AVATAR_WITH_TEXT\"\n    },\n    {\n        \"name\": \"email\",\n        \"displayName\": \"Email\",\n        \"width\": 250,\n        \"resizable\": true,\n        \"sorting\": false,\n        \"cellType\": \"WITH_META_LIST\"\n    },\n    {\n        \"name\": \"gender\",\n        \"displayName\": \"Gender\",\n        \"width\": 180,\n        \"resizable\": true,\n        \"cellType\": \"STATUS_HINT\",\n        \"filters\": [\n            {\n                \"label\": \"Male\",\n                \"value\": \"male\"\n            },\n            {\n                \"label\": \"Female\",\n                \"value\": \"female\"\n            }\n        ]\n    },\n    {\n        \"name\": \"icon\",\n        \"displayName\": \"Icon\",\n        \"width\": 100,\n        \"resizable\": true,\n        \"align\": \"center\",\n        \"cellType\": \"ICON\"\n    },\n    {\n        \"name\": \"customCell\",\n        \"displayName\": \"Custom Cell\",\n        \"width\": 200,\n        \"resizable\": true,\n        \"cellType\": \"WITH_META_LIST\"\n    }\n];\n\n  return (\n    <div\n      style={{\n        height: '450px',\n      }}\n    >\n      <Card className=\"h-100 overflow-hidden\">\n        <Table\n          loaderSchema={loaderSchema}\n          fetchData={fetchData}\n          withHeader={true}\n          headerOptions={{\n            withSearch: true\n          }}\n          withCheckbox={true}\n          onSelect={(rowIndex, selected, selectedList, selectAll) => console.log(`on-select: - rowIndex: ${ rowIndex } selected: ${ selected } selectedList: ${ JSON.stringify(selectedList) } selectAll: ${ selectAll } `)}\n          withPagination={true}\n          pageSize={5}\n          onPageChange={newPage => console.log(`on-page-change:- ${newPage}`)}\n        />\n      </Card>\n    </div>\n  );\n};\n\n    "
    ]
  },
  "Compressed Table": {
    "prefix": "Compressed Table",
    "description": "Compressed Table",
    "body": [
      "import { Card, Table } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      name: 'MSSP Track 1 Urban',\n      status: \"Active\",\n      measures: \"9\",\n      current_period: \"March 2017 - Feb 2018\",\n      added_in: \"March 2014\",\n    },\n    {\n      name: 'MSSP Track 1 Rural',\n      status: \"Active\",\n      measures: \"9\",\n      current_period: \"March 2017 - Feb 201\",\n      added_in: \"March 2015\",\n    },\n    {\n      name: 'MSSP Track 2',\n      status: \"Inactive\",\n      measures: \"14\",\n      current_period: \"March 2017 - Feb 201\",\n      added_in: \"March 2016\",\n    },\n    {\n      name: 'Aetna',\n      status: \"Active\",\n      measures: \"20\",\n      current_period: \"March 2017 - Feb 201\",\n      added_in: \"March 2019\",\n    },\n    {\n      name: 'BCBS',\n      status: \"Active\",\n      measures: \"16\",\n      current_period: \"March 2017 - Feb 201\",\n      added_in: \"March 2017\",\n    },\n  ];\n\n  const schema = [\n    {\n      name: 'name',\n      displayName: 'Name',\n      width: '20%',\n      sorting: false\n    },\n    {\n      name: 'status',\n      displayName: 'Status',\n      width: '20%',\n      translate: a => ({\n        title: a.status,\n        statusAppearance: (a.status === 'Inactive') ? 'default' : 'success'\n      }),\n      cellType: \"STATUS_HINT\",\n      sorting: false\n    },\n    {\n      name: 'measures',\n      displayName: 'No. of Measures',\n      width: '20%',\n      sorting: false\n    },\n    {\n      name: 'current_period',\n      displayName: 'Current Period',\n      width: '20%',\n      sorting: false\n    },\n    {\n      name: 'added_in',\n      displayName: 'Added in',\n      width: '20%',\n      sorting: false\n    },\n  ];\n\n  return (\n      <Card>\n        <Table\n          showMenu={false}\n          size=\"compressed\"\n          separator={false}\n          data={data}\n          schema={schema}\n          withHeader={true}\n          headerOptions={{\n            withSearch: true\n          }}\n          onSearch={(currData, searchTerm) => {\n            return currData.filter(d =>\n              d.name.toLowerCase().match(searchTerm.toLowerCase())\n            );\n          }}\n          withPagination={false}\n        />\n      </Card>\n  );\n}\n    "
    ]
  },
  "Data table": {
    "prefix": "Data table",
    "description": "Data Table",
    "body": [
      "import { Card, Table } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      claim_id: 'Q10000101',\n      claim_type: 'Professional',\n      plan_name: \"MSSP Track 3\",\n      insurance_name: \"Medicare\",\n      first_dos: \"03/27/2020\",\n      last_dos: \"03/30/2020\",\n      firstName: 'Brooke',\n      lastName: 'Heeran',\n    },\n    {\n      claim_id: 'Q10000102',\n      claim_type: \"Professional\",\n      plan_name: \"MSSP Track 1\",\n      insurance_name: \"Medicare\",\n      first_dos: \"03/24/2020\",\n      last_dos: \"04/30/2020\",\n      firstName: 'Frazer',\n      lastName: 'Cathro',\n    },\n    {\n      claim_id: 'Q10000103',\n      claim_type: \"Professional\",\n      plan_name: \"MSSP Track 3\",\n      insurance_name: \"Medicare\",\n      first_dos: \"05/16/2020\",\n      last_dos: \"05/30/2020\",\n      firstName: 'Lemmie',\n      lastName: 'Ciric',\n    },\n    {\n      claim_id: 'Q10000104',\n      claim_type: \"Institutional\",\n      plan_name: \"MSSP Track 3\",\n      insurance_name: \"Medicare\",\n      first_dos: \"12/27/2020\",\n      last_dos: \"12/30/2020\",\n      firstName: 'Randy',\n      lastName: 'Boatwright',\n    },\n    {\n      claim_id: 'Q10000105',\n      claim_type: \"Professional\",\n      plan_name: \"MSSP Track 3\",\n      insurance_name: \"Medicare\",\n      first_dos: \"05/04/2020\",\n      last_dos: \"05/28/2020\",\n      firstName: 'Rolando',\n      lastName: 'Cyples',\n    },\n    {\n      claim_id: 'Q10000106',\n      claim_type: \"Institutional\",\n      plan_name: \"MSSP Track 3\",\n      insurance_name: \"Medicare\",\n      first_dos: \"01/27/2020\",\n      last_dos: \"03/30/2020\",\n      firstName: 'Lem',\n      lastName: 'Males',\n    },\n    {\n      claim_id: 'Q10000107',\n      claim_type: \"Professional\",\n      plan_name: \"MSSP Track 3\",\n      insurance_name: \"Medicare\",\n      first_dos: \"03/30/2020\",\n      last_dos: \"04/30/2020\",\n      firstName: 'Sayres',\n      lastName: 'Adelberg',\n    },\n    {\n      claim_id: 'Q10000108',\n      claim_type: \"Professional\",\n      plan_name: \"MSSP Track 3\",\n      insurance_name: \"Medicare\",\n      first_dos: \"02/27/2020\",\n      last_dos: \"03/30/2020\",\n      firstName: 'Murray',\n      lastName: 'Bravington',\n    },\n    {\n      claim_id: 'Q10000109',\n      claim_type: \"Institutional\",\n      plan_name: \"MSSP Track 5\",\n      insurance_name: \"Medicare\",\n      first_dos: \"03/17/2020\",\n      last_dos: \"03/30/2020\",\n      firstName: 'Carin',\n      lastName: 'Robiou',\n    },\n    {\n      claim_id: 'Q100001010',\n      claim_type: \"Institutional\",\n      plan_name: \"MSSP Track 6\",\n      insurance_name: \"Medicare\",\n      first_dos: \"09/27/2020\",\n      last_dos: \"12/27/2020\",\n      firstName: 'Brina',\n      lastName: 'Pirie',\n    }\n  ];\n\n  const schema = [\n    {\n      name: 'claim_id',\n      displayName: 'Claim Id',\n      width: '12%',\n      separator: true,\n    },\n    {\n      name: 'claim_type',\n      displayName: 'Claim Type',\n      width: '15%',\n      separator: true,\n      cellType: \"DEFAULT\"\n    },\n    {\n      name: 'insurance_name',\n      displayName: 'Insurance Name',\n      width: '15%',\n      separator: true,\n    },\n    {\n      name: 'plan_name',\n      displayName: 'Plan Name',\n      width: '15%',\n      separator: true,\n    },\n    {\n      name: 'first_dos',\n      displayName: 'First Date of Service',\n      width: '18%',\n      separator: true,\n    },\n    {\n      name: 'last_dos',\n      displayName: 'Last Date of Service',\n      width: '18%',\n      separator: true,\n    },\n    {\n      name: 'provider_name',\n      displayName: 'Provider Name',\n      separator: true,\n      filters: [\n        { label: 'A-G', value: 'a-g' },\n        { label: 'H-R', value: 'h-r' },\n        { label: 'S-Z', value: 's-z' },\n      ],\n      onFilterChange: (a, filters) => {\n        for (const filter of filters) {\n          switch (filter) {\n            case 'a-g':\n              if (a.firstName[0].toLowerCase() >= 'a' && a.firstName[0].toLowerCase() <= 'g') return true;\n              break;\n            case 'h-r':\n              if (a.firstName[0].toLowerCase() >= 'h' && a.firstName[0].toLowerCase() <= 'r') return true;\n              break;\n            case 's-z':\n              if (a.firstName[0].toLowerCase() >= 's' && a.firstName[0].toLowerCase() <= 'z') return true;\n              break;\n          }\n        }\n        return false;\n      },\n      translate: (a) => ({\n        title: `${a.firstName} ${a.lastName}`,\n        firstName: a.firstName,\n        lastName: a.lastName\n      }),\n    },\n  ];\n\n  const loaderSchema = [\n    {\n        \"name\": \"name\",\n        \"displayName\": \"Name\",\n        \"width\": \"40%\",\n        \"resizable\": true,\n        \"tooltip\": true,\n        \"separator\": true,\n        \"filters\": [\n            {\n                \"label\": \"A-G\",\n                \"value\": \"a-g\"\n            },\n            {\n                \"label\": \"H-R\",\n                \"value\": \"h-r\"\n            },\n            {\n                \"label\": \"S-Z\",\n                \"value\": \"s-z\"\n            }\n        ],\n        \"cellType\": \"AVATAR_WITH_TEXT\"\n    },\n    {\n        \"name\": \"email\",\n        \"displayName\": \"Email\",\n        \"width\": 250,\n        \"resizable\": true,\n        \"sorting\": false,\n        \"cellType\": \"WITH_META_LIST\"\n    },\n    {\n        \"name\": \"gender\",\n        \"displayName\": \"Gender\",\n        \"width\": 180,\n        \"resizable\": true,\n        \"cellType\": \"STATUS_HINT\",\n        \"filters\": [\n            {\n                \"label\": \"Male\",\n                \"value\": \"male\"\n            },\n            {\n                \"label\": \"Female\",\n                \"value\": \"female\"\n            }\n        ]\n    },\n    {\n        \"name\": \"icon\",\n        \"displayName\": \"Icon\",\n        \"width\": 100,\n        \"resizable\": true,\n        \"align\": \"center\",\n        \"cellType\": \"ICON\"\n    },\n    {\n        \"name\": \"customCell\",\n        \"displayName\": \"Custom Cell\",\n        \"width\": 200,\n        \"resizable\": true,\n        \"cellType\": \"WITH_META_LIST\"\n    }\n];\n\n  return (\n      <Card>\n        <Table\n          loaderSchema={loaderSchema}\n          showMenu={false}\n          separator={true}\n          data={data}\n          schema={schema}\n          withHeader={true}\n          headerOptions={{\n            withSearch: true\n          }}\n          onSearch={(currData, searchTerm) => {\n            return currData.filter(d =>\n              d.firstName.toLowerCase().match(searchTerm.toLowerCase())\n              || d.lastName.toLowerCase().match(searchTerm.toLowerCase())\n              || d.claim_id.toLowerCase().match(searchTerm.toLowerCase())\n            );\n          }}\n          withPagination={true}\n          pageSize={5}\n          onPageChange={newPage => console.log(`on-page-change:- ${newPage}`)}\n        />\n      </Card>\n  );\n}\n    "
    ]
  },
  "Disabled Row In Table": {
    "prefix": "Disabled Row In Table",
    "description": "Disabled Row",
    "body": [
      "import { Card, Table } from '@innovaccer/design-system';\n    () => {\n\n  const data = [\n    {\n      \"firstName\": \"Brooke\",\n      \"lastName\": \"Heeran\",\n      lastRun: \"Yesterday 3:14 PM\",\n      \"name\": \"Risk Analysis\",\n      \"type\": \"Batch Execution\",\n      status: \"Failed\",\n      statusType: \"Error\",\n      errorCode: 2204,\n      className: \"File not found\",\n      errorMessage: \"Cannot fetch files\",\n      disabled: true,\n    },\n    {\n      \"firstName\": \"Frazer\",\n      \"lastName\": \"Cathro\",\n      lastRun: \"Yesterday 11:15 AM\",\n      \"name\": \"Quality\",\n      \"type\": \"Batch Execution\",\n      status: \"Completed\",\n      statusType: \"Done\",\n      className: \"Executed\",\n    },\n    {\n      \"firstName\": \"Lemmie\",\n      \"lastName\": \"Ciric\",\n      lastRun: \"Yesterday 9:17 PM\",\n      \"name\": \"Claims\",\n      \"type\": \"Test Function\",\n      status: \"Completed\",\n      statusType: \"Done\",\n      className: \"Executed\",\n      disabled: true,\n    },\n    {\n      firstName: 'Randy',\n      lastName: 'Boatwright',\n      lastRun: 'Yesterday 4:26 PM',\n      name: 'Risk Analysis',\n      type: 'Batch Execution',\n      status: 'Completed',\n      statusType: 'Done',\n      className: 'Executed',\n    },\n    {\n      firstName: 'Rolando',\n      lastName: 'Cyples',\n      lastRun: 'Yesterday 7:34 AM',\n      name: 'Quality',\n      type: 'Test Function',\n      status: 'Failed',\n      statusType: 'Error',\n      errorCode: 2204,\n      className: 'File not found',\n      errorMessage: 'Cannot fetch files',\n    },\n  ];\n\n  const schema = [\n    {\n      name: 'lastRun',\n      displayName: 'Last Run',\n      width: '25%',\n    },\n    {\n      name: 'name',\n      displayName: 'Name',\n      width: '15%',\n    },\n    {\n      name: 'type',\n      displayName: 'Type',\n      width: '20%',\n    },\n    {\n      name: 'status',\n      displayName: 'Status',\n      width: '20%',\n      cellType: 'STATUS_HINT',\n      translate: a => ({\n        title: a.status,\n        statusAppearance: (a.status === 'Failed') ? 'alert' : 'success'\n      }),\n      filters: [\n        { label: 'Failed', value: 'failed' },\n        { label: 'Completed', value: 'completed' },\n      ],\n      onFilterChange: (a, filters) => {\n        for (const filter of filters) {\n          if (a.status.toLowerCase() === filter) return true;\n        }\n        return false;\n      },\n    },\n    {\n      name: 'user',\n      displayName: 'User',\n      width: '20%',\n      translate: a => ({\n        title: `${a.lastName}, ${a.firstName}`,\n        firstName: a.firstName,\n        lastName: a.lastName\n      }),\n      cellType: 'AVATAR_WITH_TEXT',\n    },\n  ];\n\n  return (\n      <Card>\n        <Table\n          showMenu={false}\n          size=\"compressed\"\n          separator={false}\n          data={data}\n          schema={schema}\n          withHeader={true}\n          withCheckbox={true}\n          headerOptions={{\n            withSearch: true\n          }}\n          onSearch={(currData, searchTerm) => {\n            return currData.filter(record =>\n              record.name.toLowerCase().match(searchTerm.toLowerCase())\n            );\n          }}\n          onSelect={(rowIndex, selected, selectedList, selectAll) =>\n            console.log(`on-select:- rowIndex: ${rowIndex} selected: ${selected} selectedList: ${JSON.stringify(selectedList)} selectAll: ${selectAll}`)\n          }\n          withPagination={false}\n        />\n      </Card>\n  );\n}\n    "
    ]
  },
  "Table with header": {
    "prefix": "Table with header",
    "description": "Table With Header",
    "body": [
      "import { Popover, Button, Checkbox, Icon, Input, Dropdown, Placeholder, PlaceholderParagraph, Label, Card, Grid, Pagination, Subheading, DatePicker, Table } from '@innovaccer/design-system';\n    /*\nimport * as React from 'react';\nimport { debounce } from 'throttle-debounce';\nimport {\n  Card,\n  Button,\n  Label,\n  Grid,\n  Placeholder,\n  PlaceholderParagraph,\n  Dropdown,\n  Input,\n  Checkbox,\n  Subheading,\n  Icon,\n  Pagination,\n  DatePicker,\n} from '@innovaccer/design-system';\nimport './style.css';\n\n// styles.css\n.Table-container {\n  display: flex;\n  height: 100%;\n}\n\n.Table-filters {\n  box-sizing: border-box;\n  display: flex;\n  flex-shrink: 0;\n}\n\n.Table-filters--vertical {\n  flex-direction: column;\n  height: 100%;\n  width: var(--spacing-9);\n  padding: 0 var(--spacing-l);\n}\n\n.Table-filtersHeading {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.Table-filtersCloseIcon {\n  cursor: pointer;\n}\n\n.Table-filters--vertical .Table-filter {\n  padding: var(--spacing) 0;\n}\n\n.Table-filters--vertical .Table-filter:first-of-type {\n  padding-top: var(--spacing-l);\n}\n\n.Table-filters--vertical .Table-filter:last-of-type {\n  padding-bottom: var(--spacing-l);\n}\n\n.Table-filters--horizontal .Table-filter {\n  padding: 0 var(--spacing-m);\n}\n\n.Table-filters--horizontal .Table-filter:first-of-type {\n  padding-left: 0;\n}\n\n.Table-filters--horizontal .Table-filter:last-of-type {\n  padding-right: 0;\n}\n\n.Table-filter .Input {\n  min-width: unset;\n}\n*/\n\n() => {\n  const getSelectAll = (data) => {\n    if (data.length) {\n      const anyUnSelected = data.some(d => !d._selected);\n      const allUnSelected = data.every(d => !d._selected);\n  \n      const indeterminate = data.length >= 0 && anyUnSelected && !allUnSelected;\n      const checked = !indeterminate && !allUnSelected;\n  \n      return { indeterminate, checked };\n    }\n    return { indeterminate: false, checked: false };\n  };\n  \n  const getTotalPages = (totalRecords, pageSize) => Math.ceil(totalRecords / pageSize);\n  \n  const hasSchema = schema => (schema && !!schema.length);\n\n  const getPluralSuffix = (count) => count > 1 ? 's' : '';\n  \n  const updateBatchData = (data, rowIndexes, dataUpdate) => {\n    const updatedData = [...data];\n    for (const rowIndex of rowIndexes) {\n      updatedData[rowIndex] = {\n        ...updatedData[rowIndex],\n        ...dataUpdate\n      };\n    }\n  \n    return updatedData;\n  };\n\n  const moveToIndex = (arr, from, to) => {\n    if (from === to) return arr;\n  \n    let newArr = arr;\n    if (from < to) {\n      newArr = [\n        ...arr.slice(0, from),\n        ...arr.slice(from + 1, to + 1),\n        arr[from],\n        ...arr.slice(to + 1)\n      ];\n    } else {\n      newArr = [\n        ...arr.slice(0, to),\n        arr[from],\n        ...arr.slice(to, from),\n        ...arr.slice(from + 1)\n      ];\n    }\n  \n    return newArr;\n  };\n\n  const DraggableDropdown = (props) => {\n    const {\n      options,\n      onChange\n    } = props;\n  \n    const [open, setOpen] = React.useState(false);\n    const [tempOptions, setTempOptions] = React.useState(options);\n    const [triggerWidth, setTriggerWidth] = React.useState('var(--spacing-8)');\n  \n    React.useEffect(() => {\n      setTempOptions(options);\n    }, [open]);\n  \n    const handleParentChange = (e) => {\n      setTempOptions(tempOptions.map(option => ({ ...option, selected: e.target.checked })));\n    };\n  \n    const handleChildChange = (e, index) => {\n      const newOptions = [...tempOptions];\n      newOptions[index] = {\n        ...newOptions[index],\n        selected: e.target.checked\n      };\n  \n      setTempOptions(newOptions);\n    };\n  \n    const onToggleHandler = (newOpen) => {\n      setOpen(newOpen);\n    };\n  \n    const onCancelHandler = () => {\n      setOpen(false);\n    };\n  \n    const onApplyHandler = () => {\n      setOpen(false);\n  \n      if (onChange) onChange(tempOptions);\n    };\n  \n    return (\n      <div className=\"Dropdown\">\n        <Popover\n          open={open}\n          onToggle={onToggleHandler}\n          trigger={(\n            <Button\n              ref={el => {\n                // setTriggerWidth(`${el.clientWidth}px`);\n              }}\n              size=\"tiny\"\n              appearance=\"transparent\"\n              icon=\"keyboard_arrow_down_filled\"\n              iconAlign=\"right\"\n            >\n              {`Showing ${options.filter(option => option.selected).length} of ${options.length} column${getPluralSuffix(options.length)}`}\n            </Button>\n          )}\n          triggerClass=\"w-100\"\n          customStyle={{\n            width: triggerWidth\n          }}\n          className=\"Header-draggableDropdown\"\n        >\n          <div className=\"Dropdown-wrapper\">\n            <div className=\"OptionWrapper\">\n              <Checkbox\n                className=\"OptionCheckbox\"\n                label=\"Select All\"\n                checked={tempOptions.every(option => option.selected)}\n                indeterminate={tempOptions.some(option => option.selected)\n                  && tempOptions.some(option => !option.selected)}\n                onChange={handleParentChange}\n              />\n            </div>\n            {tempOptions.map((option, index) => {\n              return (\n                <div\n                  key={option.value}\n                  className=\"OptionWrapper d-flex flex-space-between align-items-center cursor-pointer\"\n                  draggable={true}\n                  onDragStart={e => {\n                    e.dataTransfer.setData('index', `${index}`);\n                  }}\n                  onDragOver={e => e.preventDefault()}\n                  onDrop={e => {\n                    const from = +e.dataTransfer.getData('index');\n                    const to = index;\n  \n                    if (from !== to) setTempOptions(moveToIndex(tempOptions, from, to));\n                  }}\n                >\n                  <Checkbox\n                    className=\"OptionCheckbox\"\n                    name={option.value}\n                    label={option.label}\n                    checked={tempOptions[index].selected}\n                    onChange={e => handleChildChange(e, index)}\n                  />\n                  <Icon name=\"drag_handle\" className=\"mr-4\" />\n                </div>\n              );\n            })}\n          </div>\n          <div className=\"Dropdown-buttonWrapper\">\n            <Button className=\"mr-4\" size=\"tiny\" onClick={onCancelHandler}>Cancel</Button>\n            <Button appearance=\"primary\" size=\"tiny\" onClick={onApplyHandler}>Apply</Button>\n          </div>\n        </Popover>\n      </div>\n    );\n  };\n  \n  const Header = (props) => {\n    const {\n      loading,\n      error,\n      data,\n      schema,\n      showHead,\n      withPagination,\n      page,\n      pageSize,\n      withCheckbox,\n      updateSchema,\n      filterList = {},\n      updateFilterList,\n      totalRecords = 0,\n      onSelectAll,\n      searchPlaceholder,\n      selectAll,\n      searchTerm,\n      updateSearchTerm,\n      allowSelectAll,\n      updateShowVerticalFilters\n    } = props;\n  \n    const [selectAllRecords, setSelectAllRecords] = React.useState(false);\n    const [flag, setFlag] = React.useState(true);\n  \n    React.useEffect(() => {\n      setFlag(!flag);\n    }, [schema]);\n  \n    React.useEffect(() => {\n      if (selectAll && selectAll.checked) {\n        if (onSelectAll) onSelectAll(true, selectAllRecords);\n      }\n    }, [selectAllRecords]);\n  \n    React.useEffect(() => {\n      if (selectAll && !selectAll.checked) setSelectAllRecords(false);\n    }, [selectAll]);\n  \n    const filterSchema = schema.filter(s => s.filters);\n  \n    const onSearchChange = e => {\n      const value = e.target.value;\n      if (updateSearchTerm) {\n        updateSearchTerm(value);\n      }\n    };\n  \n    const onFilterChange = (name, filters) => {\n      const newFilterList = {\n        ...filterList,\n        [name]: filters\n      };\n  \n      if (updateFilterList) {\n        updateFilterList(newFilterList);\n      }\n    };\n  \n    const columnOptions = schema.map(s => ({\n      label: s.displayName,\n      value: s.name,\n      selected: !s.hidden\n    }));\n  \n    const onDynamicColumnUpdate = (options) => {\n      const newSchema = options.map(option => ({\n        ...schema.find(colSchema => colSchema.name === option.value),\n        hidden: !option.selected\n      }));\n  \n      if (updateSchema) updateSchema(newSchema);\n    };\n  \n    const selectedCount = data.filter(d => d._selected).length;\n    const startIndex = (page - 1) * pageSize + 1;\n  const endIndex = Math.min(page * pageSize, totalRecords);\n  const label = error\n    ? `Showing 0 items`\n    : withCheckbox && selectedCount\n      ? selectAllRecords\n        ? `Selected all ${totalRecords} item${getPluralSuffix(totalRecords)}`\n        : `Selected ${selectedCount} item${getPluralSuffix(totalRecords)} on this page`\n      : withPagination\n        ? `Showing ${startIndex}-${endIndex} of ${totalRecords} item${getPluralSuffix(totalRecords)}`\n        : `Showing ${totalRecords} item${getPluralSuffix(totalRecords)}`;\n  \n    return (\n      <div className=\"Header\">\n        <div className=\"Header-content Header-content--top\">\n          <div className=\"Header-search\">\n            <Input\n              name=\"GridHeader-search\"\n              icon=\"search\"\n              placeholder={searchPlaceholder}\n              onChange={onSearchChange}\n              value={searchTerm}\n              onClear={() => updateSearchTerm && updateSearchTerm('')}\n              disabled={loading && !hasSchema(schema)}\n            />\n          </div>\n          <div className=\"Header-dropdown\">\n            <div className=\"Table-filters Table-filters--horizontal\">\n              <div className=\"Table-filter\">\n                <Dropdown\n                  key=\"name\"\n                  disabled={loading}\n                  withCheckbox={true}\n                  showApplyButton={true}\n                  inlineLabel={\"Name\"}\n                  options={[\n                    { label: 'A-G', value: 'a-g', selected: true },\n                    { label: 'H-R', value: 'h-r', selected: true },\n                    { label: 'S-Z', value: 's-z', selected: true },\n                  ]}\n                  onChange={selected => onFilterChange(\"name\", selected)}\n                />\n              </div>\n              <div className=\"Table-filter\">\n                <Button\n                  icon=\"add\"\n                  onClick={() => updateShowVerticalFilters(true)}\n                >\n                  More Filters\n                </Button>\n              </div>\n            </div>\n          </div>\n          <div className=\"Header-actions\">\n          </div>\n        </div>\n        <div className=\"Header-content Header-content--bottom\">\n          <div className=\"Header-label\">\n            {showHead && !loading && (\n              <Checkbox\n                {...selectAll}\n                onChange={event => {\n                  if (onSelectAll) onSelectAll(event.target.checked);\n                }}\n              />\n            )}\n            {loading ? (\n              <Placeholder withImage={!showHead && withCheckbox}>\n                <PlaceholderParagraph length={'small'} size={'s'} />\n              </Placeholder>\n            ) : (\n                <>\n                  <Label>{label}</Label>\n                  {withPagination && selectAll.checked && allowSelectAll && (\n                    <div className=\"ml-4\">\n                      {!selectAllRecords ? (\n                        <Button\n                          size=\"tiny\"\n                          onClick={() => setSelectAllRecords(true)}\n                        >\n                          {`Select all \totalRecords} items`}\n                        </Button>\n                      ) : (\n                          <Button\n                            size=\"tiny\"\n                            onClick={() => setSelectAllRecords(false)}\n                          >\n                            Clear Selection\n                          </Button>\n                        )\n                      }\n                    </div>\n                  )}\n                </>\n              )\n            }\n          </div>\n          <div className=\"Header-hideColumns\">\n            <DraggableDropdown\n              options={columnOptions}\n              onChange={onDynamicColumnUpdate}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  };\n  \n  Header.defaultProps = {\n    schema: [],\n    data: [],\n    searchPlaceholder: 'Search',\n    dynamicColumn: true\n  };\n  \n  class Table extends React.Component {\n    constructor(props) {\n      super(props);\n  \n      this.state = {\n        data: [],\n        schema: [],\n        page: 1,\n        totalRecords: 0,\n        sortingList: props.sortingList || [],\n        filterList: props.filterList || {},\n        loading: true,\n        error: false,\n        selectAll: getSelectAll([]),\n        searchTerm: undefined,\n        showVerticalFilters: props.showVerticalFilters,\n      };\n  \n      this.pageSize = 4;\n      this.searchDebounceDuration = 750;\n      this.debounceUpdate = debounce(this.searchDebounceDuration, this.updateDataFn);\n    }\n\n    componentDidMount() {\n      this.updateData();\n    }\n  \n    componentDidUpdate(_prevProps, prevState) {\n      if (prevState.page !== this.state.page) {\n        const { onPageChange } = this.props;\n        if (onPageChange) onPageChange(this.state.page);\n      }\n  \n      if (prevState.page !== this.state.page\n        || prevState.filterList !== this.state.filterList\n        || prevState.sortingList !== this.state.sortingList\n        || prevState.searchTerm !== this.state.searchTerm) {\n        if (!this.props.loading) this.updateData({});\n      }\n    }\n\n    updateData() {\n      this.setState({\n        loading: true\n      });\n  \n      this.debounceUpdate();\n    }\n  \n    updateDataFn() {\n      this.onSelect(-1, false);\n  \n      const {\n        fetchData,\n      } = this.props;\n  \n      const {\n        page,\n        sortingList,\n        filterList,\n        searchTerm\n      } = this.state;\n  \n      const {\n        pageSize\n      } = this;\n  \n      const opts = {\n        page,\n        pageSize,\n        sortingList,\n        filterList,\n        searchTerm,\n      };\n  \n      this.setState({\n        loading: true\n      });\n      if (fetchData) {\n        fetchData(opts)\n          .then((res) => {\n            const data = res.data;\n            const schema = this.state.schema.length ? this.state.schema : res.schema;\n            this.setState({\n              data,\n              schema,\n              selectAll: getSelectAll(data),\n              totalRecords: res.count,\n              loading: false,\n              error: !data.length\n            });\n          })\n          .catch(() => {\n            this.setState({\n              loading: false,\n              error: true,\n              data: []\n            });\n          });\n      }\n    }\n  \n    onSelect(rowIndexes, selected) {\n      const {\n        data\n      } = this.state;\n  \n      const {\n        onSelect\n      } = this.props;\n  \n      const indexes = [rowIndexes];\n      let newData = data;\n      if (rowIndexes >= 0) {\n        newData = updateBatchData(data, indexes, {\n          _selected: selected\n        });\n  \n        this.setState({\n          data: newData,\n          selectAll: getSelectAll(newData)\n        });\n      }\n  \n      if (onSelect) {\n        onSelect(indexes, selected, rowIndexes === -1 ? [] : newData.filter(d => d._selected));\n      }\n    }\n  \n    onSelectAll(selected, selectAll) {\n      const {\n        onSelect\n      } = this.props;\n  \n      const {\n        data\n      } = this.state;\n  \n      const indexes = Array.from({ length: data.length }, (_, i) => i);\n  \n      const newData = updateBatchData(data, indexes, {\n        _selected: selected\n      });\n  \n      if (onSelect) {\n        onSelect(indexes, selected, newData.filter(d => d._selected), selectAll);\n      }\n  \n      this.setState({\n        data: newData,\n        selectAll: getSelectAll(newData)\n      });\n    }\n  \n    onPageChange(newPage) {\n      this.setState({\n        page: newPage\n      });\n    }\n  \n    onFilterChange(name, selected) {\n      const {\n        filterList\n      } = this.props;\n  \n      const newFilterList = {\n        ...filterList,\n        [name]: selected\n      };\n  \n      this.updateFilterList(newFilterList);\n    }\n  \n    updateShowVerticalFilters(val) {\n      this.setState({\n        showVerticalFilters: val\n      });\n    }\n  \n    updateSchema(newSchema) {\n      this.setState({\n        schema: newSchema\n      });\n    }\n  \n    updateSortingList(newSortingList) {\n      const {\n        multipleSorting\n      } = this.props;\n  \n      this.setState({\n        sortingList: multipleSorting ? [...newSortingList] : newSortingList.slice(-1),\n        page: 1,\n      });\n    }\n  \n    updateFilterList(newFilterList) {\n      this.setState({\n        filterList: newFilterList,\n        page: 1,\n      });\n    }\n  \n    updateSearchTerm(newSearchTerm) {\n      this.setState({\n        searchTerm: newSearchTerm,\n        page: 1\n      });\n    }\n  \n    render() {\n      const {\n        loaderSchema,\n      } = this.props;\n  \n      const withCheckbox = true;\n      const withPagination = true;\n      const {\n        pageSize\n      } = this;\n  \n      const {\n        totalRecords,\n        showVerticalFilters,\n        loading\n      } = this.state;\n      const totalPages = getTotalPages(totalRecords, pageSize);\n  \n      return (\n        <div className=\"Table-container\">\n          <div style={{ width: showVerticalFilters ? 'calc(100% - var(--spacing-9))' : '100%' }}>\n            <Card className=\"Table overflow-hidden\">\n              <div className=\"Table-header\">\n                <Header\n                  {...this.state}\n                  updateSchema={this.updateSchema.bind(this)}\n                  updateFilterList={this.updateFilterList.bind(this)}\n                  updateSearchTerm={this.updateSearchTerm.bind(this)}\n                  updateShowVerticalFilters={this.updateShowVerticalFilters.bind(this)}\n                  onSelectAll={this.onSelectAll.bind(this)}\n                  withCheckbox={withCheckbox}\n                  withPagination={withPagination}\n                  pageSize={pageSize}\n                />\n              </div>\n              <div className=\"Table-grid\">\n                <Grid\n                  {...this.state}\n                  updateData={this.updateData.bind(this)}\n                  updateSchema={this.updateSchema.bind(this)}\n                  updateSortingList={this.updateSortingList.bind(this)}\n                  updateFilterList={this.updateFilterList.bind(this)}\n                  withCheckbox={withCheckbox}\n                  onSelect={this.onSelect.bind(this)}\n                  onSelectAll={this.onSelectAll.bind(this)}\n                  showMenu={true}\n                  type=\"data\"\n                  size=\"comfortable\"\n                  draggable={true}\n                  withPagination={withPagination && totalPages > 1}\n                  pageSize={pageSize}\n                  loaderSchema={loaderSchema}\n                />\n              </div>\n              {withPagination && (totalPages > 1) && (\n                <div className=\"Table-pagination\">\n                  <Pagination\n                    page={this.state.page}\n                    totalPages={getTotalPages(totalRecords, pageSize)}\n                    type=\"jump\"\n                    onPageChange={this.onPageChange.bind(this)}\n                  />\n                </div>\n              )}\n            </Card>\n          </div>\n          <div className={`Table-filters Table-filters--vertical${!showVerticalFilters ? ' d-none' : ''}`}>\n            <div className=\"Table-filtersHeading\">\n              <Subheading>Filters</Subheading>\n              <Icon name=\"close\" className=\"Table-filtersCloseIcon\" onClick={() => this.setState({ showVerticalFilters: false })} />\n            </div>\n            <div>\n              <div className=\"Table-filter\">\n                <Dropdown\n                  key=\"gender\"\n                  disabled={loading}\n                  withCheckbox={true}\n                  showApplyButton={true}\n                  inlineLabel={\"Gender\"}\n                  options={[\n                    { label: 'Male', value: 'male', selected: true },\n                    { label: 'Female', value: 'female', selected: true },\n                  ]}\n                  onChange={selected => this.onFilterChange(\"gender\", selected)}\n                />\n              </div>\n              <div className=\"Table-filter\">\n                <DatePicker\n                  withInput={true}\n                  label=\"Date\"\n                  inputOptions={{\n                    placeholder: \"mm/dd/yyyy\",\n                    disabled: loading,\n                    minWidth: 'unset'\n                  }}\n                  onDateChange={(_date, dateStr) => this.onFilterChange(\"date\", dateStr)}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n\n  const translateData = (schema, data) => {\n    let newData = data;\n\n    if (schema.translate) {\n      const translatedData = schema.translate(data);\n      newData = {\n        ...newData,\n        [schema.name]: typeof translatedData === 'object' ? {\n          ...newData[schema.name],\n          ...translatedData\n        } : translatedData\n      };\n    }\n    if (typeof newData[schema.name] !== 'object') newData[schema.name] = { title: newData[schema.name] };\n\n    return newData;\n  }\n\n  const onFilterChange = {\n    \"name\": (a, filters) => {\n      for (const filter of filters) {\n        switch (filter) {\n          case 'a-g':\n            if (a.firstName[0].toLowerCase() >= 'a' && a.firstName[0].toLowerCase() <= 'g') return true;\n            break;\n          case 'h-r':\n            if (a.firstName[0].toLowerCase() >= 'h' && a.firstName[0].toLowerCase() <= 'r') return true;\n            break;\n          case 's-z':\n            if (a.firstName[0].toLowerCase() >= 's' && a.firstName[0].toLowerCase() <= 'z') return true;\n            break;\n        }\n      }\n      return false;\n    },\n    \"gender\": (a, filters) => {\n      for (const filter of filters) {\n        if (a.gender.toLowerCase() === filter) return true;\n      }\n      return false;\n    }\n  };\n\n  const filterData = (data, filterList) => {\n    let filteredData = data;\n    if (filterList) {\n      Object.keys(filterList).forEach(name => {\n        const filters = filterList[name];\n        const onChange = onFilterChange[name];\n        if (onChange) {\n          filteredData = filteredData.filter(d => onChange(d, filters));\n        }\n      });\n    }\n\n    return filteredData;\n  };\n\n  const sortData = (schema, data, sortingList) => {\n    const sortedData = [...data];\n    sortingList.forEach(l => {\n      const sIndex = schema.findIndex(s => s.name === l.name);\n      if (sIndex !== -1) {\n        const defaultComparator = (a, b) => {\n          const aData = translateData(schema[sIndex], a);\n          const bData = translateData(schema[sIndex], b);\n          return aData[l.name].title.localeCompare(bData[l.name].title);\n        };\n\n        const {\n          comparator = defaultComparator\n        } = schema[sIndex];\n\n        sortedData.sort(comparator);\n        if (l.type === 'desc') sortedData.reverse();\n      }\n    });\n\n    return sortedData;\n  };\n\n  const paginateData = (data, page, pageSize) => {\n    const start = (page - 1) * pageSize;\n    const end = start + pageSize;\n    const paginatedData = data.slice(start, end);\n    return paginatedData;\n  };\n\n  const data = [\n    {\n        \"firstName\": \"Brooke\",\n        \"lastName\": \"Heeran\",\n        \"email\": \"bheeran0@altervista.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Frazer\",\n        \"lastName\": \"Cathro\",\n        \"email\": \"fcathro1@ucla.edu\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lemmie\",\n        \"lastName\": \"Ciric\",\n        \"email\": {\n            \"title\": \"lciric2@dmoz.org\",\n            \"metaList\": [\n                \"First\",\n                \"Second\"\n            ]\n        },\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Randy\",\n        \"lastName\": \"Boatwright\",\n        \"email\": \"rboatwright3@arstechnica.com\",\n        \"status\": \"Completed\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rolando\",\n        \"lastName\": \"Cyples\",\n        \"email\": \"rcyples4@biglobe.ne.jp\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lem\",\n        \"lastName\": \"Males\",\n        \"email\": \"lmales5@admin.ch\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Sayres\",\n        \"lastName\": \"Adelberg\",\n        \"email\": \"sadelberg6@uol.com.br\",\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Murray\",\n        \"lastName\": \"Bravington\",\n        \"email\": \"mbravington7@drupal.org\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Jena\",\n        \"lastName\": \"Swatheridge\",\n        \"email\": \"jswatheridge8@npr.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Annabel\",\n        \"lastName\": \"Nelsey\",\n        \"email\": \"anelsey9@google.com\",\n        \"gender\": \"Female\",\n        \"status\": \"Completed\"\n    }\n];\n\n  const schema = [\n    {\n      name: 'name',\n      displayName: 'Name',\n      width: 300,\n      resizable: true,\n      separator: true,\n      tooltip: true,\n      translate: a => ({\n        title: `${a.firstName} ${a.lastName}`,\n        firstName: a.firstName,\n        lastName: a.lastName\n      }),\n      cellType: 'AVATAR_WITH_TEXT',\n    },\n    {\n      name: 'email',\n      displayName: 'Email',\n      width: 350,\n      resizable: true,\n      sorting: false,\n      cellType: 'WITH_META_LIST'\n    },\n    {\n      name: 'gender',\n      displayName: 'Gender',\n      width: 200,\n      resizable: true,\n      comparator: (a, b) => a.gender.localeCompare(b.gender),\n      cellType: 'STATUS_HINT',\n      translate: a => ({\n        title: a.gender,\n        statusAppearance: (a.gender === 'Female') ? 'alert' : 'success'\n      }),\n    },\n    {\n      name: 'icon',\n      displayName: 'Icon',\n      width: 100,\n      resizable: true,\n      align: 'center',\n      cellType: 'ICON',\n      translate: _ => ({\n        icon: 'events'\n      })\n    },\n    {\n      name: 'customCell',\n      displayName: 'Custom Cell',\n      width: 200,\n      resizable: true,\n      separator: true,\n      cellRenderer: (props) => {\n        const {\n          loading\n        } = props;\n\n        if (loading) return <></>;\n\n        return (\n          <Button appearance={'primary'}>Button</Button>\n        );\n      }\n    },\n  ];\n\n  const fetchData = (options) => {\n    const {\n      page,\n      pageSize,\n      sortingList,\n      filterList,\n      searchTerm\n    } = options;\n\n    const onSearch = (d, searchTerm = '') => {\n      return (\n        d.firstName.toLowerCase().match(searchTerm.toLowerCase())\n        || d.lastName.toLowerCase().match(searchTerm.toLowerCase())\n      );\n\n      return true;\n    }\n\n    const filteredData = filterData(data, filterList);\n    const searchedData = filteredData.filter(d => onSearch(d, searchTerm));\n    const sortedData = sortData(schema, searchedData, sortingList);\n\n    if (page && pageSize) {\n      return new Promise(resolve => {\n        window.setTimeout(() => {\n          const start = (page - 1) * pageSize;\n          const end = start + pageSize;\n          const slicedData = sortedData.slice(start, end);\n          resolve({\n            searchTerm,\n            schema,\n            count: sortedData.length,\n            data: slicedData,\n          });\n        }, 2000);\n      });\n    }\n\n    return new Promise(resolve => {\n      window.setTimeout(() => {\n        resolve({\n          searchTerm,\n          schema,\n          count: sortedData.length,\n          data: sortedData,\n        });\n      }, 2000);\n    });\n  }\n\n  const loaderSchema = schema.filter(s => {\n    const { name, displayName, width, separator, cellType, cellRenderer } = s;\n    return {\n      name, displayName, width, separator, cellType, cellRenderer\n    };\n  });\n\n  return (\n    <div\n      style={{\n        height: '450px',\n        background: 'var(--secondary-lightest)'\n      }}\n    >\n      <Table\n        loaderSchema={loaderSchema}\n        fetchData={fetchData}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "Nested Table With Nested Cards": {
    "prefix": "Nested Table With Nested Cards",
    "description": "Nested Table With Nested Cards",
    "body": [
      "import { CardSubdued, Text, Card, Table } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      \"firstName\": \"Brooke\",\n      \"lastName\": \"Heeran\",\n      lastRun: \"Yesterday 3:14 PM\",\n      \"name\": \"Risk Analysis\",\n      \"type\": \"Batch Execution\",\n      status: \"Failed\",\n      statusType: \"Error\",\n      errorCode: 2204,\n      className: \"File not found\",\n      errorMessage: \"Cannot fetch files\"\n\n    },\n    {\n      \"firstName\": \"Frazer\",\n      \"lastName\": \"Cathro\",\n      lastRun: \"Yesterday 11:15 AM\",\n      \"name\": \"Quality\",\n      \"type\": \"Batch Execution\",\n      status: \"Completed\",\n      statusType: \"Done\",\n      className: \"Executed\",\n    },\n    {\n      \"firstName\": \"Lemmie\",\n      \"lastName\": \"Ciric\",\n      lastRun: \"Yesterday 9:17 PM\",\n      \"name\": \"Claims\",\n      \"type\": \"Test Function\",\n      status: \"Completed\",\n      statusType: \"Done\",\n      className: \"Executed\",\n    },\n    {\n      firstName: 'Randy',\n      lastName: 'Boatwright',\n      lastRun: 'Yesterday 4:26 PM',\n      name: 'Risk Analysis',\n      type: 'Batch Execution',\n      status: 'Completed',\n      statusType: 'Done',\n      className: 'Executed',\n    },\n    {\n      firstName: 'Rolando',\n      lastName: 'Cyples',\n      lastRun: 'Yesterday 7:34 AM',\n      name: 'Quality',\n      type: 'Test Function',\n      status: 'Failed',\n      statusType: 'Error',\n      errorCode: 2204,\n      className: 'File not found',\n      errorMessage: 'Cannot fetch files',\n    },\n  ];\n\n  const schema = [\n    {\n      name: 'lastRun',\n      displayName: 'Last Run',\n      width: '25%',\n    },\n    {\n      name: 'name',\n      displayName: 'Name',\n      width: '15%',\n    },\n    {\n      name: 'type',\n      displayName: 'Type',\n      width: '20%',\n    },\n    {\n      name: 'status',\n      displayName: 'Status',\n      width: '20%',\n      cellType: 'STATUS_HINT',\n      translate: a => ({\n        title: a.status,\n        statusAppearance: (a.status === 'Failed') ? 'alert' : 'success'\n      }),\n      filters: [\n        { label: 'Failed', value: 'failed' },\n        { label: 'Completed', value: 'completed' },\n      ],\n      onFilterChange: (a, filters) => {\n        for (const filter of filters) {\n          if (a.status.toLowerCase() === filter) return true;\n        }\n        return false;\n      },\n    },\n    {\n      name: 'user',\n      displayName: 'User',\n      width: '20%',\n      translate: a => ({\n        title: `${a.lastName}, ${a.firstName}`,\n        firstName: a.firstName,\n        lastName: a.lastName\n      }),\n      cellType: 'AVATAR_WITH_TEXT',\n    },\n  ];\n\n  const nestedRowRenderer = (props) => {\n    const {\n      data,\n      rowIndex\n    } = props;\n    if(rowIndex % 2){\n      return false;\n    }\n    return (\n      <CardSubdued className=\"mb-4 mt-3 mr-4\" style={{ marginLeft: '40px' }}>\n        <div className=\"d-flex flex-row\">\n          <div style={{ width: '17%' }}>\n            <Text weight=\"medium\">Type</Text>\n          </div>\n          <Text>{data.type}</Text>\n        </div>\n        {data.errorCode && (\n          <div className=\"d-flex flex-row\">\n            <div style={{ width: '17%' }}>\n              <Text weight=\"medium\">Error code</Text>\n            </div>\n            <Text>{data.errorCode}</Text>\n          </div>\n        )}\n        <div className=\"d-flex flex-row\">\n          <div style={{ width: '17%' }}>\n            <Text weight=\"medium\">Class name</Text>\n          </div>\n          <Text>{data.className}</Text>\n        </div>\n        {data.errorMessage && (\n          <div className=\"d-flex flex-row\">\n            <div style={{ width: '17%' }}>\n              <Text weight=\"medium\">Error message</Text>\n            </div>\n            <Text>{data.errorMessage}</Text>\n          </div>\n        )}\n      </CardSubdued>\n    );\n  }\n\n  return (\n    <Card>\n      <Table\n        data={data}\n        schema={schema}\n        withHeader={true}\n        headerOptions={{\n          withSearch: true,\n          dynamicColumn: false\n        }}\n        separator={false}\n        showMenu={false}\n        nestedRows={true}\n        filterPosition=\"HEADER\"\n        nestedRowRenderer={nestedRowRenderer}\n        filterList={{\n          status: ['failed', 'completed']\n        }}\n      />\n    </Card>\n  );\n}\n    "
    ]
  },
  "Pinned Column": {
    "prefix": "Pinned Column",
    "description": "Pinned Columns",
    "body": [
      "import { Card, Table } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      s_no: 1,\n      empi: \"P087636\",\n      first_name: \"Joy\",\n      last_name: \"Lawson\",\n      dob: \"01/12/1982\",\n      gender: 'Female',\n      facility: 'Charity Medical Clinic'\n    },\n    {\n      s_no: 2,\n      empi: \"P087637\",\n      first_name: \"Hannah\",\n      last_name: \"Pop\",\n      dob: \"01/11/1982\",\n      gender: 'Female',\n      facility: 'Bancroft Medical Clinic'\n    },\n    {\n      s_no: 3,\n      empi: \"P087638\",\n      first_name: \"Lisa\",\n      last_name: \"Sanchez\",\n      dob: \"02/12/1981\",\n      gender: 'Female',\n      facility: 'Lullaby Medical Clinic'\n    },\n    {\n      s_no: 4,\n      empi: \"P087639\",\n      first_name: \"Kathy\",\n      last_name: \"Powell\",\n      dob: \"01/10/1972\",\n      gender: 'Female',\n      facility: 'Charity Medical Clinic'\n    },\n    {\n      s_no: 5 ,\n      empi: \"P087631\",\n      first_name: \"Dennis\",\n      last_name: \"Lane\",\n      dob: \"01/10/1982\",\n      gender: 'Male',\n      facility: 'Lullaby Medical Clinic'\n    },\n  ];\n\n  const schema = [\n    {\n      name: 's_no',\n      displayName: 'S.no.',\n      width: '5%',\n      sorting: false,\n      pinned: 'left'\n    },\n    {\n      name: 'empi',\n      displayName: 'EMPI',\n      width: '10%',\n      sorting: false,\n      pinned: 'left'\n    },\n    {\n      name: 'first_name',\n      displayName: 'First Name',\n      width: '20%',\n      sorting: false\n    },\n    {\n      name: 'last_name',\n      displayName: 'Last Name',\n      width: '20%',\n      sorting: false\n    },\n    {\n      name: 'dob',\n      displayName: 'DOB',\n      width: '20%',\n      sorting: false\n    },\n    {\n      name: 'gender',\n      displayName: 'Gender',\n      width: '20%',\n      sorting: false\n    },\n    {\n      name: 'facility',\n      displayName: 'Facility',\n      sorting: false\n    },\n  ];\n\n  return (\n      <Card>\n        <Table\n          showMenu={false}\n          size=\"compressed\"\n          separator={false}\n          data={data}\n          schema={schema}\n          withHeader={true}\n          headerOptions={{\n            withSearch: false\n          }}\n          withPagination={false}\n        />\n      </Card>\n  );\n}\n    "
    ]
  },
  "Table Resource Table": {
    "prefix": "Table Resource Table",
    "description": "Resource Table",
    "body": [
      "import { Avatar, Dropdown, Button, Card, Table } from '@innovaccer/design-system';\n    \n() => {\n  const data = [\n    {\n        \"name\": \"Asthma Outreach\",\n        \"firstName\": \"Brooke\",\n        \"lastName\": \"Heeran\",\n        \"status\": \"In Progress\",\n        \"lastUpdated\": \"June 20, 2020\",\n        \"recipients\": 11846\n    },\n    {\n        \"firstName\": \"Frazer\",\n        \"lastName\": \"Cathro\",\n        \"status\": \"Scheduled\",\n        \"lastUpdated\": \"June 19, 2020\",\n        \"name\": \"HbA1c Test due\",\n        \"recipients\": 12846\n    },\n    {\n        \"firstName\": \"Lemmie\",\n        \"name\": \"ER Education\",\n        \"lastName\": \"Ciric\",\n        \"status\": \"Draft\",\n        \"lastUpdated\": \"May 19, 2020\",\n        \"recipients\": 118467\n    },\n    {\n        \"firstName\": \"Randy\",\n        \"lastName\": \"Boatwright\",\n        \"name\": \"Flu Vaccination\",\n        \"status\": \"Failed\",\n        \"lastUpdated\": \"March 19, 2020\",\n        \"recipients\": 10846\n    },\n    {\n        \"firstName\": \"Rolando\",\n        \"lastName\": \"Cyples\",\n        \"name\": \"Well-child Visit\",\n        \"status\": \"In Progress\",\n        \"lastUpdated\": \"April 19, 2020\",\n        \"recipients\": 11847\n    },\n    {\n        \"firstName\": \"Lem\",\n        \"lastName\": \"Males\",\n        \"name\": \"Annual wellness Visit\",\n        \"status\": \"In Progress\",\n        \"lastUpdated\": \"June 16, 2020\",\n        \"recipients\": 118100\n    },\n    {\n        \"firstName\": \"Sayres\",\n        \"lastName\": \"Adelberg\",\n        \"name\": \"Flu Vaccination\",\n        \"status\": \"Draft\",\n        \"lastUpdated\": \"Dec 19, 2020\",\n        \"recipients\": 11848\n    },\n    {\n        \"firstName\": \"Murray\",\n        \"lastName\": \"Bravington\",\n        \"name\": \"Well-child Visit\",\n        \"status\": \"Draft\",\n        \"lastUpdated\": \"April 19, 2020\",\n        \"recipients\": 11890\n    }\n];\n\n  const statusAppearance = {\n    'In Progress': 'info',\n    'Scheduled': 'warning',\n    'Draft': 'default',\n    'Failed': 'alert'\n  };\n\n  const schema = [\n    {\n      name: 'name',\n      displayName: 'Name',\n      width: '30%',\n      cellType: 'WITH_META_LIST',\n      sorting: false,\n      translate: a => ({\n        title: a.name,\n        metaList: [`${a.recipients} recipients`]\n      }),\n    },\n    {\n      name: 'status',\n      displayName: 'Status',\n      width: '20%',\n      cellType: 'STATUS_HINT',\n      sorting: false,\n      filters: [\n        { label: 'In Progress', value: 'In Progress' },\n        { label: 'Scheduled', value: 'Scheduled' },\n        { label: 'Draft', value: 'Draft' },\n        { label: 'Failed', value: 'Failed' }\n      ],\n      onFilterChange: (a, filters) => {\n        for (const filter of filters) {\n          if (a.status === filter) return true;\n        }\n        return false;\n      },\n      translate: a => {\n        const status = a.status;\n        return ({\n          title: status,\n          statusAppearance: statusAppearance[status]\n        });\n      }\n    },\n    {\n      name: 'lastUpdated',\n      displayName: 'Last Updated on',\n      width: '30%',\n      sorting: false,\n    },\n    {\n      name: 'user',\n      displayName: '',\n      sorting: false,\n      width: '20%',\n      cellRenderer: (props) => {\n        const { data } = props;\n        return (\n          <div className=\"d-flex align-items-center justify-content-end flex-grow-1\">\n            <Avatar firstName={data.firstName} lastName={data.lastName} />\n            <div style={{ width: 'var(--spacing-3)' }} className=\"ml-6\">\n              <Dropdown\n                triggerOptions={{\n                  customTrigger: () => (\n                    <Button icon=\"more_horiz\" appearance=\"transparent\" />\n                  )\n                }}\n                menu={true}\n                align=\"left\"\n                options={[\n                  { label: 'Edit', value: 'Edit' },\n                  { label: 'Delete', value: 'Delete' }\n                ]}\n                popoverOptions={{appendToBody:false}}\n              />\n            </div>\n          </div>\n        );\n      }\n    }\n  ];\n\n  return (\n    <Card>\n      <Table\n        showMenu={false}\n        type=\"resource\"\n        data={data}\n        schema={schema}\n        withHeader={true}\n        filterPosition=\"HEADER\"\n        onSelect={(rowIndex, selected, selectedList, selectAll) =>\n          console.log(`on-select:- rowIndex: ${rowIndex} selected: ${selected} selectedList: ${JSON.stringify(selectedList)} selectAll: ${selectAll}`)\n        }\n        headerOptions={{\n          withSearch: true\n        }}\n        filterList={{\n          status: ['In Progress', 'Scheduled', 'Draft', 'Failed']\n        }}\n        onSearch={(currData, searchTerm) => {\n          return currData.filter(d =>\n            d.firstName.toLowerCase().match(searchTerm.toLowerCase())\n            || d.lastName.toLowerCase().match(searchTerm.toLowerCase())\n            || d.name.toLowerCase().match(searchTerm.toLowerCase())\n          );\n        }}\n        withPagination={true}\n        paginationType=\"basic\"\n        pageSize={4}\n        onPageChange={newPage => console.log(`on-page-change:- ${newPage}`)}\n      />\n    </Card>\n  );\n};\n\n    "
    ]
  },
  "Table Select All Rows": {
    "prefix": "Table Select All Rows",
    "description": "Select All Rows",
    "body": [
      "import { Icon, GridCell, Card, Table } from '@innovaccer/design-system';\n    \n() => {\n  const translateData = (schema, data) => {\n    let newData = data;\n\n    if (schema.translate) {\n      const translatedData = schema.translate(data);\n      newData = {\n        ...newData,\n        [schema.name]: typeof translatedData === 'object' ? {\n          ...newData[schema.name],\n          ...translatedData\n        } : translatedData\n      };\n    }\n    if (typeof newData[schema.name] !== 'object') newData[schema.name] = { title: newData[schema.name] };\n\n    return newData;\n  }\n\n  const filterData = (schema, data, filterList) => {\n    let filteredData = data;\n    if (filterList) {\n      Object.keys(filterList).forEach(schemaName => {\n        const filters = filterList[schemaName];\n        const sIndex = schema.findIndex(s => s.name === schemaName);\n        const { onFilterChange } = schema[sIndex];\n        if (filters.length && onFilterChange) {\n          filteredData = filteredData.filter(d => onFilterChange(d, filters));\n        }\n      });\n    }\n\n    return filteredData;\n  };\n\n  const sortData = (schema, data, sortingList) => {\n    const sortedData = [...data];\n    sortingList.forEach(l => {\n      const sIndex = schema.findIndex(s => s.name === l.name);\n      if (sIndex !== -1) {\n        const defaultComparator = (a, b) => {\n          const aData = translateData(schema[sIndex], a);\n          const bData = translateData(schema[sIndex], b);\n          return aData[l.name].title.localeCompare(bData[l.name].title);\n        };\n\n        const {\n          comparator = defaultComparator\n        } = schema[sIndex];\n\n        sortedData.sort(comparator);\n        if (l.type === 'desc') sortedData.reverse();\n      }\n    });\n\n    return sortedData;\n  };\n\n  const paginateData = (data, page, pageSize) => {\n    const start = (page - 1) * pageSize;\n    const end = start + pageSize;\n    const paginatedData = data.slice(start, end);\n    return paginatedData;\n  };\n\n  const data = [\n    {\n        \"firstName\": \"Brooke\",\n        \"lastName\": \"Heeran\",\n        \"email\": \"bheeran0@altervista.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Frazer\",\n        \"lastName\": \"Cathro\",\n        \"email\": \"fcathro1@ucla.edu\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lemmie\",\n        \"lastName\": \"Ciric\",\n        \"email\": {\n            \"title\": \"lciric2@dmoz.org\",\n            \"metaList\": [\n                \"First\",\n                \"Second\"\n            ]\n        },\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Randy\",\n        \"lastName\": \"Boatwright\",\n        \"email\": \"rboatwright3@arstechnica.com\",\n        \"status\": \"Completed\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rolando\",\n        \"lastName\": \"Cyples\",\n        \"email\": \"rcyples4@biglobe.ne.jp\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lem\",\n        \"lastName\": \"Males\",\n        \"email\": \"lmales5@admin.ch\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Sayres\",\n        \"lastName\": \"Adelberg\",\n        \"email\": \"sadelberg6@uol.com.br\",\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Murray\",\n        \"lastName\": \"Bravington\",\n        \"email\": \"mbravington7@drupal.org\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Jena\",\n        \"lastName\": \"Swatheridge\",\n        \"email\": \"jswatheridge8@npr.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Annabel\",\n        \"lastName\": \"Nelsey\",\n        \"email\": \"anelsey9@google.com\",\n        \"gender\": \"Female\",\n        \"status\": \"Completed\"\n    }\n];\n\n  const schema = [\n    {\n      name: 'name',\n      displayName: 'Name',\n      width: 300,\n      resizable: true,\n      separator: true,\n      tooltip: true,\n      translate: a => ({\n        title: `${a.firstName} ${a.lastName}`,\n        firstName: a.firstName,\n        lastName: a.lastName\n      }),\n      filters: [\n        { label: 'A-G', value: 'a-g' },\n        { label: 'H-R', value: 'h-r' },\n        { label: 'S-Z', value: 's-z' },\n      ],\n      onFilterChange: (a, filters) => {\n        for (const filter of filters) {\n          switch (filter) {\n            case 'a-g':\n              if (a.firstName[0].toLowerCase() >= 'a' && a.firstName[0].toLowerCase() <= 'g') return true;\n              break;\n            case 'h-r':\n              if (a.firstName[0].toLowerCase() >= 'h' && a.firstName[0].toLowerCase() <= 'r') return true;\n              break;\n            case 's-z':\n              if (a.firstName[0].toLowerCase() >= 's' && a.firstName[0].toLowerCase() <= 'z') return true;\n              break;\n          }\n        }\n        return false;\n      },\n      cellType: 'AVATAR_WITH_TEXT',\n    },\n    {\n      name: 'email',\n      displayName: 'Email',\n      width: 350,\n      resizable: true,\n      sorting: false,\n      cellType: 'WITH_META_LIST'\n    },\n    {\n      name: 'gender',\n      displayName: 'Gender',\n      width: 200,\n      resizable: true,\n      comparator: (a, b) => a.gender.localeCompare(b.gender),\n      cellType: 'STATUS_HINT',\n      translate: a => ({\n        title: a.gender,\n        statusAppearance: (a.gender === 'Female') ? 'alert' : 'success'\n      }),\n      filters: [\n        { label: 'Male', value: 'male' },\n        { label: 'Female', value: 'female' },\n      ],\n      onFilterChange: (a, filters) => {\n        for (const filter of filters) {\n          if (a.gender.toLowerCase() === filter) return true;\n        }\n        return false;\n      },\n    },\n    {\n      name: 'icon',\n      displayName: 'Icon',\n      width: 100,\n      resizable: true,\n      align: 'center',\n      cellType: 'ICON',\n      sorting: false,\n      translate: _ => ({\n        icon: 'events'\n      })\n    },\n    {\n      name: 'customCell',\n      displayName: 'Custom Cell',\n      width: 200,\n      resizable: true,\n      cellType: 'WITH_META_LIST',\n      sorting: false,\n      cellRenderer: props => {\n        return (\n          <>\n            <Icon className=\"mr-5\" name=\"events\" />\n            <GridCell\n              {...props}\n              schema={{\n                ...props.schema,\n                name: 'email'\n              }}\n            />\n          </>\n        );\n      }\n    },\n  ];\n\n  const fetchData = (options) => {\n    const {\n      page,\n      pageSize,\n      sortingList,\n      filterList,\n      searchTerm\n    } = options;\n\n    const onSearch = (d, searchTerm = '') => {\n      return (\n        d.firstName.toLowerCase().match(searchTerm.toLowerCase())\n        || d.lastName.toLowerCase().match(searchTerm.toLowerCase())\n      );\n\n      return true;\n    }\n\n    const filteredData = filterData(schema, data, filterList);\n    const searchedData = filteredData.filter(d => onSearch(d, searchTerm));\n    const sortedData = sortData(schema, searchedData, sortingList);\n\n    if (page && pageSize) {\n      return new Promise(resolve => {\n        window.setTimeout(() => {\n          const start = (page - 1) * pageSize;\n          const end = start + pageSize;\n          const slicedData = sortedData.slice(start, end);\n          resolve({\n            searchTerm,\n            schema,\n            count: sortedData.length,\n            data: slicedData,\n          });\n        }, 2000);\n      });\n    }\n\n    return new Promise(resolve => {\n      window.setTimeout(() => {\n        resolve({\n          searchTerm,\n          schema,\n          count: sortedData.length,\n          data: sortedData,\n        });\n      }, 2000);\n    });\n  }\n\n  const loaderSchema = [\n    {\n        \"name\": \"name\",\n        \"displayName\": \"Name\",\n        \"width\": \"40%\",\n        \"resizable\": true,\n        \"tooltip\": true,\n        \"separator\": true,\n        \"filters\": [\n            {\n                \"label\": \"A-G\",\n                \"value\": \"a-g\"\n            },\n            {\n                \"label\": \"H-R\",\n                \"value\": \"h-r\"\n            },\n            {\n                \"label\": \"S-Z\",\n                \"value\": \"s-z\"\n            }\n        ],\n        \"cellType\": \"AVATAR_WITH_TEXT\"\n    },\n    {\n        \"name\": \"email\",\n        \"displayName\": \"Email\",\n        \"width\": 250,\n        \"resizable\": true,\n        \"sorting\": false,\n        \"cellType\": \"WITH_META_LIST\"\n    },\n    {\n        \"name\": \"gender\",\n        \"displayName\": \"Gender\",\n        \"width\": 180,\n        \"resizable\": true,\n        \"cellType\": \"STATUS_HINT\",\n        \"filters\": [\n            {\n                \"label\": \"Male\",\n                \"value\": \"male\"\n            },\n            {\n                \"label\": \"Female\",\n                \"value\": \"female\"\n            }\n        ]\n    },\n    {\n        \"name\": \"icon\",\n        \"displayName\": \"Icon\",\n        \"width\": 100,\n        \"resizable\": true,\n        \"align\": \"center\",\n        \"cellType\": \"ICON\"\n    },\n    {\n        \"name\": \"customCell\",\n        \"displayName\": \"Custom Cell\",\n        \"width\": 200,\n        \"resizable\": true,\n        \"cellType\": \"WITH_META_LIST\"\n    }\n];\n\n  return (\n    <div>\n      <Card className=\"h-100 overflow-hidden\">\n        <Table\n          loaderSchema={loaderSchema}\n          fetchData={fetchData}\n          withHeader={true}\n          headerOptions={{\n            withSearch: true,\n            allowSelectAll: true,\n            customSelectionLabel: 'user',\n          }}\n          withCheckbox={true}\n          onSelect={(rowIndex, selected, selectedList, selectAll) => console.log(`on-select: - rowIndex: ${ rowIndex } selected: ${ selected } selectedList: ${ JSON.stringify(selectedList) } selectAll: ${ selectAll } `)}\n          withPagination={true}\n          pageSize={5}\n          onPageChange={newPage => console.log(`on-page-change:- ${newPage}`)}\n        />\n      </Card>\n    </div>\n  );\n};\n\n    "
    ]
  },
  "Table Selection": {
    "prefix": "Table Selection",
    "description": "Selection",
    "body": [
      "import { Card, Table } from '@innovaccer/design-system';\n    \n() => {\n  const data = [\n    {\n        \"firstName\": \"Brooke\",\n        \"lastName\": \"Heeran\",\n        \"email\": \"bheeran0@altervista.org\",\n        \"role\": \"Administrator\",\n        \"manager\": \"Seb Grant\",\n        \"last_login\": \"May 5\",\n        \"status\": \"Active\"\n    },\n    {\n        \"firstName\": \"Frazer\",\n        \"lastName\": \"Cathro\",\n        \"email\": \"fcathro1@ucla.edu\",\n        \"role\": \"Healthcoaches\",\n        \"manager\": \"Mike Page\",\n        \"last_login\": \"May 4\",\n        \"status\": \"Active\"\n    },\n    {\n        \"firstName\": \"Lemmie\",\n        \"lastName\": \"Ciric\",\n        \"email\": {\n            \"title\": \"lciric2@dmoz.org\",\n            \"metaList\": [\n                \"First\",\n                \"Second\"\n            ]\n        },\n        \"role\": \"Administrator\",\n        \"manager\": \"Seb Grant\",\n        \"last_login\": \"April 5\",\n        \"status\": \"Inactive\"\n    },\n    {\n        \"firstName\": \"Randy\",\n        \"lastName\": \"Boatwright\",\n        \"email\": \"rboatwright3@arstechnica.com\",\n        \"role\": \"Healthcoaches\",\n        \"manager\": \"William Estrada\",\n        \"last_login\": \"March 5\",\n        \"status\": \"Active\"\n    },\n    {\n        \"firstName\": \"Rolando\",\n        \"lastName\": \"Cyples\",\n        \"email\": \"rcyples4@biglobe.ne.jp\",\n        \"role\": \"Administrator\",\n        \"manager\": \"Seb Grant\",\n        \"last_login\": \"May 10\",\n        \"status\": \"Inactive\"\n    },\n    {\n        \"firstName\": \"Lem\",\n        \"lastName\": \"Males\",\n        \"email\": \"lmales5@admin.ch\",\n        \"role\": \"PCP Staff\",\n        \"manager\": \"Seb Grant\",\n        \"last_login\": \"June 5\",\n        \"status\": \"Inactive\"\n    },\n    {\n        \"firstName\": \"Sayres\",\n        \"lastName\": \"Adelberg\",\n        \"email\": \"sadelberg6@uol.com.br\",\n        \"role\": \"Leadership\",\n        \"manager\": \"William Estrada\",\n        \"last_login\": \"May 5\",\n        \"status\": \"Active\"\n    },\n    {\n        \"firstName\": \"Murray\",\n        \"lastName\": \"Bravington\",\n        \"email\": \"mbravington7@drupal.org\",\n        \"role\": \"Healthcoaches\",\n        \"manager\": \"William Estrada\",\n        \"last_login\": \"May 9\",\n        \"status\": \"Active\"\n    },\n    {\n        \"firstName\": \"Jena\",\n        \"lastName\": \"Swatheridge\",\n        \"email\": \"jswatheridge8@npr.org\",\n        \"role\": \"Leadership\",\n        \"manager\": \"Mike Page\",\n        \"last_login\": \"Jan 5\",\n        \"status\": \"Active\"\n    },\n    {\n        \"firstName\": \"Annabel\",\n        \"lastName\": \"Nelsey\",\n        \"email\": \"anelsey9@google.com\",\n        \"role\": \"Healthcoaches\",\n        \"manager\": \"Mike Page\",\n        \"last_login\": \"April 27\",\n        \"status\": \"Inactive\"\n    }\n];\n\n  const schema = [\n    {\n      name: 'name',\n      displayName: 'Name',\n      width: '30%',\n      separator: true,\n      translate: a => ({\n        title: `${a.lastName}, ${a.firstName}`,\n        firstName: a.firstName,\n        lastName: a.lastName\n      }),\n      cellType: 'AVATAR_WITH_TEXT',\n      sorting: false\n    },\n    {\n      name: 'role',\n      displayName: 'Role',\n      width: 250,\n      sorting: false\n    },\n    {\n      name: 'manager',\n      displayName: 'Manager',\n      width: 180,\n      sorting: false\n    },\n    {\n      name: 'last_login',\n      displayName: 'Last Login',\n      width: 100,\n      sorting: false\n    },\n    {\n      name: 'status',\n      displayName: 'Status',\n      width: 200,\n      cellType: 'STATUS_HINT',\n      sorting: false,\n      translate: a => ({\n        title: a.status,\n        statusAppearance: (a.status === 'Inactive') ? 'default' : 'success'\n      }),\n    },\n  ];\n  return (\n      <Card>\n        <Table\n          type=\"resource\"\n          data={data}\n          schema={schema}\n          showMenu={false}\n          withHeader={true}\n          withCheckbox={true}\n          onSelect={(rowIndex, selected, selectedList, selectAll) =>\n            console.log(`on-select:- rowIndex: ${rowIndex} selected: ${selected} selectedList: ${JSON.stringify(selectedList)} selectAll: ${selectAll}`)\n          }\n          headerOptions={{\n            withSearch: true\n          }}\n          onSearch={(currData, searchTerm) => {\n            return currData.filter(d =>\n              d.firstName.toLowerCase().match(searchTerm.toLowerCase())\n              || d.lastName.toLowerCase().match(searchTerm.toLowerCase())\n            );\n          }}\n          withPagination={true}\n          pageSize={5}\n          onPageChange={newPage => console.log(`on-page-change:- ${newPage}`)}\n        />\n      </Card>\n  );\n};\n\n    "
    ]
  },
  "Standard Table": {
    "prefix": "Standard Table",
    "description": "With Header",
    "body": [
      "import { Icon, GridCell, Card, Table } from '@innovaccer/design-system';\n    \n() => {\n  const data = [\n    {\n        \"firstName\": \"Brooke\",\n        \"lastName\": \"Heeran\",\n        \"email\": \"bheeran0@altervista.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Frazer\",\n        \"lastName\": \"Cathro\",\n        \"email\": \"fcathro1@ucla.edu\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lemmie\",\n        \"lastName\": \"Ciric\",\n        \"email\": {\n            \"title\": \"lciric2@dmoz.org\",\n            \"metaList\": [\n                \"First\",\n                \"Second\"\n            ]\n        },\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Randy\",\n        \"lastName\": \"Boatwright\",\n        \"email\": \"rboatwright3@arstechnica.com\",\n        \"status\": \"Completed\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rolando\",\n        \"lastName\": \"Cyples\",\n        \"email\": \"rcyples4@biglobe.ne.jp\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lem\",\n        \"lastName\": \"Males\",\n        \"email\": \"lmales5@admin.ch\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Sayres\",\n        \"lastName\": \"Adelberg\",\n        \"email\": \"sadelberg6@uol.com.br\",\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Murray\",\n        \"lastName\": \"Bravington\",\n        \"email\": \"mbravington7@drupal.org\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Jena\",\n        \"lastName\": \"Swatheridge\",\n        \"email\": \"jswatheridge8@npr.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Annabel\",\n        \"lastName\": \"Nelsey\",\n        \"email\": \"anelsey9@google.com\",\n        \"gender\": \"Female\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Carin\",\n        \"lastName\": \"Robiou\",\n        \"email\": \"crobioua@skype.com\",\n        \"gender\": \"Female\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Anson\",\n        \"lastName\": \"Gamon\",\n        \"email\": \"agamonb@economist.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Brina\",\n        \"lastName\": \"Pirie\",\n        \"email\": \"bpiriec@stumbleupon.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Hermy\",\n        \"lastName\": \"Dyett\",\n        \"email\": \"hdyettd@boston.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Aime\",\n        \"lastName\": \"von Hagt\",\n        \"email\": \"avonhagte@nyu.edu\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Gusti\",\n        \"lastName\": \"Haycock\",\n        \"email\": \"ghaycockf@virginia.edu\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Mortimer\",\n        \"lastName\": \"Kunneke\",\n        \"email\": \"mkunnekeg@weather.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Barnie\",\n        \"lastName\": \"Pohls\",\n        \"email\": \"bpohlsh@columbia.edu\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Elliot\",\n        \"lastName\": \"Nealey\",\n        \"email\": \"enealeyi@cocolog-nifty.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Allsun\",\n        \"lastName\": \"Gong\",\n        \"email\": \"agongj@discuz.net\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Harwell\",\n        \"lastName\": \"Kegan\",\n        \"email\": \"hkegank@domainmarket.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Gilles\",\n        \"lastName\": \"Sandell\",\n        \"email\": \"gsandelll@apache.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Hilliard\",\n        \"lastName\": \"Beamish\",\n        \"email\": \"hbeamishm@shop-pro.jp\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Charley\",\n        \"lastName\": \"Kuschek\",\n        \"email\": \"ckuschekn@dropbox.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Danny\",\n        \"lastName\": \"Churchin\",\n        \"email\": \"dchurchino@bbc.co.uk\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Ervin\",\n        \"lastName\": \"Chatelain\",\n        \"email\": \"echatelainp@mac.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Milli\",\n        \"lastName\": \"Joseph\",\n        \"email\": \"mjosephq@merriam-webster.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Greer\",\n        \"lastName\": \"O'Doherty\",\n        \"email\": \"godohertyr@homestead.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Haroun\",\n        \"lastName\": \"Martensen\",\n        \"email\": \"hmartensens@skype.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Desiree\",\n        \"lastName\": \"Colwell\",\n        \"email\": \"dcolwellt@businessinsider.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Almeda\",\n        \"lastName\": \"Jowsey\",\n        \"email\": \"ajowseyu@ask.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Cinderella\",\n        \"lastName\": \"Dunnet\",\n        \"email\": \"cdunnetv@mac.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Hubert\",\n        \"lastName\": \"Legion\",\n        \"email\": \"hlegionw@ameblo.jp\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Costa\",\n        \"lastName\": \"Adamovsky\",\n        \"email\": \"cadamovskyx@joomla.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Kristan\",\n        \"lastName\": \"Bielfeld\",\n        \"email\": \"kbielfeldy@live.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Sammy\",\n        \"lastName\": \"Shermore\",\n        \"email\": \"sshermorez@washington.edu\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Kathi\",\n        \"lastName\": \"Dowyer\",\n        \"email\": \"kdowyer10@bluehost.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Kennith\",\n        \"lastName\": \"Whitehouse\",\n        \"email\": \"kwhitehouse11@cornell.edu\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Brianna\",\n        \"lastName\": \"Garland\",\n        \"email\": \"bgarland12@wikipedia.org\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Cristobal\",\n        \"lastName\": \"Mapholm\",\n        \"email\": \"cmapholm13@constantcontact.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Zia\",\n        \"lastName\": \"Harrowing\",\n        \"email\": \"zharrowing14@huffingtonpost.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Zabrina\",\n        \"lastName\": \"Gravener\",\n        \"email\": \"zgravener15@ameblo.jp\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Gregoor\",\n        \"lastName\": \"Cruz\",\n        \"email\": \"gcruz16@uol.com.br\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Julita\",\n        \"lastName\": \"Gemeau\",\n        \"email\": \"jgemeau17@bandcamp.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Gilbert\",\n        \"lastName\": \"Sallier\",\n        \"email\": \"gsallier18@dailymail.co.uk\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Bride\",\n        \"lastName\": \"Boniface\",\n        \"email\": \"bboniface19@howstuffworks.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Rodolph\",\n        \"lastName\": \"Mattussevich\",\n        \"email\": \"rmattussevich1a@nymag.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rowan\",\n        \"lastName\": \"Rizon\",\n        \"email\": \"rrizon1b@thetimes.co.uk\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Avie\",\n        \"lastName\": \"Nicolls\",\n        \"email\": \"anicolls1c@nbcnews.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Bram\",\n        \"lastName\": \"Kleinhaut\",\n        \"email\": \"bkleinhaut1d@imdb.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Carmita\",\n        \"lastName\": \"Costin\",\n        \"email\": \"ccostin1e@hibu.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Wash\",\n        \"lastName\": \"Vannuchi\",\n        \"email\": \"wvannuchi1f@japanpost.jp\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Nikki\",\n        \"lastName\": \"Faye\",\n        \"email\": \"nfaye1g@feedburner.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Aron\",\n        \"lastName\": \"Scimonelli\",\n        \"email\": \"ascimonelli1h@nationalgeographic.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Smitty\",\n        \"lastName\": \"Giacomello\",\n        \"email\": \"sgiacomello1i@google.co.uk\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Staci\",\n        \"lastName\": \"D'Elias\",\n        \"email\": \"sdelias1j@paginegialle.it\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Radcliffe\",\n        \"lastName\": \"Garbutt\",\n        \"email\": \"rgarbutt1k@thetimes.co.uk\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Maxwell\",\n        \"lastName\": \"Krikorian\",\n        \"email\": \"mkrikorian1l@ask.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Dunstan\",\n        \"lastName\": \"Chansonne\",\n        \"email\": \"dchansonne1m@posterous.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Isaak\",\n        \"lastName\": \"Faherty\",\n        \"email\": \"ifaherty1n@who.int\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Sawyere\",\n        \"lastName\": \"Ede\",\n        \"email\": \"sede1o@drupal.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Perren\",\n        \"lastName\": \"Daddow\",\n        \"email\": \"pdaddow1p@indiegogo.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Brendis\",\n        \"lastName\": \"Napier\",\n        \"email\": \"bnapier1q@multiply.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Francene\",\n        \"lastName\": \"Godbold\",\n        \"email\": \"fgodbold1r@joomla.org\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Moll\",\n        \"lastName\": \"Fludgate\",\n        \"email\": \"mfludgate1s@who.int\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Allayne\",\n        \"lastName\": \"Medhurst\",\n        \"email\": \"amedhurst1t@is.gd\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Genvieve\",\n        \"lastName\": \"Mellows\",\n        \"email\": \"gmellows1u@stumbleupon.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Rebe\",\n        \"lastName\": \"Durnford\",\n        \"email\": \"rdurnford1v@biglobe.ne.jp\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Thalia\",\n        \"lastName\": \"Joerning\",\n        \"email\": \"tjoerning1w@netscape.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Beckie\",\n        \"lastName\": \"Lammin\",\n        \"email\": \"blammin1x@gnu.org\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Kassandra\",\n        \"lastName\": \"Furney\",\n        \"email\": \"kfurney1y@surveymonkey.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Libbie\",\n        \"lastName\": \"Gladyer\",\n        \"email\": \"lgladyer1z@dropbox.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Kai\",\n        \"lastName\": \"Goldsbury\",\n        \"email\": \"kgoldsbury20@census.gov\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Arielle\",\n        \"lastName\": \"De Bell\",\n        \"email\": \"adebell21@addthis.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Ellary\",\n        \"lastName\": \"Warnock\",\n        \"email\": \"ewarnock22@ted.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Skelly\",\n        \"lastName\": \"Blakes\",\n        \"email\": \"sblakes23@reddit.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Roanne\",\n        \"lastName\": \"Stanyforth\",\n        \"email\": \"rstanyforth24@com.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Cash\",\n        \"lastName\": \"Fettis\",\n        \"email\": \"cfettis25@go.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Farleigh\",\n        \"lastName\": \"McDavid\",\n        \"email\": \"fmcdavid26@sbwire.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Holly\",\n        \"lastName\": \"Barfford\",\n        \"email\": \"hbarfford27@wsj.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Hurley\",\n        \"lastName\": \"Benaine\",\n        \"email\": \"hbenaine28@sun.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Maryjo\",\n        \"lastName\": \"Gilhooly\",\n        \"email\": \"mgilhooly29@tripod.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Annis\",\n        \"lastName\": \"Linkie\",\n        \"email\": \"alinkie2a@wp.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Mariel\",\n        \"lastName\": \"Husher\",\n        \"email\": \"mhusher2b@etsy.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Niels\",\n        \"lastName\": \"Klimontovich\",\n        \"email\": \"nklimontovich2c@surveymonkey.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Udall\",\n        \"lastName\": \"Linfitt\",\n        \"email\": \"ulinfitt2d@toplist.cz\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Isidore\",\n        \"lastName\": \"Kuhn\",\n        \"email\": \"ikuhn2e@cdc.gov\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rosemonde\",\n        \"lastName\": \"Kettle\",\n        \"email\": \"rkettle2f@techcrunch.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Cass\",\n        \"lastName\": \"Boot\",\n        \"email\": \"cboot2g@furl.net\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Montague\",\n        \"lastName\": \"Rossey\",\n        \"email\": \"mrossey2h@goo.gl\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Geno\",\n        \"lastName\": \"Jenkyn\",\n        \"email\": \"gjenkyn2i@opensource.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Esdras\",\n        \"lastName\": \"Skivington\",\n        \"email\": \"eskivington2j@answers.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Gabriello\",\n        \"lastName\": \"Luce\",\n        \"email\": \"gluce2k@nydailynews.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Magdalene\",\n        \"lastName\": \"Ilyunin\",\n        \"email\": \"milyunin2l@prweb.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Isidro\",\n        \"lastName\": \"Fawson\",\n        \"email\": \"ifawson2m@squidoo.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Blinny\",\n        \"lastName\": \"Palfrey\",\n        \"email\": \"bpalfrey2n@networksolutions.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Justen\",\n        \"lastName\": \"Kordas\",\n        \"email\": \"jkordas2o@symantec.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Damien\",\n        \"lastName\": \"Hallede\",\n        \"email\": \"dhallede2p@unicef.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Jaquelyn\",\n        \"lastName\": \"Rockhall\",\n        \"email\": \"jrockhall2q@vkontakte.ru\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Garrek\",\n        \"lastName\": \"Matignon\",\n        \"email\": \"gmatignon2r@noaa.gov\",\n        \"gender\": \"Male\"\n    }\n];\n\n  const schema = [\n    {\n      name: 'name',\n      displayName: 'Name',\n      width: 300,\n      resizable: true,\n      separator: true,\n      tooltip: true,\n      translate: a => ({\n        title: `${a.firstName} ${a.lastName}`,\n        firstName: a.firstName,\n        lastName: a.lastName\n      }),\n      filters: [\n        { label: 'A-G', value: 'a-g' },\n        { label: 'H-R', value: 'h-r' },\n        { label: 'S-Z', value: 's-z' },\n      ],\n      onFilterChange: (a, filters) => {\n        for (const filter of filters) {\n          switch (filter) {\n            case 'a-g':\n              if (a.firstName[0].toLowerCase() >= 'a' && a.firstName[0].toLowerCase() <= 'g') return true;\n              break;\n            case 'h-r':\n              if (a.firstName[0].toLowerCase() >= 'h' && a.firstName[0].toLowerCase() <= 'r') return true;\n              break;\n            case 's-z':\n              if (a.firstName[0].toLowerCase() >= 's' && a.firstName[0].toLowerCase() <= 'z') return true;\n              break;\n          }\n        }\n        return false;\n      },\n      cellType: 'AVATAR_WITH_TEXT',\n    },\n    {\n      name: 'email',\n      displayName: 'Email',\n      width: 350,\n      resizable: true,\n      sorting: false,\n      cellType: 'WITH_META_LIST'\n    },\n    {\n      name: 'gender',\n      displayName: 'Gender',\n      width: 200,\n      resizable: true,\n      comparator: (a, b) => a.gender.localeCompare(b.gender),\n      cellType: 'STATUS_HINT',\n      translate: a => ({\n        title: a.gender,\n        statusAppearance: (a.gender === 'Female') ? 'alert' : 'success'\n      }),\n      filters: [\n        { label: 'Male', value: 'male' },\n        { label: 'Female', value: 'female' },\n      ],\n      onFilterChange: (a, filters) => {\n        for (const filter of filters) {\n          if (a.gender.toLowerCase() === filter) return true;\n        }\n        return false;\n      },\n    },\n    {\n      name: 'icon',\n      displayName: 'Icon',\n      width: 100,\n      resizable: true,\n      align: 'center',\n      cellType: 'ICON',\n      translate: _ => ({\n        icon: 'events'\n      })\n    },\n    {\n      name: 'customCell',\n      displayName: 'Custom Cell',\n      width: 200,\n      resizable: true,\n      cellType: 'WITH_META_LIST',\n      cellRenderer: props => {\n        return (\n          <>\n            <Icon className=\"mr-5\" name=\"events\" />\n            <GridCell\n              {...props}\n              schema={{\n                ...props.schema,\n                name: 'email'\n              }}\n            />\n          </>\n        );\n      }\n    },\n  ];\n\n  return (\n    <div\n      style={{\n        height: '450px',\n      }}\n    >\n      <Card shadow=\"light\" className=\"h-100\">\n        <Table\n          data={data}\n          schema={schema}\n          withHeader={true}\n          withCheckbox={true}\n          showHead={false}\n          draggable={true}\n          onSelect={function(){}}\n          withPagination={true}\n          pageSize={15}\n          onPageChange={function(){}}\n          headerOptions={{\n            withSearch: true,\n          }}\n        />\n      </Card>\n    </div>\n  );\n};\n\n    "
    ]
  },
  "Table Sync Table": {
    "prefix": "Table Sync Table",
    "description": "Sync Table",
    "body": [
      "import { Icon, GridCell, Card, Table } from '@innovaccer/design-system';\n    \n() => {\n  const data = [\n    {\n        \"firstName\": \"Brooke\",\n        \"lastName\": \"Heeran\",\n        \"email\": \"bheeran0@altervista.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Frazer\",\n        \"lastName\": \"Cathro\",\n        \"email\": \"fcathro1@ucla.edu\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lemmie\",\n        \"lastName\": \"Ciric\",\n        \"email\": {\n            \"title\": \"lciric2@dmoz.org\",\n            \"metaList\": [\n                \"First\",\n                \"Second\"\n            ]\n        },\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Randy\",\n        \"lastName\": \"Boatwright\",\n        \"email\": \"rboatwright3@arstechnica.com\",\n        \"status\": \"Completed\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rolando\",\n        \"lastName\": \"Cyples\",\n        \"email\": \"rcyples4@biglobe.ne.jp\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lem\",\n        \"lastName\": \"Males\",\n        \"email\": \"lmales5@admin.ch\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Sayres\",\n        \"lastName\": \"Adelberg\",\n        \"email\": \"sadelberg6@uol.com.br\",\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Murray\",\n        \"lastName\": \"Bravington\",\n        \"email\": \"mbravington7@drupal.org\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Jena\",\n        \"lastName\": \"Swatheridge\",\n        \"email\": \"jswatheridge8@npr.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Annabel\",\n        \"lastName\": \"Nelsey\",\n        \"email\": \"anelsey9@google.com\",\n        \"gender\": \"Female\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Brooke\",\n        \"lastName\": \"Heeran\",\n        \"email\": \"bheeran0@altervista.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Frazer\",\n        \"lastName\": \"Cathro\",\n        \"email\": \"fcathro1@ucla.edu\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lemmie\",\n        \"lastName\": \"Ciric\",\n        \"email\": {\n            \"title\": \"lciric2@dmoz.org\",\n            \"metaList\": [\n                \"First\",\n                \"Second\"\n            ]\n        },\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Randy\",\n        \"lastName\": \"Boatwright\",\n        \"email\": \"rboatwright3@arstechnica.com\",\n        \"status\": \"Completed\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rolando\",\n        \"lastName\": \"Cyples\",\n        \"email\": \"rcyples4@biglobe.ne.jp\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lem\",\n        \"lastName\": \"Males\",\n        \"email\": \"lmales5@admin.ch\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Sayres\",\n        \"lastName\": \"Adelberg\",\n        \"email\": \"sadelberg6@uol.com.br\",\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Murray\",\n        \"lastName\": \"Bravington\",\n        \"email\": \"mbravington7@drupal.org\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Jena\",\n        \"lastName\": \"Swatheridge\",\n        \"email\": \"jswatheridge8@npr.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Annabel\",\n        \"lastName\": \"Nelsey\",\n        \"email\": \"anelsey9@google.com\",\n        \"gender\": \"Female\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Brooke\",\n        \"lastName\": \"Heeran\",\n        \"email\": \"bheeran0@altervista.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Frazer\",\n        \"lastName\": \"Cathro\",\n        \"email\": \"fcathro1@ucla.edu\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lemmie\",\n        \"lastName\": \"Ciric\",\n        \"email\": {\n            \"title\": \"lciric2@dmoz.org\",\n            \"metaList\": [\n                \"First\",\n                \"Second\"\n            ]\n        },\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Randy\",\n        \"lastName\": \"Boatwright\",\n        \"email\": \"rboatwright3@arstechnica.com\",\n        \"status\": \"Completed\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rolando\",\n        \"lastName\": \"Cyples\",\n        \"email\": \"rcyples4@biglobe.ne.jp\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lem\",\n        \"lastName\": \"Males\",\n        \"email\": \"lmales5@admin.ch\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Sayres\",\n        \"lastName\": \"Adelberg\",\n        \"email\": \"sadelberg6@uol.com.br\",\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Murray\",\n        \"lastName\": \"Bravington\",\n        \"email\": \"mbravington7@drupal.org\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Jena\",\n        \"lastName\": \"Swatheridge\",\n        \"email\": \"jswatheridge8@npr.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Annabel\",\n        \"lastName\": \"Nelsey\",\n        \"email\": \"anelsey9@google.com\",\n        \"gender\": \"Female\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Brooke\",\n        \"lastName\": \"Heeran\",\n        \"email\": \"bheeran0@altervista.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Frazer\",\n        \"lastName\": \"Cathro\",\n        \"email\": \"fcathro1@ucla.edu\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lemmie\",\n        \"lastName\": \"Ciric\",\n        \"email\": {\n            \"title\": \"lciric2@dmoz.org\",\n            \"metaList\": [\n                \"First\",\n                \"Second\"\n            ]\n        },\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Randy\",\n        \"lastName\": \"Boatwright\",\n        \"email\": \"rboatwright3@arstechnica.com\",\n        \"status\": \"Completed\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rolando\",\n        \"lastName\": \"Cyples\",\n        \"email\": \"rcyples4@biglobe.ne.jp\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lem\",\n        \"lastName\": \"Males\",\n        \"email\": \"lmales5@admin.ch\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Sayres\",\n        \"lastName\": \"Adelberg\",\n        \"email\": \"sadelberg6@uol.com.br\",\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Murray\",\n        \"lastName\": \"Bravington\",\n        \"email\": \"mbravington7@drupal.org\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Jena\",\n        \"lastName\": \"Swatheridge\",\n        \"email\": \"jswatheridge8@npr.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Annabel\",\n        \"lastName\": \"Nelsey\",\n        \"email\": \"anelsey9@google.com\",\n        \"gender\": \"Female\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Brooke\",\n        \"lastName\": \"Heeran\",\n        \"email\": \"bheeran0@altervista.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Frazer\",\n        \"lastName\": \"Cathro\",\n        \"email\": \"fcathro1@ucla.edu\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lemmie\",\n        \"lastName\": \"Ciric\",\n        \"email\": {\n            \"title\": \"lciric2@dmoz.org\",\n            \"metaList\": [\n                \"First\",\n                \"Second\"\n            ]\n        },\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Randy\",\n        \"lastName\": \"Boatwright\",\n        \"email\": \"rboatwright3@arstechnica.com\",\n        \"status\": \"Completed\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rolando\",\n        \"lastName\": \"Cyples\",\n        \"email\": \"rcyples4@biglobe.ne.jp\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lem\",\n        \"lastName\": \"Males\",\n        \"email\": \"lmales5@admin.ch\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Sayres\",\n        \"lastName\": \"Adelberg\",\n        \"email\": \"sadelberg6@uol.com.br\",\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Murray\",\n        \"lastName\": \"Bravington\",\n        \"email\": \"mbravington7@drupal.org\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Jena\",\n        \"lastName\": \"Swatheridge\",\n        \"email\": \"jswatheridge8@npr.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Annabel\",\n        \"lastName\": \"Nelsey\",\n        \"email\": \"anelsey9@google.com\",\n        \"gender\": \"Female\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Brooke\",\n        \"lastName\": \"Heeran\",\n        \"email\": \"bheeran0@altervista.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Frazer\",\n        \"lastName\": \"Cathro\",\n        \"email\": \"fcathro1@ucla.edu\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lemmie\",\n        \"lastName\": \"Ciric\",\n        \"email\": {\n            \"title\": \"lciric2@dmoz.org\",\n            \"metaList\": [\n                \"First\",\n                \"Second\"\n            ]\n        },\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Randy\",\n        \"lastName\": \"Boatwright\",\n        \"email\": \"rboatwright3@arstechnica.com\",\n        \"status\": \"Completed\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rolando\",\n        \"lastName\": \"Cyples\",\n        \"email\": \"rcyples4@biglobe.ne.jp\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lem\",\n        \"lastName\": \"Males\",\n        \"email\": \"lmales5@admin.ch\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Sayres\",\n        \"lastName\": \"Adelberg\",\n        \"email\": \"sadelberg6@uol.com.br\",\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Murray\",\n        \"lastName\": \"Bravington\",\n        \"email\": \"mbravington7@drupal.org\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Jena\",\n        \"lastName\": \"Swatheridge\",\n        \"email\": \"jswatheridge8@npr.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Annabel\",\n        \"lastName\": \"Nelsey\",\n        \"email\": \"anelsey9@google.com\",\n        \"gender\": \"Female\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Brooke\",\n        \"lastName\": \"Heeran\",\n        \"email\": \"bheeran0@altervista.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Frazer\",\n        \"lastName\": \"Cathro\",\n        \"email\": \"fcathro1@ucla.edu\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lemmie\",\n        \"lastName\": \"Ciric\",\n        \"email\": {\n            \"title\": \"lciric2@dmoz.org\",\n            \"metaList\": [\n                \"First\",\n                \"Second\"\n            ]\n        },\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Randy\",\n        \"lastName\": \"Boatwright\",\n        \"email\": \"rboatwright3@arstechnica.com\",\n        \"status\": \"Completed\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rolando\",\n        \"lastName\": \"Cyples\",\n        \"email\": \"rcyples4@biglobe.ne.jp\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lem\",\n        \"lastName\": \"Males\",\n        \"email\": \"lmales5@admin.ch\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Sayres\",\n        \"lastName\": \"Adelberg\",\n        \"email\": \"sadelberg6@uol.com.br\",\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Murray\",\n        \"lastName\": \"Bravington\",\n        \"email\": \"mbravington7@drupal.org\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Jena\",\n        \"lastName\": \"Swatheridge\",\n        \"email\": \"jswatheridge8@npr.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Annabel\",\n        \"lastName\": \"Nelsey\",\n        \"email\": \"anelsey9@google.com\",\n        \"gender\": \"Female\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Brooke\",\n        \"lastName\": \"Heeran\",\n        \"email\": \"bheeran0@altervista.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Frazer\",\n        \"lastName\": \"Cathro\",\n        \"email\": \"fcathro1@ucla.edu\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lemmie\",\n        \"lastName\": \"Ciric\",\n        \"email\": {\n            \"title\": \"lciric2@dmoz.org\",\n            \"metaList\": [\n                \"First\",\n                \"Second\"\n            ]\n        },\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Randy\",\n        \"lastName\": \"Boatwright\",\n        \"email\": \"rboatwright3@arstechnica.com\",\n        \"status\": \"Completed\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rolando\",\n        \"lastName\": \"Cyples\",\n        \"email\": \"rcyples4@biglobe.ne.jp\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lem\",\n        \"lastName\": \"Males\",\n        \"email\": \"lmales5@admin.ch\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Sayres\",\n        \"lastName\": \"Adelberg\",\n        \"email\": \"sadelberg6@uol.com.br\",\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Murray\",\n        \"lastName\": \"Bravington\",\n        \"email\": \"mbravington7@drupal.org\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Jena\",\n        \"lastName\": \"Swatheridge\",\n        \"email\": \"jswatheridge8@npr.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Annabel\",\n        \"lastName\": \"Nelsey\",\n        \"email\": \"anelsey9@google.com\",\n        \"gender\": \"Female\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Brooke\",\n        \"lastName\": \"Heeran\",\n        \"email\": \"bheeran0@altervista.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Frazer\",\n        \"lastName\": \"Cathro\",\n        \"email\": \"fcathro1@ucla.edu\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lemmie\",\n        \"lastName\": \"Ciric\",\n        \"email\": {\n            \"title\": \"lciric2@dmoz.org\",\n            \"metaList\": [\n                \"First\",\n                \"Second\"\n            ]\n        },\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Randy\",\n        \"lastName\": \"Boatwright\",\n        \"email\": \"rboatwright3@arstechnica.com\",\n        \"status\": \"Completed\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rolando\",\n        \"lastName\": \"Cyples\",\n        \"email\": \"rcyples4@biglobe.ne.jp\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lem\",\n        \"lastName\": \"Males\",\n        \"email\": \"lmales5@admin.ch\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Sayres\",\n        \"lastName\": \"Adelberg\",\n        \"email\": \"sadelberg6@uol.com.br\",\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Murray\",\n        \"lastName\": \"Bravington\",\n        \"email\": \"mbravington7@drupal.org\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Jena\",\n        \"lastName\": \"Swatheridge\",\n        \"email\": \"jswatheridge8@npr.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Annabel\",\n        \"lastName\": \"Nelsey\",\n        \"email\": \"anelsey9@google.com\",\n        \"gender\": \"Female\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Brooke\",\n        \"lastName\": \"Heeran\",\n        \"email\": \"bheeran0@altervista.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Frazer\",\n        \"lastName\": \"Cathro\",\n        \"email\": \"fcathro1@ucla.edu\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lemmie\",\n        \"lastName\": \"Ciric\",\n        \"email\": {\n            \"title\": \"lciric2@dmoz.org\",\n            \"metaList\": [\n                \"First\",\n                \"Second\"\n            ]\n        },\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Randy\",\n        \"lastName\": \"Boatwright\",\n        \"email\": \"rboatwright3@arstechnica.com\",\n        \"status\": \"Completed\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rolando\",\n        \"lastName\": \"Cyples\",\n        \"email\": \"rcyples4@biglobe.ne.jp\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lem\",\n        \"lastName\": \"Males\",\n        \"email\": \"lmales5@admin.ch\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Sayres\",\n        \"lastName\": \"Adelberg\",\n        \"email\": \"sadelberg6@uol.com.br\",\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Murray\",\n        \"lastName\": \"Bravington\",\n        \"email\": \"mbravington7@drupal.org\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Jena\",\n        \"lastName\": \"Swatheridge\",\n        \"email\": \"jswatheridge8@npr.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Annabel\",\n        \"lastName\": \"Nelsey\",\n        \"email\": \"anelsey9@google.com\",\n        \"gender\": \"Female\",\n        \"status\": \"Completed\"\n    }\n];\n\n  const schema = [\n    {\n      name: 'name',\n      displayName: 'Name',\n      width: '40%',\n      resizable: true,\n      separator: true,\n      tooltip: true,\n      translate: a => ({\n        title: `${a.firstName} ${a.lastName}`,\n        firstName: a.firstName,\n        lastName: a.lastName\n      }),\n      filters: [\n        { label: 'A-G', value: 'a-g' },\n        { label: 'H-R', value: 'h-r' },\n        { label: 'S-Z', value: 's-z' },\n      ],\n      onFilterChange: (a, filters) => {\n        for (const filter of filters) {\n          switch (filter) {\n            case 'a-g':\n              if (a.firstName[0].toLowerCase() >= 'a' && a.firstName[0].toLowerCase() <= 'g') return true;\n              break;\n            case 'h-r':\n              if (a.firstName[0].toLowerCase() >= 'h' && a.firstName[0].toLowerCase() <= 'r') return true;\n              break;\n            case 's-z':\n              if (a.firstName[0].toLowerCase() >= 's' && a.firstName[0].toLowerCase() <= 'z') return true;\n              break;\n          }\n        }\n        return false;\n      },\n      cellType: 'AVATAR_WITH_TEXT',\n    },\n    {\n      name: 'email',\n      displayName: 'Email',\n      width: 350,\n      resizable: true,\n      sorting: false,\n      cellType: 'WITH_META_LIST'\n    },\n    {\n      name: 'gender',\n      displayName: 'Gender',\n      width: 200,\n      resizable: true,\n      comparator: (a, b) => a.gender.localeCompare(b.gender),\n      cellType: 'STATUS_HINT',\n      translate: a => ({\n        title: a.gender,\n        statusAppearance: (a.gender === 'Female') ? 'alert' : 'success'\n      }),\n      filters: [\n        { label: 'Male', value: 'male' },\n        { label: 'Female', value: 'female' },\n      ],\n      onFilterChange: (a, filters) => {\n        for (const filter of filters) {\n          if (a.gender.toLowerCase() === filter) return true;\n        }\n        return false;\n      },\n    },\n    {\n      name: 'icon',\n      displayName: 'Icon',\n      width: 100,\n      resizable: true,\n      align: 'center',\n      cellType: 'ICON',\n      sorting: false,\n      translate: _ => ({\n        icon: 'events'\n      })\n    },\n    {\n      name: 'customCell',\n      displayName: 'Custom Cell',\n      width: 200,\n      resizable: true,\n      cellType: 'WITH_META_LIST',\n      sorting: false,\n      cellRenderer: props => {\n        return (\n          <>\n            <Icon className=\"mr-5\" name=\"events\" />\n            <GridCell\n              {...props}\n              schema={{\n                ...props.schema,\n                name: 'email'\n              }}\n            />\n          </>\n        );\n      }\n    },\n  ];\n\n\n  return (\n    <div\n      style={{\n        height: '550px',\n      }}\n    >\n      <Card className=\"h-100 overflow-hidden\">\n        <Table\n\n          data={data}\n          schema={schema}\n          withHeader={true}\n          headerOptions={{\n            withSearch: true\n          }}\n          onSearch={(currData, searchTerm) => {\n            return currData.filter(d =>\n              d.firstName.toLowerCase().match(searchTerm.toLowerCase())\n              || d.lastName.toLowerCase().match(searchTerm.toLowerCase())\n            );\n          }}\n          withCheckbox={true}\n          onSelect={(rowIndex, selected, selectedList, selectAll) => console.log(`on-select:- rowIndex: ${rowIndex} selected: ${selected} selectedList: ${JSON.stringify(selectedList)} selectAll: ${selectAll}`)}\n          withPagination={true}\n          pageSize={50}\n          onPageChange={newPage => console.log(`on-page-change:- ${newPage}`)}\n        />\n      </Card>\n    </div>\n  );\n};\n\n    "
    ]
  },
  "Table as Description List": {
    "prefix": "Table as Description List",
    "description": "Table As Description List",
    "body": [
      "import { Text, Button, Card, List } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      firstName: 'John',\n      lastName: 'Doe',\n      email: 'jonathandoe@gamil.com',\n      owner: true\n    },\n    {\n      firstName: 'Katty',\n      lastName: 'Perry',\n      email: 'kattyperry21@gamil.com',\n      edit: true\n    },\n    {\n      firstName: 'Daniel',\n      lastName: 'Low',\n      email: 'daniellow02@yahoo.com',\n      view: true\n    },\n    {\n      firstName: 'Randy',\n      lastName: 'Boatwright',\n      email: 'rboatwright3@arstechnica.com',\n      edit: true,\n    },\n    {\n      firstName: 'Rolando',\n      lastName: 'Cyples',\n      email: 'rcyples4@biglobe.ne.jp',\n      owner: true,\n    },\n  ];\n\n  const schema = [\n    {\n      name: 'info',\n      displayName: 'Info',\n      width: '75%',\n      cellType: 'AVATAR_WITH_META_LIST',\n      translate: a => ({\n        firstName: a.firstName,\n        lastName: a.lastName,\n        title: `${a.firstName} ${a.lastName}`,\n        metaList: [a.email]\n      }),\n    },\n    {\n      name: 'rights',\n      displayName: 'Rights',\n      width: '25%',\n      cellRenderer: (props) => {\n        const renderRights = () => {\n          if (props.data.owner) {\n            return <Text appearance=\"subtle\" className=\"pr-5\">owner</Text>;\n          }\n\n          if (props.data.edit || props.data.view) {\n            const rights = props.data.edit ? 'edit' : 'view';\n            return (\n              <Button\n                icon=\"keyboard_arrow_down\"\n                iconAlign=\"right\"\n                appearance=\"transparent\"\n                onClick={e => e.stopPropagation()}\n              >\n                {`can ${rights}`}\n              </Button>\n            );\n          }\n\n          return null;\n        };\n\n        return (\n          <div className=\"d-flex align-items-center justify-content-end flex-grow-1\">\n            {renderRights()}\n          </div>\n        );\n      }\n    }\n  ];\n\n  return (\n      <Card  className=\"py-4\">\n        <Text size=\"large\" weight=\"strong\" className=\"ml-5\">Sharing Test Manual</Text>\n        <List\n          type=\"resource\"\n          withHeader={true}\n          headerOptions={{\n            withSearch: true,\n            dynamicColumn: false\n          }}\n          separator={false}\n          showMenu={false}\n          data={data}\n          schema={schema}\n          withPagination={false}\n          onSearch={(currData, searchTerm) => {\n            return currData.filter(d =>\n              d.firstName.toLowerCase().match(searchTerm.toLowerCase())\n              || d.lastName.toLowerCase().match(searchTerm.toLowerCase())\n            );\n          }}\n          onRowClick={(rowData, rowIndex) =>\n            console.log(`o\n-row-click:- rowIndex: ${rowIndex} data: ${JSON.stringify(rowData)}`)\n          }\n        />\n      </Card>\n  );\n}\n    "
    ]
  },
  "Table as Option List": {
    "prefix": "Table as Option List",
    "description": "Table As Option List",
    "body": [
      "import { Card, Text, List } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      assessment: 'Alcohol Usage Disorders Identification Test - C (Audit C)',\n    },\n    {\n      assessment: 'Functional Assessment - Initial',\n    },\n    {\n      assessment: 'Functional Assessment - Discharge',\n    },\n    {\n      assessment: 'Hypertension - Diabetes Symptoms Identification Test',\n    },\n    {\n      assessment: 'Patient Health Questionaire',\n    },\n  ];\n\n  const schema = [\n    {\n      name: 'assessment',\n      displayName: 'Assessment',\n      cellType: \"DEFAULT\",\n      width: '100%'\n    },\n  ];\n\n  return (\n      <Card>\n        <Text size=\"large\" weight=\"strong\" className=\"ml-5\">Select Assessment</Text>\n        <List\n          type=\"resource\"\n          withHeader={true}\n          headerOptions={{\n            withSearch: true,\n            dynamicColumn: false\n          }}\n          separator={false}\n          showMenu={false}\n          data={data}\n          schema={schema}\n          withPagination={false}\n          onSearch={(currData, searchTerm) => {\n            return currData.filter(d =>\n              d.assessment.toLowerCase().match(searchTerm.toLowerCase())\n            );\n          }}\n          onRowClick={(rowData, rowIndex) =>\n            console.log(`on-row-click:- rowIndex: ${rowIndex} data: ${JSON.stringify(rowData)}`)\n          }\n        />\n      </Card>\n  );\n}\n    "
    ]
  },
  "Tight Table": {
    "prefix": "Tight Table",
    "description": "Tight Table",
    "body": [
      "import { Card, Table } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      name: 'MSSP Track 1 Urban',\n      status: \"Active\",\n      measures: \"9\",\n      current_period: \"March 2017 - Feb 2018\",\n      added_in: \"March 2014\",\n    },\n    {\n      name: 'MSSP Track 1 Rural',\n      status: \"Active\",\n      measures: \"9\",\n      current_period: \"March 2017 - Feb 201\",\n      added_in: \"March 2015\",\n    },\n    {\n      name: 'MSSP Track 2',\n      status: \"Inactive\",\n      measures: \"14\",\n      current_period: \"March 2017 - Feb 201\",\n      added_in: \"March 2016\",\n    },\n    {\n      name: 'Aetna',\n      status: \"Active\",\n      measures: \"20\",\n      current_period: \"March 2017 - Feb 201\",\n      added_in: \"March 2019\",\n    },\n    {\n      name: 'BCBS',\n      status: \"Active\",\n      measures: \"16\",\n      current_period: \"March 2017 - Feb 201\",\n      added_in: \"March 2017\",\n    },\n  ];\n\n  const schema = [\n    {\n      name: 'name',\n      displayName: 'Name',\n      width: '20%',\n      sorting: false\n    },\n    {\n      name: 'status',\n      displayName: 'Status',\n      width: '20%',\n      translate: a => ({\n        title: a.status,\n        statusAppearance: (a.status === 'Inactive') ? 'default' : 'success'\n      }),\n      cellType: \"STATUS_HINT\",\n      sorting: false\n    },\n    {\n      name: 'measures',\n      displayName: 'No. of Measures',\n      width: '20%',\n      sorting: false\n    },\n    {\n      name: 'current_period',\n      displayName: 'Current Period',\n      width: '20%',\n      sorting: false\n    },\n    {\n      name: 'added_in',\n      displayName: 'Added in',\n      width: '20%',\n      sorting: false\n    },\n  ];\n\n  return (\n      <Card>\n        <Table\n          showMenu={false}\n          size=\"tight\"\n          separator={false}\n          data={data}\n          schema={schema}\n          withHeader={true}\n          headerOptions={{\n            withSearch: true\n          }}\n          onSearch={(currData, searchTerm) => {\n            return currData.filter(d =>\n              d.name.toLowerCase().match(searchTerm.toLowerCase())\n            );\n          }}\n          withPagination={false}\n        />\n      </Card>\n  );\n}\n    "
    ]
  },
  "Table   Custom Header Cell Renderer": {
    "prefix": "Table   Custom Header Cell Renderer",
    "description": "Custom Header Cell Renderer",
    "body": [
      "import { Icon, Badge, Card, Table } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      claim_id: 'Q10000101',\n      claim_type: 'Professional',\n      plan_name: \"MSSP Track 3\",\n      insurance_name: \"Medicare\",\n      first_dos: \"03/27/2020\",\n      last_dos: \"03/30/2020\",\n      firstName: 'Brooke',\n      lastName: 'Heeran',\n    },\n    {\n      claim_id: 'Q10000102',\n      claim_type: \"Professional\",\n      plan_name: \"MSSP Track 1\",\n      insurance_name: \"Medicare\",\n      first_dos: \"03/24/2020\",\n      last_dos: \"04/30/2020\",\n      firstName: 'Frazer',\n      lastName: 'Cathro',\n    },\n    {\n      claim_id: 'Q10000103',\n      claim_type: \"Professional\",\n      plan_name: \"MSSP Track 3\",\n      insurance_name: \"Medicare\",\n      first_dos: \"05/16/2020\",\n      last_dos: \"05/30/2020\",\n      firstName: 'Lemmie',\n      lastName: 'Ciric',\n    },\n    {\n      claim_id: 'Q10000104',\n      claim_type: \"Institutional\",\n      plan_name: \"MSSP Track 3\",\n      insurance_name: \"Medicare\",\n      first_dos: \"12/27/2020\",\n      last_dos: \"12/30/2020\",\n      firstName: 'Randy',\n      lastName: 'Boatwright',\n    },\n    {\n      claim_id: 'Q10000105',\n      claim_type: \"Professional\",\n      plan_name: \"MSSP Track 3\",\n      insurance_name: \"Medicare\",\n      first_dos: \"05/04/2020\",\n      last_dos: \"05/28/2020\",\n      firstName: 'Rolando',\n      lastName: 'Cyples',\n    },\n    {\n      claim_id: 'Q10000106',\n      claim_type: \"Institutional\",\n      plan_name: \"MSSP Track 3\",\n      insurance_name: \"Medicare\",\n      first_dos: \"01/27/2020\",\n      last_dos: \"03/30/2020\",\n      firstName: 'Lem',\n      lastName: 'Males',\n    },\n    {\n      claim_id: 'Q10000107',\n      claim_type: \"Professional\",\n      plan_name: \"MSSP Track 3\",\n      insurance_name: \"Medicare\",\n      first_dos: \"03/30/2020\",\n      last_dos: \"04/30/2020\",\n      firstName: 'Sayres',\n      lastName: 'Adelberg',\n    },\n    {\n      claim_id: 'Q10000108',\n      claim_type: \"Professional\",\n      plan_name: \"MSSP Track 3\",\n      insurance_name: \"Medicare\",\n      first_dos: \"02/27/2020\",\n      last_dos: \"03/30/2020\",\n      firstName: 'Murray',\n      lastName: 'Bravington',\n    },\n    {\n      claim_id: 'Q10000109',\n      claim_type: \"Institutional\",\n      plan_name: \"MSSP Track 5\",\n      insurance_name: \"Medicare\",\n      first_dos: \"03/17/2020\",\n      last_dos: \"03/30/2020\",\n      firstName: 'Carin',\n      lastName: 'Robiou',\n    },\n    {\n      claim_id: 'Q100001010',\n      claim_type: \"Institutional\",\n      plan_name: \"MSSP Track 6\",\n      insurance_name: \"Medicare\",\n      first_dos: \"09/27/2020\",\n      last_dos: \"12/27/2020\",\n      firstName: 'Brina',\n      lastName: 'Pirie',\n    }\n  ];\n\n  const schema = [\n    {\n      name: 'claim_id',\n      displayName: 'Claim Id',\n      width: '12%',\n      separator: true,\n    },\n    {\n      name: 'claim_type',\n      displayName: 'Claim Type',\n      width: '15%',\n      separator: true,\n      cellType: \"DEFAULT\",\n      headerCellRenderer: () => {\n        return (\n          <>\n            <Icon name=\"info\" />\n            <Badge>Custom Header</Badge>\n          </>\n        )\n      },\n    },\n    {\n      name: 'insurance_name',\n      displayName: 'Insurance Name',\n      width: '15%',\n      separator: true,\n    },\n    {\n      name: 'plan_name',\n      displayName: 'Plan Name',\n      width: '15%',\n      separator: true,\n    },\n    {\n      name: 'first_dos',\n      displayName: 'First Date of Service',\n      width: '18%',\n      separator: true,\n    },\n    {\n      name: 'last_dos',\n      displayName: 'Last Date of Service',\n      width: '18%',\n      separator: true,\n    },\n    {\n      name: 'provider_name',\n      displayName: 'Provider Name',\n      separator: true,\n      filters: [\n        { label: 'A-G', value: 'a-g' },\n        { label: 'H-R', value: 'h-r' },\n        { label: 'S-Z', value: 's-z' },\n      ],\n      onFilterChange: (a, filters) => {\n        for (const filter of filters) {\n          switch (filter) {\n            case 'a-g':\n              if (a.firstName[0].toLowerCase() >= 'a' && a.firstName[0].toLowerCase() <= 'g') return true;\n              break;\n            case 'h-r':\n              if (a.firstName[0].toLowerCase() >= 'h' && a.firstName[0].toLowerCase() <= 'r') return true;\n              break;\n            case 's-z':\n              if (a.firstName[0].toLowerCase() >= 's' && a.firstName[0].toLowerCase() <= 'z') return true;\n              break;\n          }\n        }\n        return false;\n      },\n      translate: (a) => ({\n        title: `${a.firstName} ${a.lastName}`,\n        firstName: a.firstName,\n        lastName: a.lastName\n      }),\n    },\n  ];\n\n  const loaderSchema = [\n    {\n        \"name\": \"name\",\n        \"displayName\": \"Name\",\n        \"width\": \"40%\",\n        \"resizable\": true,\n        \"tooltip\": true,\n        \"separator\": true,\n        \"filters\": [\n            {\n                \"label\": \"A-G\",\n                \"value\": \"a-g\"\n            },\n            {\n                \"label\": \"H-R\",\n                \"value\": \"h-r\"\n            },\n            {\n                \"label\": \"S-Z\",\n                \"value\": \"s-z\"\n            }\n        ],\n        \"cellType\": \"AVATAR_WITH_TEXT\"\n    },\n    {\n        \"name\": \"email\",\n        \"displayName\": \"Email\",\n        \"width\": 250,\n        \"resizable\": true,\n        \"sorting\": false,\n        \"cellType\": \"WITH_META_LIST\"\n    },\n    {\n        \"name\": \"gender\",\n        \"displayName\": \"Gender\",\n        \"width\": 180,\n        \"resizable\": true,\n        \"cellType\": \"STATUS_HINT\",\n        \"filters\": [\n            {\n                \"label\": \"Male\",\n                \"value\": \"male\"\n            },\n            {\n                \"label\": \"Female\",\n                \"value\": \"female\"\n            }\n        ]\n    },\n    {\n        \"name\": \"icon\",\n        \"displayName\": \"Icon\",\n        \"width\": 100,\n        \"resizable\": true,\n        \"align\": \"center\",\n        \"cellType\": \"ICON\"\n    },\n    {\n        \"name\": \"customCell\",\n        \"displayName\": \"Custom Cell\",\n        \"width\": 200,\n        \"resizable\": true,\n        \"cellType\": \"WITH_META_LIST\"\n    }\n];\n\n  return (\n      <Card>\n        <Table\n          loaderSchema={loaderSchema}\n          showMenu={false}\n          separator={true}\n          data={data}\n          schema={schema}\n          withHeader={true}\n          pageSize={5}\n          onPageChange={newPage => console.log(`on-page-change:- ${newPage}`)}\n        />\n      </Card>\n  );\n}\n    "
    ]
  },
  "Table   Nested Rows": {
    "prefix": "Table   Nested Rows",
    "description": "Nested Rows",
    "body": [
      "import { Button, Divider, List, Card, Table } from '@innovaccer/design-system';\n    \n() => {\n  const data = [\n    {\n        \"firstName\": \"Brooke\",\n        \"lastName\": \"Heeran\",\n        \"email\": \"bheeran0@altervista.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Frazer\",\n        \"lastName\": \"Cathro\",\n        \"email\": \"fcathro1@ucla.edu\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lemmie\",\n        \"lastName\": \"Ciric\",\n        \"email\": {\n            \"title\": \"lciric2@dmoz.org\",\n            \"metaList\": [\n                \"First\",\n                \"Second\"\n            ]\n        },\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Randy\",\n        \"lastName\": \"Boatwright\",\n        \"email\": \"rboatwright3@arstechnica.com\",\n        \"status\": \"Completed\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rolando\",\n        \"lastName\": \"Cyples\",\n        \"email\": \"rcyples4@biglobe.ne.jp\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lem\",\n        \"lastName\": \"Males\",\n        \"email\": \"lmales5@admin.ch\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Sayres\",\n        \"lastName\": \"Adelberg\",\n        \"email\": \"sadelberg6@uol.com.br\",\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Murray\",\n        \"lastName\": \"Bravington\",\n        \"email\": \"mbravington7@drupal.org\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Jena\",\n        \"lastName\": \"Swatheridge\",\n        \"email\": \"jswatheridge8@npr.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Annabel\",\n        \"lastName\": \"Nelsey\",\n        \"email\": \"anelsey9@google.com\",\n        \"gender\": \"Female\",\n        \"status\": \"Completed\"\n    }\n];\n\n  const schema = [\n    {\n      name: 'name',\n      displayName: 'Name',\n      width: 300,\n      resizable: true,\n      separator: true,\n      tooltip: true,\n      translate: a => ({\n        title: `${a.firstName} ${a.lastName}`,\n        firstName: a.firstName,\n        lastName: a.lastName\n      }),\n      filters: [\n        { label: 'A-G', value: 'a-g' },\n        { label: 'H-R', value: 'h-r' },\n        { label: 'S-Z', value: 's-z' },\n      ],\n      onFilterChange: (a, filters) => {\n        for (const filter of filters) {\n          switch (filter) {\n            case 'a-g':\n              if (a.firstName[0].toLowerCase() >= 'a' && a.firstName[0].toLowerCase() <= 'g') return true;\n              break;\n            case 'h-r':\n              if (a.firstName[0].toLowerCase() >= 'h' && a.firstName[0].toLowerCase() <= 'r') return true;\n              break;\n            case 's-z':\n              if (a.firstName[0].toLowerCase() >= 's' && a.firstName[0].toLowerCase() <= 'z') return true;\n              break;\n          }\n        }\n        return false;\n      },\n      cellType: 'AVATAR_WITH_TEXT',\n    },\n    {\n      name: 'email',\n      displayName: 'Email',\n      width: 350,\n      resizable: true,\n      sorting: false,\n      cellType: 'WITH_META_LIST'\n    },\n    {\n      name: 'gender',\n      displayName: 'Gender',\n      width: 200,\n      resizable: true,\n      comparator: (a, b) => a.gender.localeCompare(b.gender),\n      cellType: 'STATUS_HINT',\n      translate: a => ({\n        title: a.gender,\n        statusAppearance: (a.gender === 'Female') ? 'alert' : 'success'\n      }),\n      filters: [\n        { label: 'Male', value: 'male' },\n        { label: 'Female', value: 'female' },\n      ],\n      onFilterChange: (a, filters) => {\n        for (const filter of filters) {\n          if (a.gender.toLowerCase() === filter) return true;\n        }\n        return false;\n      },\n    },\n    {\n      name: 'icon',\n      displayName: 'Icon',\n      width: 100,\n      resizable: true,\n      align: 'center',\n      cellType: 'ICON',\n      sorting: false,\n      translate: _ => ({\n        icon: 'events'\n      })\n    },\n    {\n      name: 'customCell',\n      displayName: 'Custom Cell',\n      width: 200,\n      resizable: true,\n      separator: true,\n      sorting: false,\n      cellRenderer: (props) => {\n        const {\n          loading\n        } = props;\n\n        if (loading) return <></>;\n\n        return (\n          <Button appearance={'primary'}>Button</Button>\n        );\n      }\n    },\n  ];\n\n  const nestedRowRenderer = (props) => {\n    const {\n      schema,\n      data,\n      loading,\n      rowIndex\n    } = props;\n    if (rowIndex % 2) {\n      return false;\n    }\n    return (\n      <div>\n        <Divider className='ml-5' />\n        <List\n          loading={loading}\n          schema={schema}\n          data={[data]}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      style={{\n        height: '450px',\n      }}\n    >\n      <Card className=\"h-100 overflow-hidden\">\n        <Table\n          data={data}\n          schema={schema}\n          nestedRows={true}\n          nestedRowRenderer={nestedRowRenderer}\n        />\n      </Card>\n    </div>\n  );\n};\n\n    "
    ]
  },
  "Table   Show Head": {
    "prefix": "Table   Show Head",
    "description": "Show Head",
    "body": [
      "import { Heading, Card, Table } from '@innovaccer/design-system';\n    \n() => {\n  const data = [\n    {\n        \"firstName\": \"Brooke\",\n        \"lastName\": \"Heeran\",\n        \"email\": \"bheeran0@altervista.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Frazer\",\n        \"lastName\": \"Cathro\",\n        \"email\": \"fcathro1@ucla.edu\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lemmie\",\n        \"lastName\": \"Ciric\",\n        \"email\": {\n            \"title\": \"lciric2@dmoz.org\",\n            \"metaList\": [\n                \"First\",\n                \"Second\"\n            ]\n        },\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Randy\",\n        \"lastName\": \"Boatwright\",\n        \"email\": \"rboatwright3@arstechnica.com\",\n        \"status\": \"Completed\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rolando\",\n        \"lastName\": \"Cyples\",\n        \"email\": \"rcyples4@biglobe.ne.jp\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lem\",\n        \"lastName\": \"Males\",\n        \"email\": \"lmales5@admin.ch\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Sayres\",\n        \"lastName\": \"Adelberg\",\n        \"email\": \"sadelberg6@uol.com.br\",\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Murray\",\n        \"lastName\": \"Bravington\",\n        \"email\": \"mbravington7@drupal.org\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Jena\",\n        \"lastName\": \"Swatheridge\",\n        \"email\": \"jswatheridge8@npr.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Annabel\",\n        \"lastName\": \"Nelsey\",\n        \"email\": \"anelsey9@google.com\",\n        \"gender\": \"Female\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Carin\",\n        \"lastName\": \"Robiou\",\n        \"email\": \"crobioua@skype.com\",\n        \"gender\": \"Female\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Anson\",\n        \"lastName\": \"Gamon\",\n        \"email\": \"agamonb@economist.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Brina\",\n        \"lastName\": \"Pirie\",\n        \"email\": \"bpiriec@stumbleupon.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Hermy\",\n        \"lastName\": \"Dyett\",\n        \"email\": \"hdyettd@boston.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Aime\",\n        \"lastName\": \"von Hagt\",\n        \"email\": \"avonhagte@nyu.edu\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Gusti\",\n        \"lastName\": \"Haycock\",\n        \"email\": \"ghaycockf@virginia.edu\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Mortimer\",\n        \"lastName\": \"Kunneke\",\n        \"email\": \"mkunnekeg@weather.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Barnie\",\n        \"lastName\": \"Pohls\",\n        \"email\": \"bpohlsh@columbia.edu\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Elliot\",\n        \"lastName\": \"Nealey\",\n        \"email\": \"enealeyi@cocolog-nifty.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Allsun\",\n        \"lastName\": \"Gong\",\n        \"email\": \"agongj@discuz.net\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Harwell\",\n        \"lastName\": \"Kegan\",\n        \"email\": \"hkegank@domainmarket.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Gilles\",\n        \"lastName\": \"Sandell\",\n        \"email\": \"gsandelll@apache.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Hilliard\",\n        \"lastName\": \"Beamish\",\n        \"email\": \"hbeamishm@shop-pro.jp\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Charley\",\n        \"lastName\": \"Kuschek\",\n        \"email\": \"ckuschekn@dropbox.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Danny\",\n        \"lastName\": \"Churchin\",\n        \"email\": \"dchurchino@bbc.co.uk\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Ervin\",\n        \"lastName\": \"Chatelain\",\n        \"email\": \"echatelainp@mac.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Milli\",\n        \"lastName\": \"Joseph\",\n        \"email\": \"mjosephq@merriam-webster.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Greer\",\n        \"lastName\": \"O'Doherty\",\n        \"email\": \"godohertyr@homestead.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Haroun\",\n        \"lastName\": \"Martensen\",\n        \"email\": \"hmartensens@skype.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Desiree\",\n        \"lastName\": \"Colwell\",\n        \"email\": \"dcolwellt@businessinsider.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Almeda\",\n        \"lastName\": \"Jowsey\",\n        \"email\": \"ajowseyu@ask.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Cinderella\",\n        \"lastName\": \"Dunnet\",\n        \"email\": \"cdunnetv@mac.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Hubert\",\n        \"lastName\": \"Legion\",\n        \"email\": \"hlegionw@ameblo.jp\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Costa\",\n        \"lastName\": \"Adamovsky\",\n        \"email\": \"cadamovskyx@joomla.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Kristan\",\n        \"lastName\": \"Bielfeld\",\n        \"email\": \"kbielfeldy@live.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Sammy\",\n        \"lastName\": \"Shermore\",\n        \"email\": \"sshermorez@washington.edu\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Kathi\",\n        \"lastName\": \"Dowyer\",\n        \"email\": \"kdowyer10@bluehost.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Kennith\",\n        \"lastName\": \"Whitehouse\",\n        \"email\": \"kwhitehouse11@cornell.edu\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Brianna\",\n        \"lastName\": \"Garland\",\n        \"email\": \"bgarland12@wikipedia.org\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Cristobal\",\n        \"lastName\": \"Mapholm\",\n        \"email\": \"cmapholm13@constantcontact.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Zia\",\n        \"lastName\": \"Harrowing\",\n        \"email\": \"zharrowing14@huffingtonpost.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Zabrina\",\n        \"lastName\": \"Gravener\",\n        \"email\": \"zgravener15@ameblo.jp\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Gregoor\",\n        \"lastName\": \"Cruz\",\n        \"email\": \"gcruz16@uol.com.br\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Julita\",\n        \"lastName\": \"Gemeau\",\n        \"email\": \"jgemeau17@bandcamp.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Gilbert\",\n        \"lastName\": \"Sallier\",\n        \"email\": \"gsallier18@dailymail.co.uk\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Bride\",\n        \"lastName\": \"Boniface\",\n        \"email\": \"bboniface19@howstuffworks.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Rodolph\",\n        \"lastName\": \"Mattussevich\",\n        \"email\": \"rmattussevich1a@nymag.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rowan\",\n        \"lastName\": \"Rizon\",\n        \"email\": \"rrizon1b@thetimes.co.uk\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Avie\",\n        \"lastName\": \"Nicolls\",\n        \"email\": \"anicolls1c@nbcnews.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Bram\",\n        \"lastName\": \"Kleinhaut\",\n        \"email\": \"bkleinhaut1d@imdb.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Carmita\",\n        \"lastName\": \"Costin\",\n        \"email\": \"ccostin1e@hibu.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Wash\",\n        \"lastName\": \"Vannuchi\",\n        \"email\": \"wvannuchi1f@japanpost.jp\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Nikki\",\n        \"lastName\": \"Faye\",\n        \"email\": \"nfaye1g@feedburner.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Aron\",\n        \"lastName\": \"Scimonelli\",\n        \"email\": \"ascimonelli1h@nationalgeographic.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Smitty\",\n        \"lastName\": \"Giacomello\",\n        \"email\": \"sgiacomello1i@google.co.uk\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Staci\",\n        \"lastName\": \"D'Elias\",\n        \"email\": \"sdelias1j@paginegialle.it\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Radcliffe\",\n        \"lastName\": \"Garbutt\",\n        \"email\": \"rgarbutt1k@thetimes.co.uk\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Maxwell\",\n        \"lastName\": \"Krikorian\",\n        \"email\": \"mkrikorian1l@ask.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Dunstan\",\n        \"lastName\": \"Chansonne\",\n        \"email\": \"dchansonne1m@posterous.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Isaak\",\n        \"lastName\": \"Faherty\",\n        \"email\": \"ifaherty1n@who.int\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Sawyere\",\n        \"lastName\": \"Ede\",\n        \"email\": \"sede1o@drupal.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Perren\",\n        \"lastName\": \"Daddow\",\n        \"email\": \"pdaddow1p@indiegogo.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Brendis\",\n        \"lastName\": \"Napier\",\n        \"email\": \"bnapier1q@multiply.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Francene\",\n        \"lastName\": \"Godbold\",\n        \"email\": \"fgodbold1r@joomla.org\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Moll\",\n        \"lastName\": \"Fludgate\",\n        \"email\": \"mfludgate1s@who.int\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Allayne\",\n        \"lastName\": \"Medhurst\",\n        \"email\": \"amedhurst1t@is.gd\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Genvieve\",\n        \"lastName\": \"Mellows\",\n        \"email\": \"gmellows1u@stumbleupon.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Rebe\",\n        \"lastName\": \"Durnford\",\n        \"email\": \"rdurnford1v@biglobe.ne.jp\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Thalia\",\n        \"lastName\": \"Joerning\",\n        \"email\": \"tjoerning1w@netscape.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Beckie\",\n        \"lastName\": \"Lammin\",\n        \"email\": \"blammin1x@gnu.org\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Kassandra\",\n        \"lastName\": \"Furney\",\n        \"email\": \"kfurney1y@surveymonkey.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Libbie\",\n        \"lastName\": \"Gladyer\",\n        \"email\": \"lgladyer1z@dropbox.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Kai\",\n        \"lastName\": \"Goldsbury\",\n        \"email\": \"kgoldsbury20@census.gov\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Arielle\",\n        \"lastName\": \"De Bell\",\n        \"email\": \"adebell21@addthis.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Ellary\",\n        \"lastName\": \"Warnock\",\n        \"email\": \"ewarnock22@ted.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Skelly\",\n        \"lastName\": \"Blakes\",\n        \"email\": \"sblakes23@reddit.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Roanne\",\n        \"lastName\": \"Stanyforth\",\n        \"email\": \"rstanyforth24@com.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Cash\",\n        \"lastName\": \"Fettis\",\n        \"email\": \"cfettis25@go.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Farleigh\",\n        \"lastName\": \"McDavid\",\n        \"email\": \"fmcdavid26@sbwire.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Holly\",\n        \"lastName\": \"Barfford\",\n        \"email\": \"hbarfford27@wsj.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Hurley\",\n        \"lastName\": \"Benaine\",\n        \"email\": \"hbenaine28@sun.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Maryjo\",\n        \"lastName\": \"Gilhooly\",\n        \"email\": \"mgilhooly29@tripod.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Annis\",\n        \"lastName\": \"Linkie\",\n        \"email\": \"alinkie2a@wp.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Mariel\",\n        \"lastName\": \"Husher\",\n        \"email\": \"mhusher2b@etsy.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Niels\",\n        \"lastName\": \"Klimontovich\",\n        \"email\": \"nklimontovich2c@surveymonkey.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Udall\",\n        \"lastName\": \"Linfitt\",\n        \"email\": \"ulinfitt2d@toplist.cz\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Isidore\",\n        \"lastName\": \"Kuhn\",\n        \"email\": \"ikuhn2e@cdc.gov\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rosemonde\",\n        \"lastName\": \"Kettle\",\n        \"email\": \"rkettle2f@techcrunch.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Cass\",\n        \"lastName\": \"Boot\",\n        \"email\": \"cboot2g@furl.net\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Montague\",\n        \"lastName\": \"Rossey\",\n        \"email\": \"mrossey2h@goo.gl\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Geno\",\n        \"lastName\": \"Jenkyn\",\n        \"email\": \"gjenkyn2i@opensource.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Esdras\",\n        \"lastName\": \"Skivington\",\n        \"email\": \"eskivington2j@answers.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Gabriello\",\n        \"lastName\": \"Luce\",\n        \"email\": \"gluce2k@nydailynews.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Magdalene\",\n        \"lastName\": \"Ilyunin\",\n        \"email\": \"milyunin2l@prweb.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Isidro\",\n        \"lastName\": \"Fawson\",\n        \"email\": \"ifawson2m@squidoo.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Blinny\",\n        \"lastName\": \"Palfrey\",\n        \"email\": \"bpalfrey2n@networksolutions.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Justen\",\n        \"lastName\": \"Kordas\",\n        \"email\": \"jkordas2o@symantec.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Damien\",\n        \"lastName\": \"Hallede\",\n        \"email\": \"dhallede2p@unicef.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Jaquelyn\",\n        \"lastName\": \"Rockhall\",\n        \"email\": \"jrockhall2q@vkontakte.ru\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Garrek\",\n        \"lastName\": \"Matignon\",\n        \"email\": \"gmatignon2r@noaa.gov\",\n        \"gender\": \"Male\"\n    }\n];\n\n  const schema = [\n    {\n      name: 'name',\n      displayName: 'Name',\n      width: 300,\n      resizable: true,\n      separator: true,\n      tooltip: true,\n      translate: a => ({\n        title: `${a.firstName} ${a.lastName}`,\n        firstName: a.firstName,\n        lastName: a.lastName\n      }),\n      filters: [\n        { label: 'A-G', value: 'a-g' },\n        { label: 'H-R', value: 'h-r' },\n        { label: 'S-Z', value: 's-z' },\n      ],\n      onFilterChange: (a, filters) => {\n        for (const filter of filters) {\n          switch (filter) {\n            case 'a-g':\n              if (a.firstName[0].toLowerCase() >= 'a' && a.firstName[0].toLowerCase() <= 'g') return true;\n              break;\n            case 'h-r':\n              if (a.firstName[0].toLowerCase() >= 'h' && a.firstName[0].toLowerCase() <= 'r') return true;\n              break;\n            case 's-z':\n              if (a.firstName[0].toLowerCase() >= 's' && a.firstName[0].toLowerCase() <= 'z') return true;\n              break;\n          }\n        }\n        return false;\n      },\n      cellType: 'AVATAR_WITH_TEXT',\n    },\n    {\n      name: 'email',\n      displayName: 'Email',\n      width: 350,\n      resizable: true,\n      sorting: false,\n    },\n    {\n      name: 'gender',\n      displayName: 'Gender',\n      width: 200,\n      resizable: true,\n      comparator: (a, b) => a.gender.localeCompare(b.gender),\n      cellType: 'STATUS_HINT',\n      translate: a => ({\n        title: a.gender,\n        statusAppearance: (a.gender === 'Female') ? 'alert' : 'success'\n      }),\n      filters: [\n        { label: 'Male', value: 'male' },\n        { label: 'Female', value: 'female' },\n      ],\n      onFilterChange: (a, filters) => {\n        for (const filter of filters) {\n          if (a.gender.toLowerCase() === filter) return true;\n        }\n        return false;\n      },\n    },\n    {\n      name: 'icon',\n      displayName: 'Icon',\n      width: 100,\n      resizable: true,\n      align: 'center',\n      cellType: 'ICON',\n      sorting: false,\n      translate: _ => ({\n        icon: 'events'\n      })\n    },\n  ];\n\n  const values = [true, false];\n\n  const style = {\n    display: 'flex',\n    flexWrap: 'wrap',\n  };\n\n  return (\n    <div style={style}>\n      {values.map((v, index) => (\n        <div\n          key={index}\n          style={{\n            margin: '20px',\n            width: '45%',\n          }}\n        >\n          <Heading>{`showHead: ${v}`}</Heading>\n          <div\n            style={{\n              height: '350px',\n            }}\n          >\n            <Card shadow=\"light\" className=\"h-100\">\n              <Table showHead={v} data={data} schema={schema} />\n            </Card>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\n    "
    ]
  },
  "Table   Show Menu": {
    "prefix": "Table   Show Menu",
    "description": "Show Menu",
    "body": [
      "import { Heading, Card, Table } from '@innovaccer/design-system';\n    \n() => {\n  const data = [\n    {\n        \"firstName\": \"Brooke\",\n        \"lastName\": \"Heeran\",\n        \"email\": \"bheeran0@altervista.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Frazer\",\n        \"lastName\": \"Cathro\",\n        \"email\": \"fcathro1@ucla.edu\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lemmie\",\n        \"lastName\": \"Ciric\",\n        \"email\": {\n            \"title\": \"lciric2@dmoz.org\",\n            \"metaList\": [\n                \"First\",\n                \"Second\"\n            ]\n        },\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Randy\",\n        \"lastName\": \"Boatwright\",\n        \"email\": \"rboatwright3@arstechnica.com\",\n        \"status\": \"Completed\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rolando\",\n        \"lastName\": \"Cyples\",\n        \"email\": \"rcyples4@biglobe.ne.jp\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lem\",\n        \"lastName\": \"Males\",\n        \"email\": \"lmales5@admin.ch\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Sayres\",\n        \"lastName\": \"Adelberg\",\n        \"email\": \"sadelberg6@uol.com.br\",\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Murray\",\n        \"lastName\": \"Bravington\",\n        \"email\": \"mbravington7@drupal.org\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Jena\",\n        \"lastName\": \"Swatheridge\",\n        \"email\": \"jswatheridge8@npr.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Annabel\",\n        \"lastName\": \"Nelsey\",\n        \"email\": \"anelsey9@google.com\",\n        \"gender\": \"Female\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Carin\",\n        \"lastName\": \"Robiou\",\n        \"email\": \"crobioua@skype.com\",\n        \"gender\": \"Female\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Anson\",\n        \"lastName\": \"Gamon\",\n        \"email\": \"agamonb@economist.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Brina\",\n        \"lastName\": \"Pirie\",\n        \"email\": \"bpiriec@stumbleupon.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Hermy\",\n        \"lastName\": \"Dyett\",\n        \"email\": \"hdyettd@boston.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Aime\",\n        \"lastName\": \"von Hagt\",\n        \"email\": \"avonhagte@nyu.edu\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Gusti\",\n        \"lastName\": \"Haycock\",\n        \"email\": \"ghaycockf@virginia.edu\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Mortimer\",\n        \"lastName\": \"Kunneke\",\n        \"email\": \"mkunnekeg@weather.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Barnie\",\n        \"lastName\": \"Pohls\",\n        \"email\": \"bpohlsh@columbia.edu\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Elliot\",\n        \"lastName\": \"Nealey\",\n        \"email\": \"enealeyi@cocolog-nifty.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Allsun\",\n        \"lastName\": \"Gong\",\n        \"email\": \"agongj@discuz.net\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Harwell\",\n        \"lastName\": \"Kegan\",\n        \"email\": \"hkegank@domainmarket.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Gilles\",\n        \"lastName\": \"Sandell\",\n        \"email\": \"gsandelll@apache.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Hilliard\",\n        \"lastName\": \"Beamish\",\n        \"email\": \"hbeamishm@shop-pro.jp\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Charley\",\n        \"lastName\": \"Kuschek\",\n        \"email\": \"ckuschekn@dropbox.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Danny\",\n        \"lastName\": \"Churchin\",\n        \"email\": \"dchurchino@bbc.co.uk\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Ervin\",\n        \"lastName\": \"Chatelain\",\n        \"email\": \"echatelainp@mac.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Milli\",\n        \"lastName\": \"Joseph\",\n        \"email\": \"mjosephq@merriam-webster.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Greer\",\n        \"lastName\": \"O'Doherty\",\n        \"email\": \"godohertyr@homestead.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Haroun\",\n        \"lastName\": \"Martensen\",\n        \"email\": \"hmartensens@skype.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Desiree\",\n        \"lastName\": \"Colwell\",\n        \"email\": \"dcolwellt@businessinsider.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Almeda\",\n        \"lastName\": \"Jowsey\",\n        \"email\": \"ajowseyu@ask.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Cinderella\",\n        \"lastName\": \"Dunnet\",\n        \"email\": \"cdunnetv@mac.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Hubert\",\n        \"lastName\": \"Legion\",\n        \"email\": \"hlegionw@ameblo.jp\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Costa\",\n        \"lastName\": \"Adamovsky\",\n        \"email\": \"cadamovskyx@joomla.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Kristan\",\n        \"lastName\": \"Bielfeld\",\n        \"email\": \"kbielfeldy@live.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Sammy\",\n        \"lastName\": \"Shermore\",\n        \"email\": \"sshermorez@washington.edu\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Kathi\",\n        \"lastName\": \"Dowyer\",\n        \"email\": \"kdowyer10@bluehost.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Kennith\",\n        \"lastName\": \"Whitehouse\",\n        \"email\": \"kwhitehouse11@cornell.edu\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Brianna\",\n        \"lastName\": \"Garland\",\n        \"email\": \"bgarland12@wikipedia.org\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Cristobal\",\n        \"lastName\": \"Mapholm\",\n        \"email\": \"cmapholm13@constantcontact.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Zia\",\n        \"lastName\": \"Harrowing\",\n        \"email\": \"zharrowing14@huffingtonpost.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Zabrina\",\n        \"lastName\": \"Gravener\",\n        \"email\": \"zgravener15@ameblo.jp\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Gregoor\",\n        \"lastName\": \"Cruz\",\n        \"email\": \"gcruz16@uol.com.br\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Julita\",\n        \"lastName\": \"Gemeau\",\n        \"email\": \"jgemeau17@bandcamp.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Gilbert\",\n        \"lastName\": \"Sallier\",\n        \"email\": \"gsallier18@dailymail.co.uk\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Bride\",\n        \"lastName\": \"Boniface\",\n        \"email\": \"bboniface19@howstuffworks.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Rodolph\",\n        \"lastName\": \"Mattussevich\",\n        \"email\": \"rmattussevich1a@nymag.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rowan\",\n        \"lastName\": \"Rizon\",\n        \"email\": \"rrizon1b@thetimes.co.uk\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Avie\",\n        \"lastName\": \"Nicolls\",\n        \"email\": \"anicolls1c@nbcnews.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Bram\",\n        \"lastName\": \"Kleinhaut\",\n        \"email\": \"bkleinhaut1d@imdb.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Carmita\",\n        \"lastName\": \"Costin\",\n        \"email\": \"ccostin1e@hibu.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Wash\",\n        \"lastName\": \"Vannuchi\",\n        \"email\": \"wvannuchi1f@japanpost.jp\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Nikki\",\n        \"lastName\": \"Faye\",\n        \"email\": \"nfaye1g@feedburner.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Aron\",\n        \"lastName\": \"Scimonelli\",\n        \"email\": \"ascimonelli1h@nationalgeographic.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Smitty\",\n        \"lastName\": \"Giacomello\",\n        \"email\": \"sgiacomello1i@google.co.uk\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Staci\",\n        \"lastName\": \"D'Elias\",\n        \"email\": \"sdelias1j@paginegialle.it\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Radcliffe\",\n        \"lastName\": \"Garbutt\",\n        \"email\": \"rgarbutt1k@thetimes.co.uk\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Maxwell\",\n        \"lastName\": \"Krikorian\",\n        \"email\": \"mkrikorian1l@ask.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Dunstan\",\n        \"lastName\": \"Chansonne\",\n        \"email\": \"dchansonne1m@posterous.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Isaak\",\n        \"lastName\": \"Faherty\",\n        \"email\": \"ifaherty1n@who.int\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Sawyere\",\n        \"lastName\": \"Ede\",\n        \"email\": \"sede1o@drupal.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Perren\",\n        \"lastName\": \"Daddow\",\n        \"email\": \"pdaddow1p@indiegogo.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Brendis\",\n        \"lastName\": \"Napier\",\n        \"email\": \"bnapier1q@multiply.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Francene\",\n        \"lastName\": \"Godbold\",\n        \"email\": \"fgodbold1r@joomla.org\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Moll\",\n        \"lastName\": \"Fludgate\",\n        \"email\": \"mfludgate1s@who.int\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Allayne\",\n        \"lastName\": \"Medhurst\",\n        \"email\": \"amedhurst1t@is.gd\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Genvieve\",\n        \"lastName\": \"Mellows\",\n        \"email\": \"gmellows1u@stumbleupon.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Rebe\",\n        \"lastName\": \"Durnford\",\n        \"email\": \"rdurnford1v@biglobe.ne.jp\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Thalia\",\n        \"lastName\": \"Joerning\",\n        \"email\": \"tjoerning1w@netscape.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Beckie\",\n        \"lastName\": \"Lammin\",\n        \"email\": \"blammin1x@gnu.org\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Kassandra\",\n        \"lastName\": \"Furney\",\n        \"email\": \"kfurney1y@surveymonkey.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Libbie\",\n        \"lastName\": \"Gladyer\",\n        \"email\": \"lgladyer1z@dropbox.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Kai\",\n        \"lastName\": \"Goldsbury\",\n        \"email\": \"kgoldsbury20@census.gov\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Arielle\",\n        \"lastName\": \"De Bell\",\n        \"email\": \"adebell21@addthis.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Ellary\",\n        \"lastName\": \"Warnock\",\n        \"email\": \"ewarnock22@ted.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Skelly\",\n        \"lastName\": \"Blakes\",\n        \"email\": \"sblakes23@reddit.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Roanne\",\n        \"lastName\": \"Stanyforth\",\n        \"email\": \"rstanyforth24@com.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Cash\",\n        \"lastName\": \"Fettis\",\n        \"email\": \"cfettis25@go.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Farleigh\",\n        \"lastName\": \"McDavid\",\n        \"email\": \"fmcdavid26@sbwire.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Holly\",\n        \"lastName\": \"Barfford\",\n        \"email\": \"hbarfford27@wsj.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Hurley\",\n        \"lastName\": \"Benaine\",\n        \"email\": \"hbenaine28@sun.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Maryjo\",\n        \"lastName\": \"Gilhooly\",\n        \"email\": \"mgilhooly29@tripod.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Annis\",\n        \"lastName\": \"Linkie\",\n        \"email\": \"alinkie2a@wp.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Mariel\",\n        \"lastName\": \"Husher\",\n        \"email\": \"mhusher2b@etsy.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Niels\",\n        \"lastName\": \"Klimontovich\",\n        \"email\": \"nklimontovich2c@surveymonkey.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Udall\",\n        \"lastName\": \"Linfitt\",\n        \"email\": \"ulinfitt2d@toplist.cz\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Isidore\",\n        \"lastName\": \"Kuhn\",\n        \"email\": \"ikuhn2e@cdc.gov\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rosemonde\",\n        \"lastName\": \"Kettle\",\n        \"email\": \"rkettle2f@techcrunch.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Cass\",\n        \"lastName\": \"Boot\",\n        \"email\": \"cboot2g@furl.net\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Montague\",\n        \"lastName\": \"Rossey\",\n        \"email\": \"mrossey2h@goo.gl\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Geno\",\n        \"lastName\": \"Jenkyn\",\n        \"email\": \"gjenkyn2i@opensource.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Esdras\",\n        \"lastName\": \"Skivington\",\n        \"email\": \"eskivington2j@answers.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Gabriello\",\n        \"lastName\": \"Luce\",\n        \"email\": \"gluce2k@nydailynews.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Magdalene\",\n        \"lastName\": \"Ilyunin\",\n        \"email\": \"milyunin2l@prweb.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Isidro\",\n        \"lastName\": \"Fawson\",\n        \"email\": \"ifawson2m@squidoo.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Blinny\",\n        \"lastName\": \"Palfrey\",\n        \"email\": \"bpalfrey2n@networksolutions.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Justen\",\n        \"lastName\": \"Kordas\",\n        \"email\": \"jkordas2o@symantec.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Damien\",\n        \"lastName\": \"Hallede\",\n        \"email\": \"dhallede2p@unicef.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Jaquelyn\",\n        \"lastName\": \"Rockhall\",\n        \"email\": \"jrockhall2q@vkontakte.ru\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Garrek\",\n        \"lastName\": \"Matignon\",\n        \"email\": \"gmatignon2r@noaa.gov\",\n        \"gender\": \"Male\"\n    }\n];\n\n  const schema = [\n    {\n      name: 'name',\n      displayName: 'Name',\n      resizable: true,\n      separator: true,\n      tooltip: true,\n      translate: a => ({\n        title: `${a.firstName} ${a.lastName}`,\n        firstName: a.firstName,\n        lastName: a.lastName\n      }),\n      cellType: 'AVATAR_WITH_TEXT',\n    },\n    {\n      name: 'email',\n      displayName: 'Email',\n      width: 350,\n      resizable: true,\n    },\n  ];\n\n  const values = [true, false];\n\n  const style = {\n    display: 'flex',\n    flexWrap: 'wrap',\n  };\n\n  return (\n    <div style={style}>\n      {values.map((v, index) => (\n        <div\n          key={index}\n          style={{\n            margin: '20px',\n            width: '45%',\n          }}\n        >\n          <Heading>{`showMenu: ${v}`}</Heading>\n          <div\n            style={{\n              height: '350px',\n            }}\n          >\n            <Card shadow=\"light\" className=\"h-100\">\n              <Table showMenu={v} data={data} schema={schema} />\n            </Card>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\n    "
    ]
  },
  "Table   Size": {
    "prefix": "Table   Size",
    "description": "Size",
    "body": [
      "import { Heading, Card, Table } from '@innovaccer/design-system';\n    \n() => {\n  const data = [\n    {\n        \"firstName\": \"Brooke\",\n        \"lastName\": \"Heeran\",\n        \"email\": \"bheeran0@altervista.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Frazer\",\n        \"lastName\": \"Cathro\",\n        \"email\": \"fcathro1@ucla.edu\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lemmie\",\n        \"lastName\": \"Ciric\",\n        \"email\": {\n            \"title\": \"lciric2@dmoz.org\",\n            \"metaList\": [\n                \"First\",\n                \"Second\"\n            ]\n        },\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Randy\",\n        \"lastName\": \"Boatwright\",\n        \"email\": \"rboatwright3@arstechnica.com\",\n        \"status\": \"Completed\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rolando\",\n        \"lastName\": \"Cyples\",\n        \"email\": \"rcyples4@biglobe.ne.jp\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lem\",\n        \"lastName\": \"Males\",\n        \"email\": \"lmales5@admin.ch\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Sayres\",\n        \"lastName\": \"Adelberg\",\n        \"email\": \"sadelberg6@uol.com.br\",\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Murray\",\n        \"lastName\": \"Bravington\",\n        \"email\": \"mbravington7@drupal.org\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Jena\",\n        \"lastName\": \"Swatheridge\",\n        \"email\": \"jswatheridge8@npr.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Annabel\",\n        \"lastName\": \"Nelsey\",\n        \"email\": \"anelsey9@google.com\",\n        \"gender\": \"Female\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Carin\",\n        \"lastName\": \"Robiou\",\n        \"email\": \"crobioua@skype.com\",\n        \"gender\": \"Female\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Anson\",\n        \"lastName\": \"Gamon\",\n        \"email\": \"agamonb@economist.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Brina\",\n        \"lastName\": \"Pirie\",\n        \"email\": \"bpiriec@stumbleupon.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Hermy\",\n        \"lastName\": \"Dyett\",\n        \"email\": \"hdyettd@boston.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Aime\",\n        \"lastName\": \"von Hagt\",\n        \"email\": \"avonhagte@nyu.edu\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Gusti\",\n        \"lastName\": \"Haycock\",\n        \"email\": \"ghaycockf@virginia.edu\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Mortimer\",\n        \"lastName\": \"Kunneke\",\n        \"email\": \"mkunnekeg@weather.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Barnie\",\n        \"lastName\": \"Pohls\",\n        \"email\": \"bpohlsh@columbia.edu\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Elliot\",\n        \"lastName\": \"Nealey\",\n        \"email\": \"enealeyi@cocolog-nifty.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Allsun\",\n        \"lastName\": \"Gong\",\n        \"email\": \"agongj@discuz.net\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Harwell\",\n        \"lastName\": \"Kegan\",\n        \"email\": \"hkegank@domainmarket.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Gilles\",\n        \"lastName\": \"Sandell\",\n        \"email\": \"gsandelll@apache.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Hilliard\",\n        \"lastName\": \"Beamish\",\n        \"email\": \"hbeamishm@shop-pro.jp\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Charley\",\n        \"lastName\": \"Kuschek\",\n        \"email\": \"ckuschekn@dropbox.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Danny\",\n        \"lastName\": \"Churchin\",\n        \"email\": \"dchurchino@bbc.co.uk\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Ervin\",\n        \"lastName\": \"Chatelain\",\n        \"email\": \"echatelainp@mac.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Milli\",\n        \"lastName\": \"Joseph\",\n        \"email\": \"mjosephq@merriam-webster.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Greer\",\n        \"lastName\": \"O'Doherty\",\n        \"email\": \"godohertyr@homestead.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Haroun\",\n        \"lastName\": \"Martensen\",\n        \"email\": \"hmartensens@skype.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Desiree\",\n        \"lastName\": \"Colwell\",\n        \"email\": \"dcolwellt@businessinsider.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Almeda\",\n        \"lastName\": \"Jowsey\",\n        \"email\": \"ajowseyu@ask.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Cinderella\",\n        \"lastName\": \"Dunnet\",\n        \"email\": \"cdunnetv@mac.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Hubert\",\n        \"lastName\": \"Legion\",\n        \"email\": \"hlegionw@ameblo.jp\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Costa\",\n        \"lastName\": \"Adamovsky\",\n        \"email\": \"cadamovskyx@joomla.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Kristan\",\n        \"lastName\": \"Bielfeld\",\n        \"email\": \"kbielfeldy@live.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Sammy\",\n        \"lastName\": \"Shermore\",\n        \"email\": \"sshermorez@washington.edu\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Kathi\",\n        \"lastName\": \"Dowyer\",\n        \"email\": \"kdowyer10@bluehost.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Kennith\",\n        \"lastName\": \"Whitehouse\",\n        \"email\": \"kwhitehouse11@cornell.edu\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Brianna\",\n        \"lastName\": \"Garland\",\n        \"email\": \"bgarland12@wikipedia.org\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Cristobal\",\n        \"lastName\": \"Mapholm\",\n        \"email\": \"cmapholm13@constantcontact.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Zia\",\n        \"lastName\": \"Harrowing\",\n        \"email\": \"zharrowing14@huffingtonpost.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Zabrina\",\n        \"lastName\": \"Gravener\",\n        \"email\": \"zgravener15@ameblo.jp\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Gregoor\",\n        \"lastName\": \"Cruz\",\n        \"email\": \"gcruz16@uol.com.br\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Julita\",\n        \"lastName\": \"Gemeau\",\n        \"email\": \"jgemeau17@bandcamp.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Gilbert\",\n        \"lastName\": \"Sallier\",\n        \"email\": \"gsallier18@dailymail.co.uk\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Bride\",\n        \"lastName\": \"Boniface\",\n        \"email\": \"bboniface19@howstuffworks.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Rodolph\",\n        \"lastName\": \"Mattussevich\",\n        \"email\": \"rmattussevich1a@nymag.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rowan\",\n        \"lastName\": \"Rizon\",\n        \"email\": \"rrizon1b@thetimes.co.uk\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Avie\",\n        \"lastName\": \"Nicolls\",\n        \"email\": \"anicolls1c@nbcnews.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Bram\",\n        \"lastName\": \"Kleinhaut\",\n        \"email\": \"bkleinhaut1d@imdb.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Carmita\",\n        \"lastName\": \"Costin\",\n        \"email\": \"ccostin1e@hibu.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Wash\",\n        \"lastName\": \"Vannuchi\",\n        \"email\": \"wvannuchi1f@japanpost.jp\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Nikki\",\n        \"lastName\": \"Faye\",\n        \"email\": \"nfaye1g@feedburner.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Aron\",\n        \"lastName\": \"Scimonelli\",\n        \"email\": \"ascimonelli1h@nationalgeographic.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Smitty\",\n        \"lastName\": \"Giacomello\",\n        \"email\": \"sgiacomello1i@google.co.uk\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Staci\",\n        \"lastName\": \"D'Elias\",\n        \"email\": \"sdelias1j@paginegialle.it\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Radcliffe\",\n        \"lastName\": \"Garbutt\",\n        \"email\": \"rgarbutt1k@thetimes.co.uk\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Maxwell\",\n        \"lastName\": \"Krikorian\",\n        \"email\": \"mkrikorian1l@ask.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Dunstan\",\n        \"lastName\": \"Chansonne\",\n        \"email\": \"dchansonne1m@posterous.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Isaak\",\n        \"lastName\": \"Faherty\",\n        \"email\": \"ifaherty1n@who.int\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Sawyere\",\n        \"lastName\": \"Ede\",\n        \"email\": \"sede1o@drupal.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Perren\",\n        \"lastName\": \"Daddow\",\n        \"email\": \"pdaddow1p@indiegogo.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Brendis\",\n        \"lastName\": \"Napier\",\n        \"email\": \"bnapier1q@multiply.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Francene\",\n        \"lastName\": \"Godbold\",\n        \"email\": \"fgodbold1r@joomla.org\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Moll\",\n        \"lastName\": \"Fludgate\",\n        \"email\": \"mfludgate1s@who.int\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Allayne\",\n        \"lastName\": \"Medhurst\",\n        \"email\": \"amedhurst1t@is.gd\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Genvieve\",\n        \"lastName\": \"Mellows\",\n        \"email\": \"gmellows1u@stumbleupon.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Rebe\",\n        \"lastName\": \"Durnford\",\n        \"email\": \"rdurnford1v@biglobe.ne.jp\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Thalia\",\n        \"lastName\": \"Joerning\",\n        \"email\": \"tjoerning1w@netscape.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Beckie\",\n        \"lastName\": \"Lammin\",\n        \"email\": \"blammin1x@gnu.org\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Kassandra\",\n        \"lastName\": \"Furney\",\n        \"email\": \"kfurney1y@surveymonkey.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Libbie\",\n        \"lastName\": \"Gladyer\",\n        \"email\": \"lgladyer1z@dropbox.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Kai\",\n        \"lastName\": \"Goldsbury\",\n        \"email\": \"kgoldsbury20@census.gov\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Arielle\",\n        \"lastName\": \"De Bell\",\n        \"email\": \"adebell21@addthis.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Ellary\",\n        \"lastName\": \"Warnock\",\n        \"email\": \"ewarnock22@ted.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Skelly\",\n        \"lastName\": \"Blakes\",\n        \"email\": \"sblakes23@reddit.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Roanne\",\n        \"lastName\": \"Stanyforth\",\n        \"email\": \"rstanyforth24@com.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Cash\",\n        \"lastName\": \"Fettis\",\n        \"email\": \"cfettis25@go.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Farleigh\",\n        \"lastName\": \"McDavid\",\n        \"email\": \"fmcdavid26@sbwire.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Holly\",\n        \"lastName\": \"Barfford\",\n        \"email\": \"hbarfford27@wsj.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Hurley\",\n        \"lastName\": \"Benaine\",\n        \"email\": \"hbenaine28@sun.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Maryjo\",\n        \"lastName\": \"Gilhooly\",\n        \"email\": \"mgilhooly29@tripod.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Annis\",\n        \"lastName\": \"Linkie\",\n        \"email\": \"alinkie2a@wp.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Mariel\",\n        \"lastName\": \"Husher\",\n        \"email\": \"mhusher2b@etsy.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Niels\",\n        \"lastName\": \"Klimontovich\",\n        \"email\": \"nklimontovich2c@surveymonkey.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Udall\",\n        \"lastName\": \"Linfitt\",\n        \"email\": \"ulinfitt2d@toplist.cz\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Isidore\",\n        \"lastName\": \"Kuhn\",\n        \"email\": \"ikuhn2e@cdc.gov\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rosemonde\",\n        \"lastName\": \"Kettle\",\n        \"email\": \"rkettle2f@techcrunch.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Cass\",\n        \"lastName\": \"Boot\",\n        \"email\": \"cboot2g@furl.net\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Montague\",\n        \"lastName\": \"Rossey\",\n        \"email\": \"mrossey2h@goo.gl\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Geno\",\n        \"lastName\": \"Jenkyn\",\n        \"email\": \"gjenkyn2i@opensource.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Esdras\",\n        \"lastName\": \"Skivington\",\n        \"email\": \"eskivington2j@answers.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Gabriello\",\n        \"lastName\": \"Luce\",\n        \"email\": \"gluce2k@nydailynews.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Magdalene\",\n        \"lastName\": \"Ilyunin\",\n        \"email\": \"milyunin2l@prweb.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Isidro\",\n        \"lastName\": \"Fawson\",\n        \"email\": \"ifawson2m@squidoo.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Blinny\",\n        \"lastName\": \"Palfrey\",\n        \"email\": \"bpalfrey2n@networksolutions.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Justen\",\n        \"lastName\": \"Kordas\",\n        \"email\": \"jkordas2o@symantec.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Damien\",\n        \"lastName\": \"Hallede\",\n        \"email\": \"dhallede2p@unicef.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Jaquelyn\",\n        \"lastName\": \"Rockhall\",\n        \"email\": \"jrockhall2q@vkontakte.ru\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Garrek\",\n        \"lastName\": \"Matignon\",\n        \"email\": \"gmatignon2r@noaa.gov\",\n        \"gender\": \"Male\"\n    }\n];\n\n  const schema = [\n    {\n      name: 'name',\n      displayName: 'Name',\n      width: 300,\n      resizable: true,\n      separator: true,\n      tooltip: true,\n      translate: a => ({\n        title: `${a.firstName} ${a.lastName}`,\n        firstName: a.firstName,\n        lastName: a.lastName\n      }),\n      cellType: 'AVATAR_WITH_TEXT',\n    },\n    {\n      name: 'email',\n      displayName: 'Email',\n      width: 350,\n      resizable: true,\n    },\n  ];\n\n  const values = ['comfortable', 'standard', 'compressed', 'tight'];\n\n  const style = {\n    display: 'flex',\n    flexWrap: 'wrap',\n  };\n\n  return (\n    <div style={style}>\n      {values.map((v, index) => (\n        <div\n          key={index}\n          style={{\n            margin: '20px',\n            width: '45%',\n          }}\n        >\n          <Heading>{v}</Heading>\n          <div\n            style={{\n              height: '350px',\n            }}\n          >\n            <Card shadow=\"light\" className=\"h-100\">\n              <Table size={v} data={data} schema={schema} />\n            </Card>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\n    "
    ]
  },
  "Table   Sync Loader Schema": {
    "prefix": "Table   Sync Loader Schema",
    "description": "Sync Loader Schema",
    "body": [
      "import { Card, Table } from '@innovaccer/design-system';\n    () => {\n  const loading = true;\n\n  const error = false;\n\n  const pageSize = 5;\n\n  const withCheckbox = true;\n\n  const applyLoaderSchema = true;\n\n  const applySchema = false;\n\n  const applyData = false;\n\n  return (\n    <div\n      style={{\n        height: '350px',\n        // overflow: 'hidden'\n      }}\n    >\n      <Card className=\"h-100 overflow-hidden\">\n        <Table\n          loading={loading}\n          error={error}\n          pageSize={pageSize}\n          withCheckbox={withCheckbox}\n          loaderSchema={applyLoaderSchema ? loaderSchema : []}\n          data={applyData ? data : []}\n          schema={applySchema ? schema : []}\n          showMenu={true}\n          withHeader={true}\n          headerOptions={{\n            withSearch: true,\n          }}\n        />\n      </Card>\n    </div>\n  );\n}\n    "
    ]
  },
  "Table   Type": {
    "prefix": "Table   Type",
    "description": "Type",
    "body": [
      "import { Heading, Card, Table } from '@innovaccer/design-system';\n    \n() => {\n  const data = [\n    {\n        \"firstName\": \"Brooke\",\n        \"lastName\": \"Heeran\",\n        \"email\": \"bheeran0@altervista.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Frazer\",\n        \"lastName\": \"Cathro\",\n        \"email\": \"fcathro1@ucla.edu\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lemmie\",\n        \"lastName\": \"Ciric\",\n        \"email\": {\n            \"title\": \"lciric2@dmoz.org\",\n            \"metaList\": [\n                \"First\",\n                \"Second\"\n            ]\n        },\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Randy\",\n        \"lastName\": \"Boatwright\",\n        \"email\": \"rboatwright3@arstechnica.com\",\n        \"status\": \"Completed\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rolando\",\n        \"lastName\": \"Cyples\",\n        \"email\": \"rcyples4@biglobe.ne.jp\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lem\",\n        \"lastName\": \"Males\",\n        \"email\": \"lmales5@admin.ch\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Sayres\",\n        \"lastName\": \"Adelberg\",\n        \"email\": \"sadelberg6@uol.com.br\",\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Murray\",\n        \"lastName\": \"Bravington\",\n        \"email\": \"mbravington7@drupal.org\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Jena\",\n        \"lastName\": \"Swatheridge\",\n        \"email\": \"jswatheridge8@npr.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Annabel\",\n        \"lastName\": \"Nelsey\",\n        \"email\": \"anelsey9@google.com\",\n        \"gender\": \"Female\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Carin\",\n        \"lastName\": \"Robiou\",\n        \"email\": \"crobioua@skype.com\",\n        \"gender\": \"Female\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Anson\",\n        \"lastName\": \"Gamon\",\n        \"email\": \"agamonb@economist.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Brina\",\n        \"lastName\": \"Pirie\",\n        \"email\": \"bpiriec@stumbleupon.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Hermy\",\n        \"lastName\": \"Dyett\",\n        \"email\": \"hdyettd@boston.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Aime\",\n        \"lastName\": \"von Hagt\",\n        \"email\": \"avonhagte@nyu.edu\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Gusti\",\n        \"lastName\": \"Haycock\",\n        \"email\": \"ghaycockf@virginia.edu\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Mortimer\",\n        \"lastName\": \"Kunneke\",\n        \"email\": \"mkunnekeg@weather.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Barnie\",\n        \"lastName\": \"Pohls\",\n        \"email\": \"bpohlsh@columbia.edu\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Elliot\",\n        \"lastName\": \"Nealey\",\n        \"email\": \"enealeyi@cocolog-nifty.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Allsun\",\n        \"lastName\": \"Gong\",\n        \"email\": \"agongj@discuz.net\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Harwell\",\n        \"lastName\": \"Kegan\",\n        \"email\": \"hkegank@domainmarket.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Gilles\",\n        \"lastName\": \"Sandell\",\n        \"email\": \"gsandelll@apache.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Hilliard\",\n        \"lastName\": \"Beamish\",\n        \"email\": \"hbeamishm@shop-pro.jp\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Charley\",\n        \"lastName\": \"Kuschek\",\n        \"email\": \"ckuschekn@dropbox.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Danny\",\n        \"lastName\": \"Churchin\",\n        \"email\": \"dchurchino@bbc.co.uk\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Ervin\",\n        \"lastName\": \"Chatelain\",\n        \"email\": \"echatelainp@mac.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Milli\",\n        \"lastName\": \"Joseph\",\n        \"email\": \"mjosephq@merriam-webster.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Greer\",\n        \"lastName\": \"O'Doherty\",\n        \"email\": \"godohertyr@homestead.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Haroun\",\n        \"lastName\": \"Martensen\",\n        \"email\": \"hmartensens@skype.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Desiree\",\n        \"lastName\": \"Colwell\",\n        \"email\": \"dcolwellt@businessinsider.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Almeda\",\n        \"lastName\": \"Jowsey\",\n        \"email\": \"ajowseyu@ask.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Cinderella\",\n        \"lastName\": \"Dunnet\",\n        \"email\": \"cdunnetv@mac.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Hubert\",\n        \"lastName\": \"Legion\",\n        \"email\": \"hlegionw@ameblo.jp\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Costa\",\n        \"lastName\": \"Adamovsky\",\n        \"email\": \"cadamovskyx@joomla.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Kristan\",\n        \"lastName\": \"Bielfeld\",\n        \"email\": \"kbielfeldy@live.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Sammy\",\n        \"lastName\": \"Shermore\",\n        \"email\": \"sshermorez@washington.edu\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Kathi\",\n        \"lastName\": \"Dowyer\",\n        \"email\": \"kdowyer10@bluehost.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Kennith\",\n        \"lastName\": \"Whitehouse\",\n        \"email\": \"kwhitehouse11@cornell.edu\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Brianna\",\n        \"lastName\": \"Garland\",\n        \"email\": \"bgarland12@wikipedia.org\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Cristobal\",\n        \"lastName\": \"Mapholm\",\n        \"email\": \"cmapholm13@constantcontact.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Zia\",\n        \"lastName\": \"Harrowing\",\n        \"email\": \"zharrowing14@huffingtonpost.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Zabrina\",\n        \"lastName\": \"Gravener\",\n        \"email\": \"zgravener15@ameblo.jp\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Gregoor\",\n        \"lastName\": \"Cruz\",\n        \"email\": \"gcruz16@uol.com.br\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Julita\",\n        \"lastName\": \"Gemeau\",\n        \"email\": \"jgemeau17@bandcamp.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Gilbert\",\n        \"lastName\": \"Sallier\",\n        \"email\": \"gsallier18@dailymail.co.uk\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Bride\",\n        \"lastName\": \"Boniface\",\n        \"email\": \"bboniface19@howstuffworks.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Rodolph\",\n        \"lastName\": \"Mattussevich\",\n        \"email\": \"rmattussevich1a@nymag.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rowan\",\n        \"lastName\": \"Rizon\",\n        \"email\": \"rrizon1b@thetimes.co.uk\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Avie\",\n        \"lastName\": \"Nicolls\",\n        \"email\": \"anicolls1c@nbcnews.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Bram\",\n        \"lastName\": \"Kleinhaut\",\n        \"email\": \"bkleinhaut1d@imdb.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Carmita\",\n        \"lastName\": \"Costin\",\n        \"email\": \"ccostin1e@hibu.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Wash\",\n        \"lastName\": \"Vannuchi\",\n        \"email\": \"wvannuchi1f@japanpost.jp\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Nikki\",\n        \"lastName\": \"Faye\",\n        \"email\": \"nfaye1g@feedburner.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Aron\",\n        \"lastName\": \"Scimonelli\",\n        \"email\": \"ascimonelli1h@nationalgeographic.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Smitty\",\n        \"lastName\": \"Giacomello\",\n        \"email\": \"sgiacomello1i@google.co.uk\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Staci\",\n        \"lastName\": \"D'Elias\",\n        \"email\": \"sdelias1j@paginegialle.it\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Radcliffe\",\n        \"lastName\": \"Garbutt\",\n        \"email\": \"rgarbutt1k@thetimes.co.uk\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Maxwell\",\n        \"lastName\": \"Krikorian\",\n        \"email\": \"mkrikorian1l@ask.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Dunstan\",\n        \"lastName\": \"Chansonne\",\n        \"email\": \"dchansonne1m@posterous.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Isaak\",\n        \"lastName\": \"Faherty\",\n        \"email\": \"ifaherty1n@who.int\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Sawyere\",\n        \"lastName\": \"Ede\",\n        \"email\": \"sede1o@drupal.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Perren\",\n        \"lastName\": \"Daddow\",\n        \"email\": \"pdaddow1p@indiegogo.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Brendis\",\n        \"lastName\": \"Napier\",\n        \"email\": \"bnapier1q@multiply.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Francene\",\n        \"lastName\": \"Godbold\",\n        \"email\": \"fgodbold1r@joomla.org\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Moll\",\n        \"lastName\": \"Fludgate\",\n        \"email\": \"mfludgate1s@who.int\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Allayne\",\n        \"lastName\": \"Medhurst\",\n        \"email\": \"amedhurst1t@is.gd\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Genvieve\",\n        \"lastName\": \"Mellows\",\n        \"email\": \"gmellows1u@stumbleupon.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Rebe\",\n        \"lastName\": \"Durnford\",\n        \"email\": \"rdurnford1v@biglobe.ne.jp\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Thalia\",\n        \"lastName\": \"Joerning\",\n        \"email\": \"tjoerning1w@netscape.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Beckie\",\n        \"lastName\": \"Lammin\",\n        \"email\": \"blammin1x@gnu.org\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Kassandra\",\n        \"lastName\": \"Furney\",\n        \"email\": \"kfurney1y@surveymonkey.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Libbie\",\n        \"lastName\": \"Gladyer\",\n        \"email\": \"lgladyer1z@dropbox.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Kai\",\n        \"lastName\": \"Goldsbury\",\n        \"email\": \"kgoldsbury20@census.gov\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Arielle\",\n        \"lastName\": \"De Bell\",\n        \"email\": \"adebell21@addthis.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Ellary\",\n        \"lastName\": \"Warnock\",\n        \"email\": \"ewarnock22@ted.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Skelly\",\n        \"lastName\": \"Blakes\",\n        \"email\": \"sblakes23@reddit.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Roanne\",\n        \"lastName\": \"Stanyforth\",\n        \"email\": \"rstanyforth24@com.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Cash\",\n        \"lastName\": \"Fettis\",\n        \"email\": \"cfettis25@go.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Farleigh\",\n        \"lastName\": \"McDavid\",\n        \"email\": \"fmcdavid26@sbwire.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Holly\",\n        \"lastName\": \"Barfford\",\n        \"email\": \"hbarfford27@wsj.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Hurley\",\n        \"lastName\": \"Benaine\",\n        \"email\": \"hbenaine28@sun.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Maryjo\",\n        \"lastName\": \"Gilhooly\",\n        \"email\": \"mgilhooly29@tripod.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Annis\",\n        \"lastName\": \"Linkie\",\n        \"email\": \"alinkie2a@wp.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Mariel\",\n        \"lastName\": \"Husher\",\n        \"email\": \"mhusher2b@etsy.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Niels\",\n        \"lastName\": \"Klimontovich\",\n        \"email\": \"nklimontovich2c@surveymonkey.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Udall\",\n        \"lastName\": \"Linfitt\",\n        \"email\": \"ulinfitt2d@toplist.cz\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Isidore\",\n        \"lastName\": \"Kuhn\",\n        \"email\": \"ikuhn2e@cdc.gov\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rosemonde\",\n        \"lastName\": \"Kettle\",\n        \"email\": \"rkettle2f@techcrunch.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Cass\",\n        \"lastName\": \"Boot\",\n        \"email\": \"cboot2g@furl.net\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Montague\",\n        \"lastName\": \"Rossey\",\n        \"email\": \"mrossey2h@goo.gl\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Geno\",\n        \"lastName\": \"Jenkyn\",\n        \"email\": \"gjenkyn2i@opensource.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Esdras\",\n        \"lastName\": \"Skivington\",\n        \"email\": \"eskivington2j@answers.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Gabriello\",\n        \"lastName\": \"Luce\",\n        \"email\": \"gluce2k@nydailynews.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Magdalene\",\n        \"lastName\": \"Ilyunin\",\n        \"email\": \"milyunin2l@prweb.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Isidro\",\n        \"lastName\": \"Fawson\",\n        \"email\": \"ifawson2m@squidoo.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Blinny\",\n        \"lastName\": \"Palfrey\",\n        \"email\": \"bpalfrey2n@networksolutions.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Justen\",\n        \"lastName\": \"Kordas\",\n        \"email\": \"jkordas2o@symantec.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Damien\",\n        \"lastName\": \"Hallede\",\n        \"email\": \"dhallede2p@unicef.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Jaquelyn\",\n        \"lastName\": \"Rockhall\",\n        \"email\": \"jrockhall2q@vkontakte.ru\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Garrek\",\n        \"lastName\": \"Matignon\",\n        \"email\": \"gmatignon2r@noaa.gov\",\n        \"gender\": \"Male\"\n    }\n];\n\n  const schema = [\n    {\n      name: 'name',\n      displayName: 'Name',\n      width: 300,\n      resizable: true,\n      separator: true,\n      tooltip: true,\n      translate: a => ({\n        title: `${a.firstName} ${a.lastName}`,\n        firstName: a.firstName,\n        lastName: a.lastName\n      }),\n      cellType: 'AVATAR_WITH_TEXT',\n    },\n    {\n      name: 'email',\n      displayName: 'Email',\n      width: 350,\n      resizable: true,\n    },\n  ];\n\n  const values = ['resource', 'data'];\n\n  const style = {\n    display: 'flex',\n    flexWrap: 'wrap',\n  };\n\n  return (\n    <div style={style}>\n      {values.map((v, index) => (\n        <div\n          key={index}\n          style={{\n            margin: '20px',\n            width: '45%',\n          }}\n        >\n          <Heading>{v}</Heading>\n          <div\n            style={{\n              height: '350px',\n            }}\n          >\n            <Card shadow=\"light\" className=\"h-100\">\n              <Table\n                type={v}\n                data={data}\n                schema={schema}\n                onRowClick={(rowData, rowIndex) =>\n                  action(`on-row-click:- rowIndex: ${rowIndex} data: ${JSON.stringify(rowData)}`)()\n                }\n              />\n            </Card>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\n    "
    ]
  },
  "Table   With Checkbox": {
    "prefix": "Table   With Checkbox",
    "description": "With Checkbox",
    "body": [
      "import { Heading, Card, Table } from '@innovaccer/design-system';\n    \n() => {\n  const data = [\n    {\n        \"firstName\": \"Brooke\",\n        \"lastName\": \"Heeran\",\n        \"email\": \"bheeran0@altervista.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Frazer\",\n        \"lastName\": \"Cathro\",\n        \"email\": \"fcathro1@ucla.edu\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lemmie\",\n        \"lastName\": \"Ciric\",\n        \"email\": {\n            \"title\": \"lciric2@dmoz.org\",\n            \"metaList\": [\n                \"First\",\n                \"Second\"\n            ]\n        },\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Randy\",\n        \"lastName\": \"Boatwright\",\n        \"email\": \"rboatwright3@arstechnica.com\",\n        \"status\": \"Completed\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rolando\",\n        \"lastName\": \"Cyples\",\n        \"email\": \"rcyples4@biglobe.ne.jp\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lem\",\n        \"lastName\": \"Males\",\n        \"email\": \"lmales5@admin.ch\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Sayres\",\n        \"lastName\": \"Adelberg\",\n        \"email\": \"sadelberg6@uol.com.br\",\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Murray\",\n        \"lastName\": \"Bravington\",\n        \"email\": \"mbravington7@drupal.org\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Jena\",\n        \"lastName\": \"Swatheridge\",\n        \"email\": \"jswatheridge8@npr.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Annabel\",\n        \"lastName\": \"Nelsey\",\n        \"email\": \"anelsey9@google.com\",\n        \"gender\": \"Female\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Carin\",\n        \"lastName\": \"Robiou\",\n        \"email\": \"crobioua@skype.com\",\n        \"gender\": \"Female\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Anson\",\n        \"lastName\": \"Gamon\",\n        \"email\": \"agamonb@economist.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Brina\",\n        \"lastName\": \"Pirie\",\n        \"email\": \"bpiriec@stumbleupon.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Hermy\",\n        \"lastName\": \"Dyett\",\n        \"email\": \"hdyettd@boston.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Aime\",\n        \"lastName\": \"von Hagt\",\n        \"email\": \"avonhagte@nyu.edu\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Gusti\",\n        \"lastName\": \"Haycock\",\n        \"email\": \"ghaycockf@virginia.edu\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Mortimer\",\n        \"lastName\": \"Kunneke\",\n        \"email\": \"mkunnekeg@weather.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Barnie\",\n        \"lastName\": \"Pohls\",\n        \"email\": \"bpohlsh@columbia.edu\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Elliot\",\n        \"lastName\": \"Nealey\",\n        \"email\": \"enealeyi@cocolog-nifty.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Allsun\",\n        \"lastName\": \"Gong\",\n        \"email\": \"agongj@discuz.net\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Harwell\",\n        \"lastName\": \"Kegan\",\n        \"email\": \"hkegank@domainmarket.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Gilles\",\n        \"lastName\": \"Sandell\",\n        \"email\": \"gsandelll@apache.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Hilliard\",\n        \"lastName\": \"Beamish\",\n        \"email\": \"hbeamishm@shop-pro.jp\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Charley\",\n        \"lastName\": \"Kuschek\",\n        \"email\": \"ckuschekn@dropbox.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Danny\",\n        \"lastName\": \"Churchin\",\n        \"email\": \"dchurchino@bbc.co.uk\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Ervin\",\n        \"lastName\": \"Chatelain\",\n        \"email\": \"echatelainp@mac.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Milli\",\n        \"lastName\": \"Joseph\",\n        \"email\": \"mjosephq@merriam-webster.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Greer\",\n        \"lastName\": \"O'Doherty\",\n        \"email\": \"godohertyr@homestead.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Haroun\",\n        \"lastName\": \"Martensen\",\n        \"email\": \"hmartensens@skype.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Desiree\",\n        \"lastName\": \"Colwell\",\n        \"email\": \"dcolwellt@businessinsider.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Almeda\",\n        \"lastName\": \"Jowsey\",\n        \"email\": \"ajowseyu@ask.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Cinderella\",\n        \"lastName\": \"Dunnet\",\n        \"email\": \"cdunnetv@mac.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Hubert\",\n        \"lastName\": \"Legion\",\n        \"email\": \"hlegionw@ameblo.jp\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Costa\",\n        \"lastName\": \"Adamovsky\",\n        \"email\": \"cadamovskyx@joomla.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Kristan\",\n        \"lastName\": \"Bielfeld\",\n        \"email\": \"kbielfeldy@live.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Sammy\",\n        \"lastName\": \"Shermore\",\n        \"email\": \"sshermorez@washington.edu\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Kathi\",\n        \"lastName\": \"Dowyer\",\n        \"email\": \"kdowyer10@bluehost.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Kennith\",\n        \"lastName\": \"Whitehouse\",\n        \"email\": \"kwhitehouse11@cornell.edu\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Brianna\",\n        \"lastName\": \"Garland\",\n        \"email\": \"bgarland12@wikipedia.org\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Cristobal\",\n        \"lastName\": \"Mapholm\",\n        \"email\": \"cmapholm13@constantcontact.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Zia\",\n        \"lastName\": \"Harrowing\",\n        \"email\": \"zharrowing14@huffingtonpost.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Zabrina\",\n        \"lastName\": \"Gravener\",\n        \"email\": \"zgravener15@ameblo.jp\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Gregoor\",\n        \"lastName\": \"Cruz\",\n        \"email\": \"gcruz16@uol.com.br\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Julita\",\n        \"lastName\": \"Gemeau\",\n        \"email\": \"jgemeau17@bandcamp.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Gilbert\",\n        \"lastName\": \"Sallier\",\n        \"email\": \"gsallier18@dailymail.co.uk\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Bride\",\n        \"lastName\": \"Boniface\",\n        \"email\": \"bboniface19@howstuffworks.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Rodolph\",\n        \"lastName\": \"Mattussevich\",\n        \"email\": \"rmattussevich1a@nymag.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rowan\",\n        \"lastName\": \"Rizon\",\n        \"email\": \"rrizon1b@thetimes.co.uk\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Avie\",\n        \"lastName\": \"Nicolls\",\n        \"email\": \"anicolls1c@nbcnews.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Bram\",\n        \"lastName\": \"Kleinhaut\",\n        \"email\": \"bkleinhaut1d@imdb.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Carmita\",\n        \"lastName\": \"Costin\",\n        \"email\": \"ccostin1e@hibu.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Wash\",\n        \"lastName\": \"Vannuchi\",\n        \"email\": \"wvannuchi1f@japanpost.jp\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Nikki\",\n        \"lastName\": \"Faye\",\n        \"email\": \"nfaye1g@feedburner.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Aron\",\n        \"lastName\": \"Scimonelli\",\n        \"email\": \"ascimonelli1h@nationalgeographic.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Smitty\",\n        \"lastName\": \"Giacomello\",\n        \"email\": \"sgiacomello1i@google.co.uk\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Staci\",\n        \"lastName\": \"D'Elias\",\n        \"email\": \"sdelias1j@paginegialle.it\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Radcliffe\",\n        \"lastName\": \"Garbutt\",\n        \"email\": \"rgarbutt1k@thetimes.co.uk\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Maxwell\",\n        \"lastName\": \"Krikorian\",\n        \"email\": \"mkrikorian1l@ask.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Dunstan\",\n        \"lastName\": \"Chansonne\",\n        \"email\": \"dchansonne1m@posterous.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Isaak\",\n        \"lastName\": \"Faherty\",\n        \"email\": \"ifaherty1n@who.int\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Sawyere\",\n        \"lastName\": \"Ede\",\n        \"email\": \"sede1o@drupal.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Perren\",\n        \"lastName\": \"Daddow\",\n        \"email\": \"pdaddow1p@indiegogo.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Brendis\",\n        \"lastName\": \"Napier\",\n        \"email\": \"bnapier1q@multiply.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Francene\",\n        \"lastName\": \"Godbold\",\n        \"email\": \"fgodbold1r@joomla.org\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Moll\",\n        \"lastName\": \"Fludgate\",\n        \"email\": \"mfludgate1s@who.int\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Allayne\",\n        \"lastName\": \"Medhurst\",\n        \"email\": \"amedhurst1t@is.gd\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Genvieve\",\n        \"lastName\": \"Mellows\",\n        \"email\": \"gmellows1u@stumbleupon.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Rebe\",\n        \"lastName\": \"Durnford\",\n        \"email\": \"rdurnford1v@biglobe.ne.jp\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Thalia\",\n        \"lastName\": \"Joerning\",\n        \"email\": \"tjoerning1w@netscape.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Beckie\",\n        \"lastName\": \"Lammin\",\n        \"email\": \"blammin1x@gnu.org\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Kassandra\",\n        \"lastName\": \"Furney\",\n        \"email\": \"kfurney1y@surveymonkey.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Libbie\",\n        \"lastName\": \"Gladyer\",\n        \"email\": \"lgladyer1z@dropbox.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Kai\",\n        \"lastName\": \"Goldsbury\",\n        \"email\": \"kgoldsbury20@census.gov\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Arielle\",\n        \"lastName\": \"De Bell\",\n        \"email\": \"adebell21@addthis.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Ellary\",\n        \"lastName\": \"Warnock\",\n        \"email\": \"ewarnock22@ted.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Skelly\",\n        \"lastName\": \"Blakes\",\n        \"email\": \"sblakes23@reddit.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Roanne\",\n        \"lastName\": \"Stanyforth\",\n        \"email\": \"rstanyforth24@com.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Cash\",\n        \"lastName\": \"Fettis\",\n        \"email\": \"cfettis25@go.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Farleigh\",\n        \"lastName\": \"McDavid\",\n        \"email\": \"fmcdavid26@sbwire.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Holly\",\n        \"lastName\": \"Barfford\",\n        \"email\": \"hbarfford27@wsj.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Hurley\",\n        \"lastName\": \"Benaine\",\n        \"email\": \"hbenaine28@sun.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Maryjo\",\n        \"lastName\": \"Gilhooly\",\n        \"email\": \"mgilhooly29@tripod.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Annis\",\n        \"lastName\": \"Linkie\",\n        \"email\": \"alinkie2a@wp.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Mariel\",\n        \"lastName\": \"Husher\",\n        \"email\": \"mhusher2b@etsy.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Niels\",\n        \"lastName\": \"Klimontovich\",\n        \"email\": \"nklimontovich2c@surveymonkey.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Udall\",\n        \"lastName\": \"Linfitt\",\n        \"email\": \"ulinfitt2d@toplist.cz\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Isidore\",\n        \"lastName\": \"Kuhn\",\n        \"email\": \"ikuhn2e@cdc.gov\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rosemonde\",\n        \"lastName\": \"Kettle\",\n        \"email\": \"rkettle2f@techcrunch.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Cass\",\n        \"lastName\": \"Boot\",\n        \"email\": \"cboot2g@furl.net\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Montague\",\n        \"lastName\": \"Rossey\",\n        \"email\": \"mrossey2h@goo.gl\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Geno\",\n        \"lastName\": \"Jenkyn\",\n        \"email\": \"gjenkyn2i@opensource.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Esdras\",\n        \"lastName\": \"Skivington\",\n        \"email\": \"eskivington2j@answers.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Gabriello\",\n        \"lastName\": \"Luce\",\n        \"email\": \"gluce2k@nydailynews.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Magdalene\",\n        \"lastName\": \"Ilyunin\",\n        \"email\": \"milyunin2l@prweb.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Isidro\",\n        \"lastName\": \"Fawson\",\n        \"email\": \"ifawson2m@squidoo.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Blinny\",\n        \"lastName\": \"Palfrey\",\n        \"email\": \"bpalfrey2n@networksolutions.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Justen\",\n        \"lastName\": \"Kordas\",\n        \"email\": \"jkordas2o@symantec.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Damien\",\n        \"lastName\": \"Hallede\",\n        \"email\": \"dhallede2p@unicef.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Jaquelyn\",\n        \"lastName\": \"Rockhall\",\n        \"email\": \"jrockhall2q@vkontakte.ru\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Garrek\",\n        \"lastName\": \"Matignon\",\n        \"email\": \"gmatignon2r@noaa.gov\",\n        \"gender\": \"Male\"\n    }\n];\n\n  const schema = [\n    {\n      name: 'name',\n      displayName: 'Name',  \n      resizable: true,\n      separator: true,\n      tooltip: true,\n      translate: a => ({\n        title: `${a.firstName} ${a.lastName}`,\n        firstName: a.firstName,\n        lastName: a.lastName\n      }),\n      cellType: 'AVATAR_WITH_TEXT',\n    },\n    {\n      name: 'email',\n      displayName: 'Email',\n      width: 350,\n      resizable: true,\n    },\n  ];\n\n  const values = [true, false];\n\n  const style = {\n    display: 'flex',\n    flexWrap: 'wrap',\n  };\n\n  return (\n   <div style={style}>\n      {values.map((v, index) => (\n        <div\n          key={index}\n          style={{\n            margin: '20px',\n            width: '45%',\n          }}\n        >\n          <Heading>{`withPagination: ${v}`}</Heading>\n          <div\n            style={{\n              height: '350px',\n            }}\n          >\n            <Card shadow=\"light\" className=\"h-100\">\n              <Table\n                data={data}\n                schema={schema}\n                withCheckbox={true}\n                withPagination={v}\n                onSelect={(rowIndex, selected, selectedList, selectAll) => console.log(`on-select:- rowIndex: ${rowIndex} selected: ${selected} selectedList: ${JSON.stringify(selectedList)} selectAll: ${selectAll}`)}\n                pageSize={15}\n                onPageChange={newPage => console.log(`on-page-change:- ${newPage}`)}\n              />\n            </Card>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\n    "
    ]
  },
  "Table   With Editable Cell": {
    "prefix": "Table   With Editable Cell",
    "description": "With Editable Cell",
    "body": [
      "import { PlaceholderParagraph, EditableInput, Card, Table } from '@innovaccer/design-system';\n    \n() => {\n  const data = [\n    {\n        \"firstName\": \"Brooke\",\n        \"lastName\": \"Heeran\",\n        \"email\": \"bheeran0@altervista.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Frazer\",\n        \"lastName\": \"Cathro\",\n        \"email\": \"fcathro1@ucla.edu\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lemmie\",\n        \"lastName\": \"Ciric\",\n        \"email\": {\n            \"title\": \"lciric2@dmoz.org\",\n            \"metaList\": [\n                \"First\",\n                \"Second\"\n            ]\n        },\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Randy\",\n        \"lastName\": \"Boatwright\",\n        \"email\": \"rboatwright3@arstechnica.com\",\n        \"status\": \"Completed\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rolando\",\n        \"lastName\": \"Cyples\",\n        \"email\": \"rcyples4@biglobe.ne.jp\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lem\",\n        \"lastName\": \"Males\",\n        \"email\": \"lmales5@admin.ch\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Sayres\",\n        \"lastName\": \"Adelberg\",\n        \"email\": \"sadelberg6@uol.com.br\",\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Murray\",\n        \"lastName\": \"Bravington\",\n        \"email\": \"mbravington7@drupal.org\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Jena\",\n        \"lastName\": \"Swatheridge\",\n        \"email\": \"jswatheridge8@npr.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Annabel\",\n        \"lastName\": \"Nelsey\",\n        \"email\": \"anelsey9@google.com\",\n        \"gender\": \"Female\",\n        \"status\": \"Completed\"\n    }\n];\n\n  const schema = [\n    {\n      name: 'name',\n      displayName: 'Name',\n      width: '40%',\n      resizable: true,\n      separator: true,\n      tooltip: true,\n      translate: a => ({\n        title: `${a.firstName} ${a.lastName}`,\n        firstName: a.firstName,\n        lastName: a.lastName\n      }),\n      filters: [\n        { label: 'A-G', value: 'a-g' },\n        { label: 'H-R', value: 'h-r' },\n        { label: 'S-Z', value: 's-z' },\n      ],\n      onFilterChange: (a, filters) => {\n        for (const filter of filters) {\n          switch (filter) {\n            case 'a-g':\n              if (a.firstName[0].toLowerCase() >= 'a' && a.firstName[0].toLowerCase() <= 'g') return true;\n              break;\n            case 'h-r':\n              if (a.firstName[0].toLowerCase() >= 'h' && a.firstName[0].toLowerCase() <= 'r') return true;\n              break;\n            case 's-z':\n              if (a.firstName[0].toLowerCase() >= 's' && a.firstName[0].toLowerCase() <= 'z') return true;\n              break;\n          }\n        }\n        return false;\n      },\n      cellType: 'AVATAR_WITH_TEXT',\n    },\n    {\n      name: 'email',\n      displayName: 'Email',\n      width: 350,\n      resizable: true,\n      sorting: false,\n      cellType: 'WITH_META_LIST'\n    },\n    {\n      name: 'gender',\n      displayName: 'Gender',\n      width: 200,\n      resizable: true,\n      comparator: (a, b) => a.gender.localeCompare(b.gender),\n      cellType: 'STATUS_HINT',\n      translate: a => ({\n        title: a.gender,\n        statusAppearance: (a.gender === 'Female') ? 'alert' : 'success'\n      }),\n      filters: [\n        { label: 'Male', value: 'male' },\n        { label: 'Female', value: 'female' },\n      ],\n      onFilterChange: (a, filters) => {\n        for (const filter of filters) {\n          if (a.gender.toLowerCase() === filter) return true;\n        }\n        return false;\n      },\n    },\n    {\n      name: 'icon',\n      displayName: 'Icon',\n      width: 100,\n      resizable: true,\n      align: 'center',\n      cellType: 'ICON',\n      sorting: false,\n      translate: _ => ({\n        icon: 'events'\n      })\n    },\n    {\n      name: 'customCell',\n      displayName: 'Custom Cell',\n      width: 200,\n      resizable: true,\n      separator: true,\n      sorting: false,\n      cellRenderer: (props) => {\n        const { loading } = props;\n\n        if (loading) return (\n          <PlaceholderParagraph length=\"medium\" />\n        );\n\n        const [weight, setWeight] = React.useState('');\n\n        const onChangeWeight = (value) => {\n          setWeight(value);\n        };\n\n        return (\n          <EditableInput\n            placeholder=\"Add Weight\"\n            value={weight}\n            onChange={onChangeWeight}\n            size=\"tiny\"\n          />\n        );\n      }\n    },\n  ];\n\n  const loaderSchema = [\n    {\n        \"name\": \"name\",\n        \"displayName\": \"Name\",\n        \"width\": \"40%\",\n        \"resizable\": true,\n        \"tooltip\": true,\n        \"separator\": true,\n        \"filters\": [\n            {\n                \"label\": \"A-G\",\n                \"value\": \"a-g\"\n            },\n            {\n                \"label\": \"H-R\",\n                \"value\": \"h-r\"\n            },\n            {\n                \"label\": \"S-Z\",\n                \"value\": \"s-z\"\n            }\n        ],\n        \"cellType\": \"AVATAR_WITH_TEXT\"\n    },\n    {\n        \"name\": \"email\",\n        \"displayName\": \"Email\",\n        \"width\": 250,\n        \"resizable\": true,\n        \"sorting\": false,\n        \"cellType\": \"WITH_META_LIST\"\n    },\n    {\n        \"name\": \"gender\",\n        \"displayName\": \"Gender\",\n        \"width\": 180,\n        \"resizable\": true,\n        \"cellType\": \"STATUS_HINT\",\n        \"filters\": [\n            {\n                \"label\": \"Male\",\n                \"value\": \"male\"\n            },\n            {\n                \"label\": \"Female\",\n                \"value\": \"female\"\n            }\n        ]\n    },\n    {\n        \"name\": \"icon\",\n        \"displayName\": \"Icon\",\n        \"width\": 100,\n        \"resizable\": true,\n        \"align\": \"center\",\n        \"cellType\": \"ICON\"\n    },\n    {\n        \"name\": \"customCell\",\n        \"displayName\": \"Custom Cell\",\n        \"width\": 200,\n        \"resizable\": true,\n        \"cellType\": \"WITH_META_LIST\"\n    }\n];\n\n  return (\n    <div\n      style={{\n        height: '450px',\n      }}\n    >\n      <Card className=\"h-100 overflow-hidden\">\n        <Table\n          loaderSchema={loaderSchema}\n          data={data}\n          schema={schema}\n          withHeader={true}\n          headerOptions={{\n            withSearch: true\n          }}\n          onSearch={(currData, searchTerm) => {\n            return currData.filter(d =>\n              d.firstName.toLowerCase().match(searchTerm.toLowerCase())\n              || d.lastName.toLowerCase().match(searchTerm.toLowerCase())\n            );\n          }}\n          withCheckbox={true}\n          onSelect={(rowIndex, selected, selectedList, selectAll) => console.log(`on-select:- rowIndex: ${rowIndex} selected: ${selected} selectedList: ${JSON.stringify(selectedList)} selectAll: ${selectAll}`)}\n          withPagination={true}\n          pageSize={5}\n          onPageChange={newPage => console.log(`on-page-change:- ${newPage}`)}\n        />\n      </Card>\n    </div>\n  );\n};\n\n    "
    ]
  },
  "Table   With Error Template": {
    "prefix": "Table   With Error Template",
    "description": "With Error Template",
    "body": [
      "import { Button, Heading, Card, Table } from '@innovaccer/design-system';\n    \n() => {\n  const schema = [\n    {\n      name: 'name',\n      displayName: 'Name',\n      width: 300,\n      resizable: true,\n      separator: true,\n      tooltip: true,\n      translate: a => ({\n        title: `${a.firstName} ${a.lastName}`,\n        firstName: a.firstName,\n        lastName: a.lastName\n      }),\n      filters: [\n        { label: 'A-G', value: 'a-g' },\n        { label: 'H-R', value: 'h-r' },\n        { label: 'S-Z', value: 's-z' },\n      ],\n      onFilterChange: (a, filters) => {\n        for (const filter of filters) {\n          switch (filter) {\n            case 'a-g':\n              if (a.firstName[0].toLowerCase() >= 'a' && a.firstName[0].toLowerCase() <= 'g') return true;\n              break;\n            case 'h-r':\n              if (a.firstName[0].toLowerCase() >= 'h' && a.firstName[0].toLowerCase() <= 'r') return true;\n              break;\n            case 's-z':\n              if (a.firstName[0].toLowerCase() >= 's' && a.firstName[0].toLowerCase() <= 'z') return true;\n              break;\n          }\n        }\n        return false;\n      },\n      cellType: 'AVATAR_WITH_TEXT',\n    },\n    {\n      name: 'email',\n      displayName: 'Email',\n      width: 350,\n      resizable: true,\n      sorting: false,\n      cellType: 'WITH_META_LIST'\n    },\n    {\n      name: 'gender',\n      displayName: 'Gender',\n      width: 200,\n      resizable: true,\n      comparator: (a, b) => a.gender.localeCompare(b.gender),\n      cellType: 'STATUS_HINT',\n      translate: a => ({\n        title: a.gender,\n        statusAppearance: (a.gender === 'Female') ? 'alert' : 'success'\n      }),\n      filters: [\n        { label: 'Male', value: 'male' },\n        { label: 'Female', value: 'female' },\n      ],\n      onFilterChange: (a, filters) => {\n        for (const filter of filters) {\n          if (a.gender.toLowerCase() === filter) return true;\n        }\n        return false;\n      },\n    },\n    {\n      name: 'icon',\n      displayName: 'Icon',\n      width: 100,\n      resizable: true,\n      align: 'center',\n      cellType: 'ICON',\n      translate: _ => ({\n        icon: 'events'\n      })\n    },\n    {\n      name: 'customCell',\n      displayName: 'Custom Cell',\n      width: 200,\n      resizable: true,\n      separator: true,\n      cellRenderer: (props) => {\n        const {\n          loading\n        } = props;\n\n        if (loading) return <></>;\n\n        return (\n          <Button appearance={'primary'}>Button</Button>\n        );\n      }\n    },\n  ];\n\n  const errorTemplate = () => {\n    return (\n      <Heading appearance={'disabled'}>We failed as a team</Heading>\n    );\n  };\n\n  return (\n    <div\n      style={{\n        height: '350px',\n      }}\n    >\n      <Card className=\"h-100 overflow-hidden\">\n        <Table\n          schema={schema}\n          error={true}\n          errorTemplate={errorTemplate}\n        />\n      </Card>\n    </div>\n  );\n};\n\n    "
    ]
  },
  "Table   With Pagination": {
    "prefix": "Table   With Pagination",
    "description": "With Pagination",
    "body": [
      "import { Heading, Card, Table } from '@innovaccer/design-system';\n    \n() => {\n  const data = [\n    {\n        \"firstName\": \"Brooke\",\n        \"lastName\": \"Heeran\",\n        \"email\": \"bheeran0@altervista.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Frazer\",\n        \"lastName\": \"Cathro\",\n        \"email\": \"fcathro1@ucla.edu\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lemmie\",\n        \"lastName\": \"Ciric\",\n        \"email\": {\n            \"title\": \"lciric2@dmoz.org\",\n            \"metaList\": [\n                \"First\",\n                \"Second\"\n            ]\n        },\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Randy\",\n        \"lastName\": \"Boatwright\",\n        \"email\": \"rboatwright3@arstechnica.com\",\n        \"status\": \"Completed\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rolando\",\n        \"lastName\": \"Cyples\",\n        \"email\": \"rcyples4@biglobe.ne.jp\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lem\",\n        \"lastName\": \"Males\",\n        \"email\": \"lmales5@admin.ch\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Sayres\",\n        \"lastName\": \"Adelberg\",\n        \"email\": \"sadelberg6@uol.com.br\",\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Murray\",\n        \"lastName\": \"Bravington\",\n        \"email\": \"mbravington7@drupal.org\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Jena\",\n        \"lastName\": \"Swatheridge\",\n        \"email\": \"jswatheridge8@npr.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Annabel\",\n        \"lastName\": \"Nelsey\",\n        \"email\": \"anelsey9@google.com\",\n        \"gender\": \"Female\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Carin\",\n        \"lastName\": \"Robiou\",\n        \"email\": \"crobioua@skype.com\",\n        \"gender\": \"Female\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Anson\",\n        \"lastName\": \"Gamon\",\n        \"email\": \"agamonb@economist.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Brina\",\n        \"lastName\": \"Pirie\",\n        \"email\": \"bpiriec@stumbleupon.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Hermy\",\n        \"lastName\": \"Dyett\",\n        \"email\": \"hdyettd@boston.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Aime\",\n        \"lastName\": \"von Hagt\",\n        \"email\": \"avonhagte@nyu.edu\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Gusti\",\n        \"lastName\": \"Haycock\",\n        \"email\": \"ghaycockf@virginia.edu\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Mortimer\",\n        \"lastName\": \"Kunneke\",\n        \"email\": \"mkunnekeg@weather.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Barnie\",\n        \"lastName\": \"Pohls\",\n        \"email\": \"bpohlsh@columbia.edu\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Elliot\",\n        \"lastName\": \"Nealey\",\n        \"email\": \"enealeyi@cocolog-nifty.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Allsun\",\n        \"lastName\": \"Gong\",\n        \"email\": \"agongj@discuz.net\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Harwell\",\n        \"lastName\": \"Kegan\",\n        \"email\": \"hkegank@domainmarket.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Gilles\",\n        \"lastName\": \"Sandell\",\n        \"email\": \"gsandelll@apache.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Hilliard\",\n        \"lastName\": \"Beamish\",\n        \"email\": \"hbeamishm@shop-pro.jp\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Charley\",\n        \"lastName\": \"Kuschek\",\n        \"email\": \"ckuschekn@dropbox.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Danny\",\n        \"lastName\": \"Churchin\",\n        \"email\": \"dchurchino@bbc.co.uk\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Ervin\",\n        \"lastName\": \"Chatelain\",\n        \"email\": \"echatelainp@mac.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Milli\",\n        \"lastName\": \"Joseph\",\n        \"email\": \"mjosephq@merriam-webster.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Greer\",\n        \"lastName\": \"O'Doherty\",\n        \"email\": \"godohertyr@homestead.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Haroun\",\n        \"lastName\": \"Martensen\",\n        \"email\": \"hmartensens@skype.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Desiree\",\n        \"lastName\": \"Colwell\",\n        \"email\": \"dcolwellt@businessinsider.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Almeda\",\n        \"lastName\": \"Jowsey\",\n        \"email\": \"ajowseyu@ask.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Cinderella\",\n        \"lastName\": \"Dunnet\",\n        \"email\": \"cdunnetv@mac.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Hubert\",\n        \"lastName\": \"Legion\",\n        \"email\": \"hlegionw@ameblo.jp\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Costa\",\n        \"lastName\": \"Adamovsky\",\n        \"email\": \"cadamovskyx@joomla.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Kristan\",\n        \"lastName\": \"Bielfeld\",\n        \"email\": \"kbielfeldy@live.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Sammy\",\n        \"lastName\": \"Shermore\",\n        \"email\": \"sshermorez@washington.edu\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Kathi\",\n        \"lastName\": \"Dowyer\",\n        \"email\": \"kdowyer10@bluehost.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Kennith\",\n        \"lastName\": \"Whitehouse\",\n        \"email\": \"kwhitehouse11@cornell.edu\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Brianna\",\n        \"lastName\": \"Garland\",\n        \"email\": \"bgarland12@wikipedia.org\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Cristobal\",\n        \"lastName\": \"Mapholm\",\n        \"email\": \"cmapholm13@constantcontact.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Zia\",\n        \"lastName\": \"Harrowing\",\n        \"email\": \"zharrowing14@huffingtonpost.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Zabrina\",\n        \"lastName\": \"Gravener\",\n        \"email\": \"zgravener15@ameblo.jp\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Gregoor\",\n        \"lastName\": \"Cruz\",\n        \"email\": \"gcruz16@uol.com.br\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Julita\",\n        \"lastName\": \"Gemeau\",\n        \"email\": \"jgemeau17@bandcamp.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Gilbert\",\n        \"lastName\": \"Sallier\",\n        \"email\": \"gsallier18@dailymail.co.uk\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Bride\",\n        \"lastName\": \"Boniface\",\n        \"email\": \"bboniface19@howstuffworks.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Rodolph\",\n        \"lastName\": \"Mattussevich\",\n        \"email\": \"rmattussevich1a@nymag.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rowan\",\n        \"lastName\": \"Rizon\",\n        \"email\": \"rrizon1b@thetimes.co.uk\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Avie\",\n        \"lastName\": \"Nicolls\",\n        \"email\": \"anicolls1c@nbcnews.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Bram\",\n        \"lastName\": \"Kleinhaut\",\n        \"email\": \"bkleinhaut1d@imdb.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Carmita\",\n        \"lastName\": \"Costin\",\n        \"email\": \"ccostin1e@hibu.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Wash\",\n        \"lastName\": \"Vannuchi\",\n        \"email\": \"wvannuchi1f@japanpost.jp\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Nikki\",\n        \"lastName\": \"Faye\",\n        \"email\": \"nfaye1g@feedburner.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Aron\",\n        \"lastName\": \"Scimonelli\",\n        \"email\": \"ascimonelli1h@nationalgeographic.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Smitty\",\n        \"lastName\": \"Giacomello\",\n        \"email\": \"sgiacomello1i@google.co.uk\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Staci\",\n        \"lastName\": \"D'Elias\",\n        \"email\": \"sdelias1j@paginegialle.it\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Radcliffe\",\n        \"lastName\": \"Garbutt\",\n        \"email\": \"rgarbutt1k@thetimes.co.uk\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Maxwell\",\n        \"lastName\": \"Krikorian\",\n        \"email\": \"mkrikorian1l@ask.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Dunstan\",\n        \"lastName\": \"Chansonne\",\n        \"email\": \"dchansonne1m@posterous.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Isaak\",\n        \"lastName\": \"Faherty\",\n        \"email\": \"ifaherty1n@who.int\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Sawyere\",\n        \"lastName\": \"Ede\",\n        \"email\": \"sede1o@drupal.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Perren\",\n        \"lastName\": \"Daddow\",\n        \"email\": \"pdaddow1p@indiegogo.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Brendis\",\n        \"lastName\": \"Napier\",\n        \"email\": \"bnapier1q@multiply.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Francene\",\n        \"lastName\": \"Godbold\",\n        \"email\": \"fgodbold1r@joomla.org\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Moll\",\n        \"lastName\": \"Fludgate\",\n        \"email\": \"mfludgate1s@who.int\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Allayne\",\n        \"lastName\": \"Medhurst\",\n        \"email\": \"amedhurst1t@is.gd\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Genvieve\",\n        \"lastName\": \"Mellows\",\n        \"email\": \"gmellows1u@stumbleupon.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Rebe\",\n        \"lastName\": \"Durnford\",\n        \"email\": \"rdurnford1v@biglobe.ne.jp\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Thalia\",\n        \"lastName\": \"Joerning\",\n        \"email\": \"tjoerning1w@netscape.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Beckie\",\n        \"lastName\": \"Lammin\",\n        \"email\": \"blammin1x@gnu.org\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Kassandra\",\n        \"lastName\": \"Furney\",\n        \"email\": \"kfurney1y@surveymonkey.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Libbie\",\n        \"lastName\": \"Gladyer\",\n        \"email\": \"lgladyer1z@dropbox.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Kai\",\n        \"lastName\": \"Goldsbury\",\n        \"email\": \"kgoldsbury20@census.gov\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Arielle\",\n        \"lastName\": \"De Bell\",\n        \"email\": \"adebell21@addthis.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Ellary\",\n        \"lastName\": \"Warnock\",\n        \"email\": \"ewarnock22@ted.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Skelly\",\n        \"lastName\": \"Blakes\",\n        \"email\": \"sblakes23@reddit.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Roanne\",\n        \"lastName\": \"Stanyforth\",\n        \"email\": \"rstanyforth24@com.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Cash\",\n        \"lastName\": \"Fettis\",\n        \"email\": \"cfettis25@go.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Farleigh\",\n        \"lastName\": \"McDavid\",\n        \"email\": \"fmcdavid26@sbwire.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Holly\",\n        \"lastName\": \"Barfford\",\n        \"email\": \"hbarfford27@wsj.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Hurley\",\n        \"lastName\": \"Benaine\",\n        \"email\": \"hbenaine28@sun.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Maryjo\",\n        \"lastName\": \"Gilhooly\",\n        \"email\": \"mgilhooly29@tripod.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Annis\",\n        \"lastName\": \"Linkie\",\n        \"email\": \"alinkie2a@wp.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Mariel\",\n        \"lastName\": \"Husher\",\n        \"email\": \"mhusher2b@etsy.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Niels\",\n        \"lastName\": \"Klimontovich\",\n        \"email\": \"nklimontovich2c@surveymonkey.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Udall\",\n        \"lastName\": \"Linfitt\",\n        \"email\": \"ulinfitt2d@toplist.cz\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Isidore\",\n        \"lastName\": \"Kuhn\",\n        \"email\": \"ikuhn2e@cdc.gov\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rosemonde\",\n        \"lastName\": \"Kettle\",\n        \"email\": \"rkettle2f@techcrunch.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Cass\",\n        \"lastName\": \"Boot\",\n        \"email\": \"cboot2g@furl.net\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Montague\",\n        \"lastName\": \"Rossey\",\n        \"email\": \"mrossey2h@goo.gl\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Geno\",\n        \"lastName\": \"Jenkyn\",\n        \"email\": \"gjenkyn2i@opensource.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Esdras\",\n        \"lastName\": \"Skivington\",\n        \"email\": \"eskivington2j@answers.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Gabriello\",\n        \"lastName\": \"Luce\",\n        \"email\": \"gluce2k@nydailynews.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Magdalene\",\n        \"lastName\": \"Ilyunin\",\n        \"email\": \"milyunin2l@prweb.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Isidro\",\n        \"lastName\": \"Fawson\",\n        \"email\": \"ifawson2m@squidoo.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Blinny\",\n        \"lastName\": \"Palfrey\",\n        \"email\": \"bpalfrey2n@networksolutions.com\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Justen\",\n        \"lastName\": \"Kordas\",\n        \"email\": \"jkordas2o@symantec.com\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Damien\",\n        \"lastName\": \"Hallede\",\n        \"email\": \"dhallede2p@unicef.org\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Jaquelyn\",\n        \"lastName\": \"Rockhall\",\n        \"email\": \"jrockhall2q@vkontakte.ru\",\n        \"gender\": \"Female\"\n    },\n    {\n        \"firstName\": \"Garrek\",\n        \"lastName\": \"Matignon\",\n        \"email\": \"gmatignon2r@noaa.gov\",\n        \"gender\": \"Male\"\n    }\n];\n\n  const schema = [\n    {\n      name: 'name',\n      displayName: 'Name',\n      resizable: true,\n      separator: true,\n      tooltip: true,\n      translate: a => ({\n        title: `${a.firstName} ${a.lastName}`,\n        firstName: a.firstName,\n        lastName: a.lastName\n      }),\n      filters: [\n        { label: 'A-G', value: 'a-g' },\n        { label: 'H-R', value: 'h-r' },\n        { label: 'S-Z', value: 's-z' },\n      ],\n      onFilterChange: (a, filters) => {\n        for (const filter of filters) {\n          switch (filter) {\n            case 'a-g':\n              if (a.firstName[0].toLowerCase() >= 'a' && a.firstName[0].toLowerCase() <= 'g') return true;\n              break;\n            case 'h-r':\n              if (a.firstName[0].toLowerCase() >= 'h' && a.firstName[0].toLowerCase() <= 'r') return true;\n              break;\n            case 's-z':\n              if (a.firstName[0].toLowerCase() >= 's' && a.firstName[0].toLowerCase() <= 'z') return true;\n              break;\n          }\n        }\n        return false;\n      },\n      cellType: 'AVATAR_WITH_TEXT',\n    },\n    {\n      name: 'email',\n      displayName: 'Email',\n      width: 350,\n      resizable: true,\n      sorting: false,\n    },\n  ];\n\n  const values = ['basic', 'jump'];\n\n  const style = {\n    display: 'flex',\n    flexWrap: 'wrap',\n  };\n\n  return (\n    <div style={style}>\n      {values.map((v, index) => (\n        <div\n          key={index}\n          style={{\n            margin: '20px',\n            width: '45%',\n          }}\n        >\n          <Heading>{`paginationType: ${v}`}</Heading>\n          <div\n            style={{\n              height: '350px',\n            }}\n          >\n            <Card shadow=\"light\" className=\"h-100\">\n              <Table\n                data={data}\n                schema={schema}\n                withPagination={true}\n                paginationType={v}\n                pageSize={15}\n                onPageChange={newPage => console.log(`on-page-change:- ${newPage}`)}\n              />\n            </Card>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\n    "
    ]
  },
  "Tabs All": {
    "prefix": "Tabs All",
    "description": "All",
    "body": [
      "import { Tabs, Tab } from '@innovaccer/design-system';\n    () => {\n  const [activeIndex, setActiveIndex] = React.useState(0);\n\n  const onTabChangeHandler = (tabIndex) => {\n    setActiveIndex(tabIndex);\n  };\n\n  return(\n    <Tabs\n      activeIndex={activeIndex}\n      onTabChange={onTabChangeHandler}\n      className=\"mb-6\"\n    >\n      <Tab label=\"Tab(Recommended)\" count={10}>\n        <div>Tab(Recommended)</div>\n      </Tab>\n      <Tab label=\"All\" icon=\"call_received\">\n        <div>All</div>\n      </Tab>\n      <Tab label=\"Extras\" disabled={true}>\n        <div>Extras</div>\n      </Tab>\n    </Tabs>\n  );\n}\n    "
    ]
  },
  "Tabs Basic Tabs": {
    "prefix": "Tabs Basic Tabs",
    "description": "Basic Tabs",
    "body": [
      "import { Heading, Dropdown, Tabs, Tab } from '@innovaccer/design-system';\n    () => {\n  const options = [\n    {\n      label: 'Feb 9, 2019 (recent)',\n      value: 'Feb 9, 2019 (recent)',\n      selected: true\n    },\n    {\n      label: 'Feb 10, 2019',\n      value: 'Feb 10, 2019'\n    },\n    {\n      label: 'Feb 11, 2019',\n      value: 'Feb 11, 2019'\n    },\n    {\n      label: 'Feb 12, 2019',\n      value: 'Feb 12, 2019'\n    },\n    {\n      label: 'Feb 13, 2019',\n      value: 'Feb 13, 2019'\n    }\n  ];\n\n  return(\n    <div>\n      <div className=\"d-flex justify-content-between\">\n        <Heading size=\"m\">Data Gaps</Heading>\n        <div style={{width: 'var(--spacing-8)'}}>\n          <Dropdown options={options} />\n        </div>\n      </div>\n      <Tabs className=\"mb-6\">\n        <Tab\n          label=\"Clinical Gaps\"\n        >\n          <div>\n            Clinical Gaps\n          </div>\n        </Tab>\n        <Tab\n          label=\"Billing Gaps\"\n        >\n          <div>\n            Billing Gaps\n          </div>\n        </Tab>\n        <Tab\n          label=\"Claim Gaps\"\n          disabled={true}\n        >\n          <div>\n            Claim Gaps\n          </div>\n        </Tab>\n      </Tabs>\n    </div>\n  );\n}\n    "
    ]
  },
  "Tabs Custom Labels": {
    "prefix": "Tabs Custom Labels",
    "description": "Custom Labels",
    "body": [
      "import { Tabs, Tab, Badge, Text, Icon } from '@innovaccer/design-system';\n    () => {\n  const [activeIndex, setActiveIndex] = React.useState(0);\n\n  const onTabChangeHandler = (tabIndex) => {\n    setActiveIndex(tabIndex);\n    console.log(`tab-change: ${tabIndex}`)();\n  };\n\n  return (\n    <Tabs\n      activeIndex={activeIndex}\n      onTabChange={onTabChangeHandler}\n      className=\"mb-6\"\n    >\n      <Tab\n        label={(\n          <>\n            <div className=\"Tab-count\">\n              <Badge appearance={activeIndex === 0 ? 'primary' : 'secondary'}>2</Badge>\n            </div>\n            <Text appearance={activeIndex !== 0 ? 'subtle' : 'link'}>Tab(Recommended)</Text>\n          </>\n        )}\n      >\n        <div>\n          Tab(Recommended)\n        </div>\n      </Tab>\n      <Tab\n        label={(\n          <div className=\"Tab-icon\">\n            <Icon name=\"south_west\" appearance={activeIndex === 1 ? 'info' : 'subtle'} />\n            <Text appearance={activeIndex !== 1 ? 'subtle' : 'link'}>All</Text>\n          </div>\n        )}\n      >\n        <div>\n          All\n        </div>\n      </Tab>\n      <Tab\n        label={(\n          <>\n            <Text appearance={activeIndex !== 2 ? 'subtle' : undefined}>Extras</Text>\n          </>\n        )}\n        disabled={true}\n      >\n        <div>\n          Extras\n        </div>\n      </Tab>\n    </Tabs>\n  );\n}\n    "
    ]
  },
  "Tabs Disabled With Active": {
    "prefix": "Tabs Disabled With Active",
    "description": "Disabled With Active",
    "body": [
      "import { Tabs, Tab, EmptyState } from '@innovaccer/design-system';\n    () => {\n  const [activeIndex, setActiveIndex] = React.useState(0);\n\n  const onTabChangeHandler = (tabIndex) => {\n    setActiveIndex(tabIndex);\n  };\n\n  const isDisabled = true;\n  return (\n    <Tabs activeIndex={activeIndex} onTabChange={onTabChangeHandler} className=\"mb-6\">\n      <Tab label=\"All\" icon=\"call_received\" count={10} disabled={isDisabled}>\n        {isDisabled ? (\n          <div className=\"h-100 pb-5 bg-secondary-lightest\">\n            <EmptyState\n              title=\"There's a problem loading this page.\"\n              description=\"Tab is disabled and you are not authorized to see the content of this tab\"\n              size=\"large\"\n            ></EmptyState>\n          </div>\n        ) : (\n          <div>All</div>\n        )}\n      </Tab>\n      <Tab label=\"Tab(Recommended)\">\n        <div>Tab(Recommended)</div>\n      </Tab>\n      <Tab label=\"Extras\" disabled={true}>\n        <div>Extras</div>\n      </Tab>\n    </Tabs>\n  );\n}\n    "
    ]
  },
  "Tabs Dismissible Tab": {
    "prefix": "Tabs Dismissible Tab",
    "description": "Dismissible Tab",
    "body": [
      "import { Tabs, Tab } from '@innovaccer/design-system';\n    () => {\n  const [activeIndex, setActiveIndex] = React.useState(0);\n  const [hideTab, setHideTab] = React.useState(false);\n\n  const onTabChangeHandler = (tabIndex) => {\n    setActiveIndex(tabIndex);\n  };\n\n  const onDismissHandler = (tabInfo) => {\n    setHideTab(true);\n  };\n\n  return(\n    <Tabs\n      activeIndex={activeIndex}\n      onTabChange={onTabChangeHandler}\n      className=\"mb-6\"\n    >\n      {!hideTab && (\n        <Tab\n          label=\"Tab(Recommended)\"\n          count={10}\n          isDismissible={true}\n          onDismiss={(tabInfo) => onDismissHandler(tabInfo)}\n        >\n          <div>Tab(Recommended)</div>\n        </Tab>\n      )}\n      <Tab label=\"All\" icon=\"call_received\" isDismissible={true} onDismiss={(tabInfo)=>{console.log(tabInfo)}}>\n        <div>All</div>\n      </Tab>\n      <Tab label=\"Extras\" disabled={true} isDismissible={true} onDismiss={(tabInfo)=>{console.log(tabInfo)}}>\n        <div>Extras</div>\n      </Tab>\n    </Tabs>\n  );\n}\n    "
    ]
  },
  "Tabs Inline Content": {
    "prefix": "Tabs Inline Content",
    "description": "Inline Content",
    "body": [
      "import { Tabs, Tab, Input, Dropdown } from '@innovaccer/design-system';\n    () => {\n  const options = [\n    {\n      label: 'Increasing',\n      value: 'Increasing',\n    },\n    {\n      label: 'Decreasing',\n      value: 'Decreasing'\n    },\n  ];\n\n  return(\n    <Tabs\n      onTabChange={console.log}\n      className=\"mb-6\"\n    >\n      <Tab label=\"All\" count={12}>\n        <div>All</div>\n      </Tab>\n      <Tab label=\"Active\" count={3}>\n        <div>Active</div>\n      </Tab>\n      <Tab label=\"Inactive\" count={9}>\n        <div>Inactive</div>\n      </Tab>\n      <div className=\"d-flex justify-content-end flex-grow-1\">\n        <div style={{ width: 'var(--spacing-9)' }} className=\"ml-8\">\n          <Input placeholder=\"Search by name\" icon=\"search\" />\n        </div>\n        <div style={{ width: 'var(--spacing-8)' }} className=\"ml-4\">\n          <Dropdown options={options} placeholder=\"Sort by\" />\n        </div>\n      </div>\n    </Tabs>\n  );\n}\n    "
    ]
  },
  "Tabs Tabs With Count": {
    "prefix": "Tabs Tabs With Count",
    "description": "Tabs With Count",
    "body": [
      "import { Heading, Button, Tabs, Tab, Input, Dropdown } from '@innovaccer/design-system';\n    () => {\n  const options = [\n    {\n      label: 'Increasing',\n      value: 'Increasing',\n    },\n    {\n      label: 'Decreasing',\n      value: 'Decreasing'\n    },\n  ];\n\n  return(\n    <div>\n      <div className=\"d-flex justify-content-between\">\n        <Heading size=\"m\">Strategy</Heading>\n        <Button appearance=\"primary\">New Strategy</Button>\n      </div>\n      <div className=\"d-flex align-items-center mt-3\" >\n        <Tabs\n          onTabChange={console.log}\n          className=\"mb-6\"\n        >\n          <Tab label=\"All\" count={12}>\n            <div>All</div>\n          </Tab>\n          <Tab label=\"Active\" count={3}>\n            <div>Active</div>\n          </Tab>\n          <Tab label=\"Inactive\" count={9}>\n            <div>Inactive</div>\n          </Tab>\n          <div className=\"d-flex align-items-center\">\n            <div style={{ width: 'var(--spacing-9)' }} className=\"ml-8\">\n              <Input placeholder=\"Search by name\" icon=\"search\" />\n            </div>\n            <div style={{ width: 'var(--spacing-8)' }} className=\"ml-4\">\n              <Dropdown options={options} placeholder=\"Sort by\" />\n            </div>\n          </div>\n        </Tabs>\n      </div>\n    </div>\n  );\n}\n    "
    ]
  },
  "Tabs Tabs With Icon": {
    "prefix": "Tabs Tabs With Icon",
    "description": "Tabs With Icon",
    "body": [
      "import { Heading, Link, Tabs, Tab } from '@innovaccer/design-system';\n    () => {\n  return(\n    <div>\n      <div className=\"d-flex align-items-center\">\n        <Heading size=\"s\">Diabetes: Hemoglobin A1c Poor Control</Heading>\n        <Link className=\"ml-4\">Measure definition</Link>\n      </div>\n      <Tabs\n        onTabChange={console.log}\n        className=\"mb-6\"\n      >\n        <Tab label=\"2020\" icon=\"warning\">\n          <div>2020</div>\n        </Tab>\n        <Tab label=\"2019\" icon=\"check_circle\">\n          <div>2019</div>\n        </Tab>\n        <Tab label=\"2018\" icon=\"warning\">\n          <div>2018</div>\n        </Tab>\n        <Tab label=\"2017\" icon=\"check_circle\">\n          <div>2017</div>\n        </Tab>\n      </Tabs>\n    </div>\n  );\n}\n    "
    ]
  },
  "Text": {
    "prefix": "Text",
    "description": "Weight",
    "body": [
      "import { Text } from '@innovaccer/design-system';\n    () => {\n  return (\n    <div className=\"d-flex\">\n      <div className=\"mr-6\">\n        <Text weight=\"strong\">Strong</Text>\n      </div>\n      <div>\n        <Text weight=\"medium\">Medium</Text>\n      </div>\n    </div>\n  );\n}\n    "
    ]
  },
  "Textarea All": {
    "prefix": "Textarea All",
    "description": "All",
    "body": [
      "import { Textarea } from '@innovaccer/design-system';\n    () => {\n  const value = '';\n\n  const placeholder = 'Placeholder';\n\n  const disabled = false;\n\n  const error = false;\n\n  const resize = true;\n\n  const rows = 3;\n\n  return (\n    <div style={{ maxWidth: '300px' }}>\n      <Textarea\n        name=\"Textarea\"\n        value={value}\n        disabled={disabled}\n        onChange={action('on-change')}\n        onClick={action('on-click')}\n        placeholder={placeholder}\n        error={error}\n        resize={resize}\n        rows={rows}\n        aria-labelledby=\"Textarea\"\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "Textarea": {
    "prefix": "Textarea",
    "description": "Disable",
    "body": [
      "import { Textarea, Text } from '@innovaccer/design-system';\n    () => {\n  const innerStyle = {\n    display: 'flex',\n    'flex-direction': 'column',\n    alignItems: 'center',\n    maxWidth: '300px',\n  };\n\n  const BooleanValue = [true, false];\n\n  return (\n    <div className=\"Row\">\n      {BooleanValue.map((value, ind) => (\n        <div style={innerStyle} className=\"mr-9 mb-5\" key={ind}>\n          <div style={innerStyle} className=\"mr-9 mb-5\">\n            <div className=\"w-100 mb-6\">\n              <Textarea\n                name=\"Textarea\"\n                onChange={action('on-change')}\n                placeholder=\"Placeholder\"\n                disabled={value}\n                rows={3}\n                aria-labelledby=\"Textarea\"\n              />\n            </div>\n            <Text weight=\"strong\">{value ? 'Disabled' : 'Enabled'}</Text>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n    "
    ]
  },
  "TimePicker": {
    "prefix": "TimePicker",
    "description": "With Search",
    "body": [
      "import { Row, Label, TimePicker } from '@innovaccer/design-system';\n    () => {\n\n  const onChangeHandler = (props) => {\n    console.log(props);\n  };\n\n  return (\n    <Row>\n      <div className=\"w-25\">\n        <Label>12 Hour Format</Label>\n        <TimePicker \n          withSearch={true} \n          startTime=\"00:00 AM\" \n          endTime=\"11:59 PM\" \n          onChange={onChangeHandler} \n          noResultMessage=\"Invalid Time\"\n          id=\"12-hour\"\n        />\n      </div>\n      <div className=\"w-25 ml-7\">\n        <Label>24 Hour Format</Label>\n        <TimePicker\n          withSearch={true}\n          startTime=\"00:00 AM\"\n          endTime=\"11:59 PM\"\n          timeFormat=\"24-Hour\"\n          onChange={onChangeHandler}\n          noResultMessage=\"Invalid Time\"\n          id=\"24-hour\"\n        />\n      </div>\n  </Row>\n  );\n}\n    "
    ]
  },
  "Toast All": {
    "prefix": "Toast All",
    "description": "All",
    "body": [
      "import { Toast } from '@innovaccer/design-system';\n    () => {\n  const title = 'Sample toast';\n\n  const message = '';\n\n  const actionLabel1 = '';\n  const actionLabel2 = '';\n\n  const props = {\n    actions: [],\n  };\n\n  if (actionLabel1) {\n    props.actions.push({\n      label: actionLabel1,\n      onClick: () => action('action button click: 1')(),\n    });\n  }\n  if (actionLabel2) {\n    props.actions.push({\n      label: actionLabel2,\n      onClick: () => action('action button click: 2')(),\n    });\n  }\n\n  return <Toast title={title} message={message} onClose={action('on-close clicked')} {...props} />;\n}\n    "
    ]
  },
  "Toast Alert Toast": {
    "prefix": "Toast Alert Toast",
    "description": "Alert Toast",
    "body": [
      "import { Toast } from '@innovaccer/design-system';\n    () => (\n  <Toast\n    appearance=\"alert\"\n    title=\"Campaign failed to run\"\n    message=\"Try to run again. If it continues to fail, please raise a ticket.\"\n  />\n)\n    "
    ]
  },
  "Toast Info Toast": {
    "prefix": "Toast Info Toast",
    "description": "Info Toast",
    "body": [
      "import { Toast } from '@innovaccer/design-system';\n    () => (\n  <Toast\n    appearance=\"info\"\n    title=\"Sophie sent you a task\"\n    message=\"Schedule Appointment for 'Joy Lawson'. It's due on Aug 31.\"\n  />\n)\n    "
    ]
  },
  "Toast Success Toast": {
    "prefix": "Toast Success Toast",
    "description": "Success Toast",
    "body": [
      "import { Toast } from '@innovaccer/design-system';\n    () => (\n  <Toast\n    appearance=\"success\"\n    title=\"Outreach successfully sent\"\n    message=\"2,340 outreach messages have been successfully sent.\"\n  />\n)\n    "
    ]
  },
  "Toast Toast With Actions": {
    "prefix": "Toast Toast With Actions",
    "description": "Toast With Actions",
    "body": [
      "import { Toast } from '@innovaccer/design-system';\n    () => (\n  <Toast\n    appearance=\"success\"\n    title=\"Review requested successfully\"\n    message=\"Automatically redirecting to the next Prior Auth of Joy Lawson in 10s\"\n    actions={[\n      {\n        label: 'Need Prior Auth',\n        onClick: () => {},\n      },\n      {\n        label: 'Go To Worklist',\n        onClick: () => {},\n      },\n    ]}\n  />\n)\n    "
    ]
  },
  "Toast Toast With Description": {
    "prefix": "Toast Toast With Description",
    "description": "Toast With Description",
    "body": [
      "import { Toast } from '@innovaccer/design-system';\n    () => (\n  <Toast appearance=\"success\" title=\"Message sent successfully\" message=\"Description goes here\" />\n)\n    "
    ]
  },
  "Toast": {
    "prefix": "Toast",
    "description": "Toast With Description",
    "body": [
      "import { Toast } from '@innovaccer/design-system';\n    () => {\n  const appearances = ['info', 'success', 'alert', 'warning'];\n\n  const message = 'Outreach was sent';\n  return (\n    <div className=\"d-flex\">\n      {appearances.map((appearance, ind) => {\n        return (\n          <div key={ind} className=\"mr-5 mb-8\">\n            <Toast\n              appearance={appearance}\n              title={appearance.charAt(0).toUpperCase() + appearance.slice(1)}\n              message={message}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n    "
    ]
  },
  "Toast Warning Toast": {
    "prefix": "Toast Warning Toast",
    "description": "Warning Toast",
    "body": [
      "import { Toast } from '@innovaccer/design-system';\n    () => (\n  <Toast\n    appearance=\"warning\"\n    title=\"Chat response is delayed\"\n    message=\"'Memorial Clinic' has been running for more that 2 hours.\"\n  />\n)\n    "
    ]
  },
  "Tooltip All": {
    "prefix": "Tooltip All",
    "description": "All",
    "body": [
      "import { Tooltip, Button } from '@innovaccer/design-system';\n    () => {\n  const position = 'bottom';\n  const appendToBody = true;\n  const hoverable = false;\n  const tooltip = 'An awesome tooltip';\n\n  const options = {\n    tooltip,\n    hoverable,\n    position,\n    appendToBody,\n  };\n\n  return (\n    <div className=\"mt-8 ml-12\">\n      <Tooltip {...options}>\n        <Button>Hover over me</Button>\n      </Tooltip>\n    </div>\n  );\n}\n    "
    ]
  },
  "Tooltip": {
    "prefix": "Tooltip",
    "description": "Position",
    "body": [
      "import { Tooltip, Button } from '@innovaccer/design-system';\n    () => {\n  const positions = ['top', 'top-start', 'bottom', 'top-end', 'bottom-start', 'bottom-end', 'right', 'left'];\n  const appendToBody = false;\n  const tooltip = 'An awesome tooltip';\n\n  const options = {\n    tooltip,\n    appendToBody,\n  };\n\n  return (\n    <div className=\"pb-6 Row\">\n      {positions.map((pos, ind) => {\n        return (\n          <div key={ind} className=\"mr-13 mt-8\">\n            <Tooltip position={pos} {...options}>\n              <Button>{pos}</Button>\n            </Tooltip>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n    "
    ]
  },
  "VerificationCodeInput": {
    "prefix": "VerificationCodeInput",
    "description": "Error",
    "body": [
      "import { Label, VerificationCodeInput } from '@innovaccer/design-system';\n    () => {\n  return (\n    <>\n      <Label withInput={true}>Verification code</Label>\n      <VerificationCodeInput error={true} />\n    </>\n  );\n}\n    "
    ]
  },
  "VerticalNav All": {
    "prefix": "VerticalNav All",
    "description": "All",
    "body": [
      "import { VerticalNav } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      name: 'patient_360',\n      label: 'Patient 360',\n      icon: 'assignment_ind',\n      link: '/patient360',\n      count: 10,\n    },\n    {\n      name: 'care_management',\n      label: 'Care Management and Resources',\n      icon: 'forum',\n      count: 2,\n      subMenu: [\n        {\n          name: 'care_management.timeline',\n          label: 'Timeline',\n          icon: 'events'\n        },\n        {\n          name: 'care_management.care_plans',\n          label: 'Care Plans',\n          icon: 'events'\n        }\n      ]\n    },\n    {\n      name: 'episodes',\n      label: 'Episodes',\n      disabled: true,\n      icon: 'airline_seat_flat_angled',\n      count: 5,\n    },\n    {\n      name: 'risk',\n      label: 'Risk',\n      icon: 'favorite',\n      subMenu: [\n        {\n          name: 'risk.timeline',\n          label: 'Timeline',\n          icon: 'events'\n        },\n        {\n          name: 'risk.care_plans',\n          label: 'Care Plans',\n          icon: 'events'\n        }\n      ]\n    },\n    {\n      name: 'claims',\n      label: 'Claims',\n      icon: 'receipt'\n    },\n    {\n      name: 'profile',\n      label: 'Profile',\n      icon: 'account_circle'\n    },\n    {\n      name: 'manual_entry',\n      label: 'Manual Entry',\n      icon: 'border_color'\n    },\n    {\n      name: 'documents',\n      label: 'Documents',\n      icon: 'assignment'\n    }\n  ];\n\n  const [active, setActive] = React.useState({\n    name: 'care_management.timeline'\n  });\n\n  const onClickHandler = (menu) => {\n    console.log('menu-clicked: ', menu);\n    setActive(menu);\n  };\n\n  return (\n    <div className=\"bg-secondary-lightest vh-100\">\n      <VerticalNav\n        menus={data}\n        expanded={true}\n        active={active}\n        onClick={onClickHandler}\n        hoverable={false}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "VerticalNav Child Items With Icons": {
    "prefix": "VerticalNav Child Items With Icons",
    "description": "Child Items With Icons",
    "body": [
      "import { Collapsible, VerticalNav } from '@innovaccer/design-system';\n    () => {\n\n  const data = [\n    {\n      name: 'clinical_data',\n      label: 'Clinical Data',\n      icon: 'assignment_ind'\n    },\n    {\n      name: 'care_management',\n      label: 'Care Management',\n      icon: 'forum',\n      subMenu: [\n        {\n          name: 'care_management.timeline',\n          label: 'Timeline',\n          icon: 'people'\n        },\n        {\n          name: 'care_management.care_protocol',\n          label: 'Care Protocol',\n          icon: 'fact_check'\n        },\n        {\n          name: 'care_management.assessments',\n          label: 'Assessments',\n          icon: 'assessment'\n        },\n        {\n          name: 'care_management.tasks',\n          label: 'Tasks',\n          icon: 'alarm'\n        },\n        {\n          name: 'care_management.goals',\n          label: 'Goals',\n          icon: 'golf_course'\n        },\n        {\n          name: 'care_management.care_plans',\n          label: 'Care Plans',\n          icon: 'accessibility_new'\n        },\n        {\n          name: 'care_management.medical_adherence',\n          label: 'Medical Adherence',\n          icon: 'local_pharmacy'\n        },\n        {\n          name: 'care_management.community_resources',\n          label: 'Community Resources',\n          icon: 'businesses'\n        }\n      ]\n    },\n    {\n      name: 'episodes',\n      label: 'Episodes',\n      icon: 'airline_seat_flat_angled'\n    },\n    {\n      name: 'risk',\n      label: 'Risk',\n      icon: 'favorite'\n    },\n    {\n      name: 'preventive_health',\n      label: 'Preventive Health',\n      icon: 'beenhere'\n    },\n    {\n      name: 'profile',\n      label: 'Profile',\n      icon: 'receipt'\n    },\n    {\n      name: 'claims',\n      label: 'Claims',\n      icon: 'account_circle'\n    },\n    {\n      name: 'manual_entry',\n      label: 'Manual Entry',\n      icon: 'edit'\n    },\n    {\n      name: 'patient_notes',\n      label: 'Patient Notes',\n      icon: 'note_add'\n    },\n    {\n      name: 'documents',\n      label: 'Documents',\n      icon: 'assignment'\n    },\n  ];\n\n  const [expanded, setExpanded] = React.useState(false);\n  const [active, setActive] = React.useState({\n    name: 'care_management.timeline'\n  });\n\n  return (\n    <div className=\"bg-secondary-lightest vh-100\">\n      <Collapsible expanded={expanded} onToggle={setExpanded}>\n        <VerticalNav\n          menus={data}\n          active={active}\n          expanded={expanded}\n          onClick={setActive}\n        />\n      </Collapsible>\n    </div>\n  );\n}\n    "
    ]
  },
  "VerticalNav Custom Items Renderer": {
    "prefix": "VerticalNav Custom Items Renderer",
    "description": "Custom Items Renderer",
    "body": [
      "import { Icon, Tooltip, Text, VerticalNav } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      name: 'clinical_data',\n      label: 'Clinical Data',\n      icon: 'assignment_ind'\n    },\n    {\n      name: 'care_management',\n      label: 'Care Management',\n      icon: 'forum',\n      subMenu: [\n        {\n          name: 'care_management.timeline',\n          label: 'Timeline',\n          icon: 'people'\n        },\n        {\n          name: 'care_management.care_protocol',\n          label: 'Care Protocol',\n          icon: 'fact_check'\n        },\n        {\n          name: 'care_management.assessments',\n          label: 'Assessments',\n          icon: 'assessment'\n        },\n        {\n          name: 'care_management.tasks',\n          label: 'Tasks',\n          icon: 'alarm'\n        },\n      ]\n    },\n    {\n      name: 'episodes',\n      label: 'Episodes',\n      icon: 'airline_seat_flat_angled'\n    },\n    {\n      name: 'risk',\n      label: 'Risk',\n      icon: 'favorite'\n    },\n    {\n      name: 'preventive_health',\n      label: 'Preventive Health',\n      icon: 'beenhere'\n    },\n    {\n      name: 'profile',\n      label: 'Profile',\n      icon: 'receipt'\n    },\n    {\n      name: 'claims',\n      label: 'Claims',\n      icon: 'account_circle'\n    },\n    {\n      name: 'manual_entry',\n      label: 'Manual Entry',\n      icon: 'edit'\n    },\n    {\n      name: 'patient_notes',\n      label: 'Patient Notes',\n      icon: 'note_add'\n    },\n    {\n      name: 'documents',\n      label: 'Documents',\n      icon: 'assignment'\n    },\n  ];\n\n  const [active, setActive] = React.useState({\n    name: 'care_management.timeline'\n  });\n\n  const customItemRenderer = (props) => {\n    const {menu, onClick, expanded, isChildren} = props;\n    return ( \n      <div \n        onClick={() => onClick(menu)}\n        className={`p-5 d-flex align-items-center cursor-pointer ${isChildren ? 'ml-7' : ''}`}\n      >\n        {menu.icon && \n            <Icon\n              data-test=\"DesignSystem-VerticalNav--Icon\"\n              className={expanded ? 'mr-4' : ''}\n              name={menu.icon}\n            />\n        }\n        <Tooltip tooltip={menu.label} position=\"right\">\n          <Text weight=\"medium\">\n            {menu.label}\n          </Text>\n        </Tooltip>\n      </div>\n    );\n  };\n  \n  return (\n    <div className=\"bg-secondary-lightest vh-100\">\n      <VerticalNav\n        menus={data}\n        expanded={true}\n        active={active}\n        onClick={setActive}\n        customItemRenderer={customItemRenderer}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "VerticalNav Custom Options Renderer": {
    "prefix": "VerticalNav Custom Options Renderer",
    "description": "Custom Options Renderer",
    "body": [
      "import { Icon, VerticalNav } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      name: 'clinical_data',\n      label: 'Clinical Data',\n      icon: 'assignment_ind'\n    },\n    {\n      name: 'care_management',\n      label: 'Care Management',\n      icon: 'forum',\n      count: 40,\n      subMenu: [\n        {\n          name: 'care_management.timeline',\n          label: 'Timeline',\n          icon: 'people',\n          count: 10\n        },\n        {\n          name: 'care_management.care_protocol',\n          label: 'Care Protocol',\n          icon: 'fact_check',\n          count: 10\n        },\n        {\n          name: 'care_management.assessments',\n          label: 'Assessments',\n          icon: 'assessment',\n          count: 10\n        },\n        {\n          name: 'care_management.tasks',\n          label: 'Tasks',\n          icon: 'alarm',\n          count: 10\n        },\n      ]\n    },\n    {\n      name: 'episodes',\n      label: 'Episodes',\n      icon: 'airline_seat_flat_angled',\n      count: 100\n    },\n    {\n      name: 'risk',\n      label: 'Risk',\n      icon: 'favorite'\n    },\n    {\n      name: 'preventive_health',\n      label: 'Preventive Health',\n      icon: 'beenhere'\n    },\n    {\n      name: 'profile',\n      label: 'Profile',\n      icon: 'receipt'\n    },\n    {\n      name: 'claims',\n      label: 'Claims',\n      icon: 'account_circle'\n    },\n    {\n      name: 'manual_entry',\n      label: 'Manual Entry',\n      icon: 'edit'\n    },\n    {\n      name: 'patient_notes',\n      label: 'Patient Notes',\n      icon: 'note_add'\n    },\n    {\n      name: 'documents',\n      label: 'Documents',\n      icon: 'assignment'\n    },\n  ];\n\n  const [active, setActive] = React.useState({\n    name: 'care_management.timeline'\n  });\n\n  const customItemRenderer = (props) => {\n    const {menu, onClick, hasSubmenu, expanded, isChildren, MenuIcon, MenuLabel, MenuPills} = props;\n    return ( \n      <div \n        onClick={() => onClick(menu)}\n        className={`p-5 d-flex align-items-center cursor-pointer ${isChildren ? 'ml-7' : ''}`}\n      >\n        {menu.icon && (\n          <Icon data-test=\"DesignSystem-VerticalNav--Icon\" className={expanded ? 'mr-4' : ''} name={menu.icon} />\n        )}\n        {MenuLabel()}\n        <div className=\"ml-5 d-flex\">{MenuPills()}</div>\n        {hasSubmenu && MenuIcon()}\n      </div>\n    );\n  };\n  \n  return (\n    <div className=\"bg-secondary-lightest vh-100\">\n      <VerticalNav\n        menus={data}\n        expanded={true}\n        active={active}\n        onClick={setActive}\n        customItemRenderer={customItemRenderer}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "VerticalNav Custom Trigger": {
    "prefix": "VerticalNav Custom Trigger",
    "description": "Custom Trigger",
    "body": [
      "import { Icon, Heading, Collapsible, VerticalNav } from '@innovaccer/design-system';\n    () => {\n  const [expanded, setExpanded] = React.useState(false);\n  const [active, setActive] = React.useState({\n    name: 'TODOs.Due',\n  });\n\n  const data = [\n    {\n      name: 'TODOs',\n      label: 'TODOs',\n      icon: 'assignment_ind',\n      count: 31,\n      subMenu: [\n        {\n          name: 'TODOs.Due',\n          label: 'Due',\n          count: 31\n        },\n        {\n          name: 'TODOs.Completed',\n          label: 'Completed',\n          count: 0\n        },\n      ],\n    },\n    {\n      name: 'Received',\n      label: 'Received',\n      count: 0\n    },\n    {\n      name: 'Sent',\n      label: 'Sent',\n      count: 5\n    },\n  ];\n\n  return (\n    <div>\n      <div className='d-flex align-items-center mb-3'>\n        <Icon name=\"menu\" className=\"cursor-pointer\" onClick={() => setExpanded(!expanded) }></Icon>\n        <Heading size='s' className=\"ml-4\">My Worklist</Heading>\n      </div>\n      <Collapsible withTrigger={false} expanded={expanded} height=\"100vh\">\n        <VerticalNav menus={data} active={active} expanded={expanded} onClick={setActive} />\n      </Collapsible>\n    </div>\n  );\n}\n    "
    ]
  },
  "VerticalNav Custom Vertical Navigation": {
    "prefix": "VerticalNav Custom Vertical Navigation",
    "description": "Custom Vertical Navigation",
    "body": [
      "import { Collapsible, DatePicker, VerticalNav } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      name: 'to_dos',\n      label: 'To-dos',\n      icon: 'check_circle_outline',\n      subMenu: [\n        {\n          name: 'to_dos.due',\n          label: 'Due',\n          count: 10\n        },\n        {\n          name: 'to_dos.completed',\n          label: 'Completed',\n          count: 7\n        },\n      ]\n    },\n    {\n      name: 'received',\n      label: 'Received',\n      icon: 'call_received'\n    },\n    {\n      name: 'sent',\n      label: 'Sent',\n      icon: 'call_made'\n    },\n  ];\n\n  const [expanded, setExpanded] = React.useState(true);\n  const [active, setActive] = React.useState({\n    name: 'data_exchange.reports'\n  });\n\n  return (\n    <div className=\"bg-secondary-lightest vh-100\">\n      <Collapsible expanded={expanded} onToggle={setExpanded} hoverable={false}>\n        <>\n        {expanded && (\n          <div className=\"mt-5 d-flex justify-content-center border-top\">\n          <DatePicker date={new Date()} size=\"small\" />\n          </div>\n          )}\n          <VerticalNav\n            menus={data}\n            expanded={expanded}\n            active={active}\n            onClick={setActive}\n          />\n        </>\n      </Collapsible>\n    </div>\n  );\n}\n    "
    ]
  },
  "VerticalNav Flat Edged Vertical Navigation": {
    "prefix": "VerticalNav Flat Edged Vertical Navigation",
    "description": "Flat Edged Vertical Navigation",
    "body": [
      "import { Collapsible, VerticalNav } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      name: 'home',\n      label: 'Home',\n      icon: 'home',\n      count: 10\n    },\n    {\n      name: 'profile',\n      label: 'Profile',\n      icon: 'account_circle',\n      count: 25,\n      subMenu: [\n        {\n          name: 'profile.personal',\n          label: 'Personal',\n          count: 5\n        },\n        {\n          name: 'profile.are_team',\n          label: 'Care Team',\n          count: 10\n        },\n        {\n          name: 'profile.goals',\n          label: 'Goals',\n          count: 5\n        },\n        {\n          name: 'profile.care_plans',\n          label: 'Care Plans',\n          count: 5\n        }\n      ]\n    },\n    {\n      name: 'medical_records',\n      label: 'Medical Records',\n      icon: 'local_hospital',\n      subMenu: [\n        {\n          name: 'medical_records.allergies',\n          label: 'Allergies'\n        },\n        {\n          name: 'medical_records.conditions',\n          label: 'Conditions'\n        },\n        {\n          name: 'medical_records.immunizations',\n          label: 'Immunizations'\n        },\n        {\n          name: 'medical_records.lab_results',\n          label: 'Lab Results'\n        },\n        {\n          name: 'medical_records.medications',\n          label: 'Medications'\n        },\n        {\n          name: 'medical_records.procedures',\n          label: 'Procedures'\n        },\n        {\n          name: 'medical_records.vitals',\n          label: 'Vitals'\n        },\n        {\n          name: 'medical_records.smoking_history',\n          label: 'medical_records.Smoking History'\n        },\n        {\n          name: 'devices',\n          label: 'Devices'\n        }\n      ]\n    },\n    {\n      name: 'formulary',\n      label: 'Formulary',\n      icon: 'list',\n    },\n    {\n      name: 'encounters',\n      label: 'Encounters',\n      icon: 'directions_walk',\n    },\n    {\n      name: 'claims',\n      label: 'Claims',\n      icon: 'receipt'\n    },\n    {\n      name: 'documents',\n      label: 'Documents',\n      icon: 'assignment'\n    },\n    {\n      name: 'find_care',\n      label: 'Find Care',\n      icon: 'search',\n      subMenu: [\n        {\n          name: 'find_care.providers',\n          label: 'Providers'\n        },\n        {\n          name: 'find_care.pharmacies',\n          label: 'Pharmacies'\n        },\n      ]\n    },\n    {\n      name: 'connected_applications',\n      label: 'Connected Applications',\n      icon: 'extension'\n    },\n  ];\n\n  const [expanded, setExpanded] = React.useState(true);\n  const [active, setActive] = React.useState({\n    name: 'medical_records.allergies'\n  });\n\n  const onClickHandler = (menu) => {\n    console.log('menu-clicked: ', menu);\n    setActive(menu);\n  };\n\n  return (\n    <div className=\"bg-secondary-lightest vh-100\">\n      <Collapsible expanded={expanded} onToggle={setExpanded} hoverable={false}>\n        <VerticalNav\n          menus={data}\n          active={active}\n          expanded={expanded}\n          onClick={onClickHandler}\n        />\n      </Collapsible>\n    </div>\n  );\n}\n    "
    ]
  },
  "VerticalNav Grouping": {
    "prefix": "VerticalNav Grouping",
    "description": "Grouping",
    "body": [
      "import { VerticalNav } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      name: 'customer_information',\n      label: 'Customer Information',\n      group: 'General'\n    },\n    {\n      name: 'organizational_structure',\n      label: 'Organizational Structure',\n      group: 'General'\n    },\n    {\n      name: 'contacts',\n      label: 'Contacts',\n      group: 'General',\n    },\n    {\n      name: 'empi',\n      label: 'EMPI',\n      group: 'Platform',\n    },\n    {\n      name: 'data_exchange',\n      label: 'Data Exchange',\n      group: 'Platform',\n      subMenu: [\n        {\n          name: 'data_exchange.reports',\n          label: 'Reports'\n        },\n        {\n          name: 'data_exchange.destinations',\n          label: 'Destinations'\n        },\n        {\n          name: 'data_exchange.validation',\n          label: 'Validation'\n        },\n      ]\n    },\n    {\n      name: 'import_export_settings',\n      label: 'Import/Export Settings',\n      group: 'Platform',\n    },\n    {\n      name: 'pipelines',\n      label: 'Pipelines',\n      group: 'Apps',\n    },\n  ];\n\n  const [active, setActive] = React.useState({\n    name: 'data_exchange.reports'\n  });\n\n  return (\n    <div className=\"bg-secondary-lightest vh-100\">\n      <VerticalNav\n        menus={data}\n        expanded={true}\n        active={active}\n        onClick={setActive}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "VerticalNav Hoverable Vertical Navigation": {
    "prefix": "VerticalNav Hoverable Vertical Navigation",
    "description": "Hoverable Vertical Navigation",
    "body": [
      "import { Collapsible, VerticalNav, Heading, Card, Table } from '@innovaccer/design-system';\n    () => {\n  const tableData = [\n    {\n        \"firstName\": \"Brooke\",\n        \"lastName\": \"Heeran\",\n        \"email\": \"bheeran0@altervista.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Frazer\",\n        \"lastName\": \"Cathro\",\n        \"email\": \"fcathro1@ucla.edu\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lemmie\",\n        \"lastName\": \"Ciric\",\n        \"email\": {\n            \"title\": \"lciric2@dmoz.org\",\n            \"metaList\": [\n                \"First\",\n                \"Second\"\n            ]\n        },\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Randy\",\n        \"lastName\": \"Boatwright\",\n        \"email\": \"rboatwright3@arstechnica.com\",\n        \"status\": \"Completed\",\n        \"gender\": \"Male\"\n    },\n    {\n        \"firstName\": \"Rolando\",\n        \"lastName\": \"Cyples\",\n        \"email\": \"rcyples4@biglobe.ne.jp\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Lem\",\n        \"lastName\": \"Males\",\n        \"email\": \"lmales5@admin.ch\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Sayres\",\n        \"lastName\": \"Adelberg\",\n        \"email\": \"sadelberg6@uol.com.br\",\n        \"gender\": \"Male\",\n        \"status\": \"Completed\"\n    },\n    {\n        \"firstName\": \"Murray\",\n        \"lastName\": \"Bravington\",\n        \"email\": \"mbravington7@drupal.org\",\n        \"gender\": \"Male\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Jena\",\n        \"lastName\": \"Swatheridge\",\n        \"email\": \"jswatheridge8@npr.org\",\n        \"gender\": \"Female\",\n        \"status\": \"Failed\"\n    },\n    {\n        \"firstName\": \"Annabel\",\n        \"lastName\": \"Nelsey\",\n        \"email\": \"anelsey9@google.com\",\n        \"gender\": \"Female\",\n        \"status\": \"Completed\"\n    }\n];\n\n  const schema = [\n    {\n      name: 'name',\n      displayName: 'Name',\n      width: '40%',\n      resizable: true,\n      separator: true,\n      tooltip: true,\n      translate: a => ({\n        title: `${a.firstName} ${a.lastName}`,\n        firstName: a.firstName,\n        lastName: a.lastName\n      }),\n      filters: [\n        { label: 'A-G', value: 'a-g' },\n        { label: 'H-R', value: 'h-r' },\n        { label: 'S-Z', value: 's-z' },\n      ],\n      onFilterChange: (a, filters) => {\n        for (const filter of filters) {\n          switch (filter) {\n            case 'a-g':\n              if (a.firstName[0].toLowerCase() >= 'a' && a.firstName[0].toLowerCase() <= 'g') return true;\n              break;\n            case 'h-r':\n              if (a.firstName[0].toLowerCase() >= 'h' && a.firstName[0].toLowerCase() <= 'r') return true;\n              break;\n            case 's-z':\n              if (a.firstName[0].toLowerCase() >= 's' && a.firstName[0].toLowerCase() <= 'z') return true;\n              break;\n          }\n        }\n        return false;\n      },\n      cellType: 'AVATAR_WITH_TEXT',\n    },\n    {\n      name: 'email',\n      displayName: 'Email',\n      width: 350,\n      resizable: true,\n      sorting: false,\n      cellType: 'WITH_META_LIST'\n    },\n    {\n      name: 'gender',\n      displayName: 'Gender',\n      width: 200,\n      resizable: true,\n      comparator: (a, b) => a.gender.localeCompare(b.gender),\n      cellType: 'STATUS_HINT',\n      translate: a => ({\n        title: a.gender,\n        statusAppearance: (a.gender === 'Female') ? 'alert' : 'success'\n      }),\n      filters: [\n        { label: 'Male', value: 'male' },\n        { label: 'Female', value: 'female' },\n      ],\n      onFilterChange: (a, filters) => {\n        for (const filter of filters) {\n          if (a.gender.toLowerCase() === filter) return true;\n        }\n        return false;\n      },\n    },\n  ];\n\n  const data = [\n    {\n      name: 'clinical_data',\n      label: 'Clinical Data',\n      icon: 'assignment_ind'\n    },\n    {\n      name: 'care_management',\n      label: 'Care Management',\n      icon: 'forum',\n      subMenu: [\n        {\n          name: 'care_management.timeline',\n          label: 'Timeline',\n          icon: 'people'\n        },\n        {\n          name: 'care_management.care_protocol',\n          label: 'Care Protocol',\n          icon: 'fact_check'\n        },\n        {\n          name: 'care_management.assessments',\n          label: 'Assessments',\n          icon: 'assessment'\n        },\n        {\n          name: 'care_management.tasks',\n          label: 'Tasks',\n          icon: 'alarm'\n        },\n        {\n          name: 'care_management.goals',\n          label: 'Goals',\n          icon: 'golf_course'\n        },\n        {\n          name: 'care_management.care_plans',\n          label: 'Care Plans',\n          icon: 'accessibility_new'\n        },\n        {\n          name: 'care_management.medical_adherence',\n          label: 'Medical Adherence',\n          icon: 'local_pharmacy'\n        },\n        {\n          name: 'care_management.community_resources',\n          label: 'Community Resources',\n          icon: 'businesses'\n        }\n      ]\n    },\n    {\n      name: 'episodes',\n      label: 'Episodes',\n      icon: 'airline_seat_flat_angled'\n    },\n    {\n      name: 'risk',\n      label: 'Risk',\n      icon: 'favorite'\n    },\n    {\n      name: 'preventive_health',\n      label: 'Preventive Health',\n      icon: 'beenhere'\n    },\n    {\n      name: 'profile',\n      label: 'Profile',\n      icon: 'receipt'\n    },\n    {\n      name: 'claims',\n      label: 'Claims',\n      icon: 'account_circle'\n    },\n    {\n      name: 'manual_entry',\n      label: 'Manual Entry',\n      icon: 'edit'\n    },\n    {\n      name: 'patient_notes',\n      label: 'Patient Notes',\n      icon: 'note_add'\n    },\n    {\n      name: 'documents',\n      label: 'Documents',\n      icon: 'assignment'\n    },\n  ];\n\n  const [expanded, setExpanded] = React.useState(false);\n  const [active, setActive] = React.useState({\n    name: 'care_management.timeline'\n  });\n\n  return (\n    <div className=\"d-flex bg-secondary-lightest vh-100\">\n      <Collapsible expanded={expanded} onToggle={setExpanded}>\n        <VerticalNav\n          menus={data}\n          active={active}\n          expanded={expanded}\n          onClick={setActive}\n        />\n      </Collapsible>\n      <div className=\"ml-6 d-flex flex-column\">\n        <Heading className=\"my-5\">Assessments</Heading>\n        <Card className=\"h-100 overflow-hidden\">\n          <Table\n            data={tableData}\n            schema={schema}\n            withHeader={true}\n            withCheckbox={true}\n            headerOptions={{\n              withSearch: true\n            }}\n            onSearch={(currData, searchTerm) => {\n              return currData.filter(d =>\n                d.firstName.toLowerCase().match(searchTerm.toLowerCase())\n                || d.lastName.toLowerCase().match(searchTerm.toLowerCase())\n              );\n            }}\n            withPagination={true}\n            pageSize={5}\n          />\n        </Card>\n      </div>\n    </div>\n  );\n}\n    "
    ]
  },
  "VerticalNav Label Overflow Behaviour": {
    "prefix": "VerticalNav Label Overflow Behaviour",
    "description": "Label Overflow Behaviour",
    "body": [
      "import { VerticalNav } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      name: 'clinical_data',\n      label: 'Clinical Data',\n      icon: 'assignment_ind'\n    },\n    {\n      name: 'care_management',\n      label: 'Care Management Timeline Protocol',\n      icon: 'forum',\n      subMenu: [\n        {\n          name: 'care_management.timeline',\n          label: 'Timeline',\n          icon: 'people'\n        },\n        {\n          name: 'care_management.care_protocol',\n          label: 'Care Protocol Management Guidelines',\n          icon: 'fact_check'\n        },\n        {\n          name: 'care_management.assessments',\n          label: 'Assessments',\n          icon: 'assessment'\n        },\n      ]\n    },\n    {\n      name: 'episodes',\n      label: 'Episodes',\n      icon: 'airline_seat_flat_angled'\n    },\n    {\n      name: 'preventive_health',\n      label: 'Preventive Health Precautions Template',\n      icon: 'beenhere'\n    },\n  ];\n\n  const [active, setActive] = React.useState({\n    name: 'care_management.timeline'\n  });\n  \n  return (\n    <div className=\"bg-secondary-lightest vh-100\">\n      <VerticalNav\n        menus={data}\n        expanded={true}\n        active={active}\n        onClick={setActive}\n        showTooltip={true}      \n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "VerticalNav Non Collapsible Vertical Navigation": {
    "prefix": "VerticalNav Non Collapsible Vertical Navigation",
    "description": "Non Collapsible Vertical Navigation",
    "body": [
      "import { VerticalNav } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      name: 'practice',\n      label: 'Practice',\n    },\n    {\n      name: 'users',\n      label: 'Users',\n    },\n    {\n      name: 'copayment',\n      label: 'Copayment',\n    },\n    {\n      name: 'subscription',\n      label: 'Subscription',\n    },\n    {\n      name: 'import_export_settings',\n      label: 'Import/Export Settings',\n    },\n  ];\n\n  const [active, setActive] = React.useState({\n    name: 'users'\n  });\n\n  return (\n    <div className=\"bg-secondary-lightest\" style={{ height: '50vh'}}>\n      <VerticalNav\n        menus={data}\n        active={active}\n        expanded={true}\n        onClick={setActive}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "VerticalNav Round Edged Vertical Navigation": {
    "prefix": "VerticalNav Round Edged Vertical Navigation",
    "description": "Round Edged Vertical Navigation",
    "body": [
      "import { VerticalNav } from '@innovaccer/design-system';\n    () => {\n\n  const primaryNavdata = [\n    {\n      name: 'clinical_data',\n      label: 'Clinical Data',\n      icon: 'assignment_ind'\n    },\n    {\n      name: 'care_management',\n      label: 'Care Management',\n      icon: 'forum',\n      subMenu: [\n        {\n          name: 'care_management.timeline',\n          label: 'Timeline',\n          icon: 'people'\n        },\n        {\n          name: 'care_management.care_protocol',\n          label: 'Care Protocol',\n          icon: 'fact_check'\n        },\n        {\n          name: 'care_management.assessments',\n          label: 'Assessments',\n          icon: 'assessment'\n        },\n        {\n          name: 'care_management.tasks',\n          label: 'Tasks',\n          icon: 'alarm'\n        },\n        {\n          name: 'care_management.goals',\n          label: 'Goals',\n          icon: 'golf_course'\n        },\n        {\n          name: 'care_management.care_plans',\n          label: 'Care Plans',\n          icon: 'accessibility_new'\n        },\n        {\n          name: 'care_management.medical_adherence',\n          label: 'Medical Adherence',\n          icon: 'local_pharmacy'\n        },\n        {\n          name: 'care_management.community_resources',\n          label: 'Community Resources',\n          icon: 'businesses'\n        }\n      ]\n    },\n    {\n      name: 'episodes',\n      label: 'Episodes',\n      icon: 'airline_seat_flat_angled'\n    },\n    {\n      name: 'risk',\n      label: 'Risk',\n      icon: 'favorite'\n    },\n    {\n      name: 'preventive_health',\n      label: 'Preventive Health',\n      icon: 'beenhere'\n    },\n    {\n      name: 'profile',\n      label: 'Profile',\n      icon: 'receipt'\n    },\n    {\n      name: 'claims',\n      label: 'Claims',\n      icon: 'account_circle'\n    },\n    {\n      name: 'manual_entry',\n      label: 'Manual Entry',\n      icon: 'edit'\n    },\n    {\n      name: 'patient_notes',\n      label: 'Patient Notes',\n      icon: 'note_add'\n    },\n    {\n      name: 'documents',\n      label: 'Documents',\n      icon: 'assignment'\n    },\n  ];\n\n  const secondaryNavdata = [\n    {\n      name: '11/12/20',\n      label: '11 Dec, 2020',\n    },\n    {\n      name: '17/11/20',\n      label: '17 Nov, 2020',\n    },\n    {\n      name: '07/11/20',\n      label: '7 Nov, 2020',\n    },\n    {\n      name: '09/10/20',\n      label: '9 Oct, 2020',\n    },\n    {\n      name: '23/08/20',\n      label: '23 Aug, 2020',\n    },\n  ];\n\n  const [primaryActive, setPrimaryActive] = React.useState({\n    name: 'care_management.timeline'\n  });\n\n  const [secondaryActive, setSecondaryActive] = React.useState({\n    name: '11/12/20'\n  });\n\n  return (\n    <div className=\"d-flex bg-secondary-lightest vh-100\">\n      <VerticalNav\n        menus={primaryNavdata}\n        active={primaryActive}\n        onClick={setPrimaryActive}\n      />\n      <VerticalNav\n        menus={secondaryNavdata}\n        active={secondaryActive}\n        rounded={true}\n        className=\"mt-10 ml-5\"\n        onClick={setSecondaryActive}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "VerticalNav Secondary Vertical Navigation": {
    "prefix": "VerticalNav Secondary Vertical Navigation",
    "description": "Secondary Vertical Navigation",
    "body": [
      "import { VerticalNav, Heading, Card } from '@innovaccer/design-system';\n    () => {\n\n  const primaryNavdata = [\n    {\n      name: 'clinical_data',\n      label: 'Clinical Data',\n      icon: 'assignment_ind'\n    },\n    {\n      name: 'care_management',\n      label: 'Care Management',\n      icon: 'forum',\n      subMenu: [\n        {\n          name: 'care_management.timeline',\n          label: 'Timeline',\n          icon: 'people'\n        },\n        {\n          name: 'care_management.care_protocol',\n          label: 'Care Protocol',\n          icon: 'fact_check'\n        },\n        {\n          name: 'care_management.assessments',\n          label: 'Assessments',\n          icon: 'assessment'\n        },\n        {\n          name: 'care_management.tasks',\n          label: 'Tasks',\n          icon: 'alarm'\n        },\n        {\n          name: 'care_management.goals',\n          label: 'Goals',\n          icon: 'golf_course'\n        },\n        {\n          name: 'care_management.care_plans',\n          label: 'Care Plans',\n          icon: 'accessibility_new'\n        },\n        {\n          name: 'care_management.medical_adherence',\n          label: 'Medical Adherence',\n          icon: 'local_pharmacy'\n        },\n        {\n          name: 'care_management.community_resources',\n          label: 'Community Resources',\n          icon: 'businesses'\n        }\n      ]\n    },\n    {\n      name: 'episodes',\n      label: 'Episodes',\n      icon: 'airline_seat_flat_angled'\n    },\n    {\n      name: 'risk',\n      label: 'Risk',\n      icon: 'favorite'\n    },\n    {\n      name: 'preventive_health',\n      label: 'Preventive Health',\n      icon: 'beenhere'\n    },\n    {\n      name: 'profile',\n      label: 'Profile',\n      icon: 'receipt'\n    },\n    {\n      name: 'claims',\n      label: 'Claims',\n      icon: 'account_circle'\n    },\n    {\n      name: 'manual_entry',\n      label: 'Manual Entry',\n      icon: 'edit'\n    },\n    {\n      name: 'patient_notes',\n      label: 'Patient Notes',\n      icon: 'note_add'\n    },\n    {\n      name: 'documents',\n      label: 'Documents',\n      icon: 'assignment'\n    },\n  ];\n\n  const secondaryNavdata = [\n    {\n      name: '19/01/20',\n      label: '19 Jan, 2020',\n      group: 'Completed'\n    },\n    {\n      name: '16/01/20',\n      label: '16 Jan, 2020',\n      group: 'Completed'\n    },\n    {\n      name: '11/11/20',\n      label: '11 Nov, 2020',\n      group: 'Ongoing'\n    },\n    {\n      name: '17/11/20',\n      label: '17 Nov, 2020',\n      group: 'Ongoing'\n    },\n    {\n      name: '07/11/20',\n      label: '7 Nov, 2020',\n      group: 'Ongoing'\n    },\n    {\n      name: '09/10/20',\n      label: '9 Oct, 2020',\n      group: 'Ongoing'\n    },\n    {\n      name: '23/08/20',\n      label: '23 Aug, 2020',\n      group: 'Ongoing'\n    },\n  ];\n\n  const [primaryActive, setPrimaryActive] = React.useState({\n    name: 'care_management.timeline'\n  });\n\n  const [secondaryActive, setSecondaryActive] = React.useState({\n    name: '19/01/20'\n  });\n\n  return (\n    <div className=\"d-flex bg-secondary-lightest vh-100\">\n      <VerticalNav\n        menus={primaryNavdata}\n        active={primaryActive}\n        onClick={setPrimaryActive}\n      />\n      <div className=\"w-100 ml-6\">\n        <Heading className=\"my-5\">Assessments</Heading>\n        <Card shadow=\"none\" style={{ height: 'calc(80vh)' }}>\n          <VerticalNav\n            menus={secondaryNavdata}\n            active={secondaryActive}\n            onClick={setSecondaryActive}\n          />\n        </Card>\n      </div>\n    </div>\n  );\n}\n    "
    ]
  },
  "VerticalNav   Rounded": {
    "prefix": "VerticalNav   Rounded",
    "description": "Rounded",
    "body": [
      "import { VerticalNav } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      name: 'patient_360',\n      label: 'Patient 360',\n      icon: 'assignment_ind',\n      link: '/patient360'\n    },\n    {\n      name: 'care_management',\n      label: 'Care Management and Resources',\n      icon: 'forum',\n      subMenu: [\n        {\n          name: 'care_management.timeline',\n          label: 'Timeline'\n        },\n        {\n          name: 'care_management.care_plans',\n          label: 'Care Plans'\n        }\n      ]\n    },\n    {\n      name: 'episodes',\n      label: 'Episodes',\n      disabled: true,\n      icon: 'airline_seat_flat_angled'\n    },\n    {\n      name: 'risk',\n      label: 'Risk',\n      icon: 'favorite',\n      subMenu: [\n        {\n          name: 'risk.timeline',\n          label: 'Timeline'\n        },\n        {\n          name: 'risk.care_plans',\n          label: 'Care Plans'\n        }\n      ]\n    },\n    {\n      name: 'claims',\n      label: 'Claims',\n      icon: 'receipt'\n    },\n    {\n      name: 'profile',\n      label: 'Profile',\n      icon: 'account_circle'\n    },\n    {\n      name: 'manula_entry',\n      label: 'Manual Entry',\n      icon: 'border_color'\n    },\n    {\n      name: 'documents',\n      label: 'Documents',\n      icon: 'assignment'\n    }\n  ];\n\n  const [active, setActive] = React.useState({\n    name: 'care_management.timeline'\n  });\n  const [expanded, setExpanded] = React.useState(false);\n\n  const onClickHandler = (menu) => {\n    console.log('menu-clicked: ', menu);\n    setActive(menu);\n  };\n\n  return (\n    <div className=\"bg-secondary-lightest vh-100\">\n      <VerticalNav\n        menus={data}\n        expanded={true}\n        active={active}\n        rounded={true}\n        onClick={onClickHandler}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "VerticalNav   Section": {
    "prefix": "VerticalNav   Section",
    "description": "Section",
    "body": [
      "import { VerticalNav } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      name: 'patient_360',\n      label: 'Patient 360',\n      icon: 'assignment_ind',\n      link: '/patient360',\n      group: 'Section 1'\n    },\n    {\n      name: 'care_management',\n      label: 'Care Management and Resources',\n      icon: 'forum',\n      group: 'Section 2',\n      subMenu: [\n        {\n          name: 'care_management.timeline',\n          label: 'Timeline',\n          icon: 'events'\n        },\n        {\n          name: 'care_management.care_plans',\n          label: 'Care Plans',\n          icon: 'events'\n        }\n      ]\n    },\n    {\n      name: 'episodes',\n      label: 'Episodes',\n      disabled: true,\n      group: 'Section 2',\n      icon: 'airline_seat_flat_angled'\n    },\n    {\n      name: 'risk',\n      label: 'Risk',\n      icon: 'favorite',\n      group: 'Section 2',\n      subMenu: [\n        {\n          name: 'risk.timeline',\n          label: 'Timeline',\n          icon: 'events'\n        },\n        {\n          name: 'risk.care_plans',\n          label: 'Care Plans',\n          icon: 'events'\n        }\n      ]\n    },\n    {\n      name: 'claims',\n      label: 'Claims',\n      icon: 'receipt',\n      group: 'Section 3'\n    },\n    {\n      name: 'profile',\n      label: 'Profile',\n      icon: 'account_circle',\n      group: 'Section 3'\n    },\n    {\n      name: 'manula_entry',\n      label: 'Manual Entry',\n      icon: 'border_color',\n      group: 'Section 3'\n    },\n    {\n      name: 'documents',\n      label: 'Documents',\n      icon: 'assignment',\n      group: 'Section 3'\n    }\n  ];\n\n  const [active, setActive] = React.useState({\n    name: 'care_management.timeline'\n  });\n\n  const onClickHandler = (menu) => {\n    console.log('menu-clicked: ', menu);\n    setActive(menu);\n  };\n\n  return (\n    <div className=\"bg-secondary-lightest vh-100\">\n      <VerticalNav\n        menus={data}\n        expanded={true}\n        active={active}\n        onClick={onClickHandler}\n        hoverable={false}\n      />\n    </div>\n  );\n}\n    "
    ]
  },
  "Others Design Tokens Colors": {
    "prefix": "Others Design Tokens Colors",
    "description": "Colors",
    "body": [
      "import { Heading, Card, Table } from '@innovaccer/design-system';\n    () => {\n  React.useEffect(() => {\n    const collection = document.getElementsByClassName('setBgColor');\n    giveBgColor(collection);\n  });\n\n  const colorSchema = getSchema('backgroundColor', '', 'p-4');\n  return (\n    <div>\n      <Heading size=\"xxl\">Design Tokens</Heading>\n      <br />\n      <br />\n      <Heading size=\"m\">Colors</Heading>\n      <br />\n      {tokenColors.map((data, idx) => {\n        const heading =\n          idx !== 4 && idx !== 9\n            ? data[0].token.slice(2)[0].toUpperCase() + data[0].token.slice(3)\n            : idx === 4\n            ? 'Neutral'\n            : 'Others';\n        return (\n          <div className=\"mt-5 mb-5\" key={idx}>\n            <Heading size=\"s\">{heading}</Heading>\n            <br />\n            <Card className=\"h-100 overflow-hidden\">\n              <Table data={data} schema={colorSchema} />\n            </Card>\n            <br />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n    "
    ]
  },
  "Others Design Tokens Miscellaneous": {
    "prefix": "Others Design Tokens Miscellaneous",
    "description": "Miscellaneous",
    "body": [
      "import { Heading, Card, Table, Paragraph, Text } from '@innovaccer/design-system';\n    () => {\n  const borderSchema = getSchema('border', 'aA bB cC', 'p-3 w-50');\n  const shadowSchema = getSchema('boxShadow', 'aA bB cC', 'p-7');\n  return (\n    <div>\n      <Heading size=\"xxl\">Design Tokens</Heading>\n      <br />\n      <br />\n      <Heading size=\"m\">Miscellaneous</Heading>\n      <br />\n      <Heading size=\"m\">Border</Heading>\n      <Card className=\"h-100 overflow-hidden\">\n        <Table data={borderData} schema={borderSchema} />\n      </Card>\n      <br />\n      <Heading size=\"m\">Shadow</Heading>\n      <Card className=\"h-100 overflow-hidden\">\n        <Table data={shadowData} schema={shadowSchema} />\n      </Card>\n      <br />\n      <Heading size=\"m\">Grid breakpoints</Heading>\n      <Card className=\"h-100 overflow-hidden\">\n        <Table data={gridBreakpointData} schema={spaceSchema} />\n      </Card>\n      <br />\n      <Heading size=\"m\">Grid Columns</Heading>\n      <Paragraph appearance=\"default\">\n        The <Text weight=\"strong\">--grid-columns</Text> token has a value of\n        <Text weight=\"strong\"> 12 </Text>\n        which defines the maximum number of columns in a row.\n      </Paragraph>\n      <br />\n    </div>\n  );\n}\n    "
    ]
  },
  "Others Design Tokens Spacing": {
    "prefix": "Others Design Tokens Spacing",
    "description": "Spacing",
    "body": [
      "import { Heading, Card, Table } from '@innovaccer/design-system';\n    () => {\n  return (\n    <div>\n      <Heading size=\"xxl\">Design Tokens</Heading>\n      <br />\n      <br />\n      <Heading size=\"m\">Spacing</Heading>\n      <br />\n      <Card className=\"h-100\">\n        <Table data={spacingData} schema={spaceSchema} />\n      </Card>\n    </div>\n  );\n}\n    "
    ]
  },
  "Others Design Tokens Transitions": {
    "prefix": "Others Design Tokens Transitions",
    "description": "Transitions",
    "body": [
      "import { Heading, Card, Table } from '@innovaccer/design-system';\n    () => {\n  return (\n    <div>\n      <Heading size=\"xxl\">Design Tokens</Heading>\n      <br />\n      <br />\n      <Heading size=\"m\">Transitions</Heading>\n      <br />\n      <Heading size=\"m\">Transition curve</Heading>\n      <Card className=\"h-100 overflow-hidden\">\n        <Table data={transitionsCurveData} schema={spaceSchema} />\n      </Card>\n      <br />\n      <Heading size=\"m\">Transition Duration</Heading>\n      <Card className=\"h-100 overflow-hidden\">\n        <Table data={transitionsDurationData} schema={spaceSchema} />\n      </Card>\n      <br />\n    </div>\n  );\n}\n    "
    ]
  },
  "Others Design Tokens Typography": {
    "prefix": "Others Design Tokens Typography",
    "description": "Typography",
    "body": [
      "import { Heading, Text, Card, Table, Paragraph, Row, Column } from '@innovaccer/design-system';\n    () => {\n  React.useEffect(() => {\n    const collection = document.getElementsByClassName('setBgColor');\n    giveBgColor(collection);\n  });\n\n  const textColorsSchema = getSchema('color', 'aA bB cC');\n  const fontSizeSchema = getSchema('fontSize', 'aA bB cC');\n  const fontWeightSchema = getSchema('fontWeight', 'aA bB cC');\n  const fontHeightSchema = getSchema('lineHeight', 'aA bB cC', '', { backgroundColor: 'var(--secondary-light)' });\n\n  return (\n    <div>\n      <Heading size=\"xxl\">Design Tokens</Heading>\n      <br />\n      <br />\n      <Heading size=\"m\">Typography</Heading>\n      <Text appearance=\"default\" size=\"regular\" weight=\"strong\">\n        The design system has many built in tokens to easily solve most common use cases surrounding text and its\n        formatting.\n      </Text>\n      <br />\n      <br />\n      <Heading size=\"m\">Text Colors</Heading>\n      <Card className=\"h-100 overflow-hidden\">\n        <Table data={textColors} schema={textColorsSchema} />\n      </Card>\n      <br />\n      <Heading size=\"m\">Font Family</Heading>\n      <Paragraph appearance=\"default\">\n        The <Text weight=\"strong\">--font-family</Text> token provides with Nunito sans font family which is used\n        throughout the design system.\n      </Paragraph>\n      <br />\n      <Card className=\"w-25 p-4\">\n        <Row>\n          <Column size=\"6\" sizeS=\"12\" sizeXS=\"12\">\n            <div style={{ fontFamily: 'Times New Roman, Times, serif' }}>Normal Text</div>\n          </Column>\n          <Column size=\"6\" sizeS=\"12\" sizeXS=\"12\">\n            <div style={{ fontFamily: 'var(--font-family)' }}>Nunito Sans</div>\n          </Column>\n        </Row>\n      </Card>\n      <br />\n      <Heading size=\"m\">Font Size</Heading>\n      <Card className=\"h-100 overflow-hidden\">\n        <Table data={fontSize} schema={fontSizeSchema} />\n      </Card>\n      <br />\n      <Heading size=\"m\">Font Weight</Heading>\n      <Card className=\"h-100 overflow-hidden\">\n        <Table data={fontWeight} schema={fontWeightSchema} />\n      </Card>\n      <br />\n      <Heading size=\"m\">Font Height</Heading>\n      <Card className=\"h-100 overflow-hidden\">\n        <Table data={fontHeight} schema={fontHeightSchema} />\n      </Card>\n      <br />\n      <Heading size=\"m\">Letter Spacing</Heading>\n      <Paragraph appearance=\"default\">\n        The <Text weight=\"strong\">--letter-spacing</Text> token provides with <Text weight=\"strong\">0.5px </Text>\n        of spacing between letters.\n      </Paragraph>\n      <br />\n      <Card className=\"w-25 p-4\">\n        <Row>\n          <Column size=\"12\">\n            <div>\n              Text <strong>without</strong> letter spacing\n            </div>\n          </Column>\n          <Column size=\"12\">\n            <div style={{ letterSpacing: 'var(--letter-spacing)' }}>\n              Text <strong>with</strong> letter spacing\n            </div>\n          </Column>\n        </Row>\n      </Card>\n      <br />\n    </div>\n  );\n}\n    "
    ]
  },
  "Others Layout All": {
    "prefix": "Others Layout All",
    "description": "All",
    "body": [
      "import { Row, Column } from '@innovaccer/design-system';\n    () => {\n  const size = optionsKnob(\n    'size',\n    {\n      1: '1',\n      2: '2',\n      3: '3',\n      4: '4',\n      5: '5',\n      6: '6',\n      7: '7',\n      8: '8',\n      9: '9',\n      10: '10',\n      11: '11',\n      12: '12',\n    },\n    undefined,\n    {\n      display: 'inline-radio',\n    }\n  );\n  const sizeXS = optionsKnob(\n    'sizeXS',\n    {\n      1: '1',\n      2: '2',\n      3: '3',\n      4: '4',\n      5: '5',\n      6: '6',\n      7: '7',\n      8: '8',\n      9: '9',\n      10: '10',\n      11: '11',\n      12: '12',\n    },\n    undefined,\n    {\n      display: 'inline-radio',\n    }\n  );\n  const sizeS = optionsKnob(\n    'sizeS',\n    {\n      1: '1',\n      2: '2',\n      3: '3',\n      4: '4',\n      5: '5',\n      6: '6',\n      7: '7',\n      8: '8',\n      9: '9',\n      10: '10',\n      11: '11',\n      12: '12',\n    },\n    undefined,\n    {\n      display: 'inline-radio',\n    }\n  );\n  const sizeM = optionsKnob(\n    'sizeM',\n    {\n      1: '1',\n      2: '2',\n      3: '3',\n      4: '4',\n      5: '5',\n      6: '6',\n      7: '7',\n      8: '8',\n      9: '9',\n      10: '10',\n      11: '11',\n      12: '12',\n    },\n    undefined,\n    {\n      display: 'inline-radio',\n    }\n  );\n  const sizeL = optionsKnob(\n    'sizeL',\n    {\n      1: '1',\n      2: '2',\n      3: '3',\n      4: '4',\n      5: '5',\n      6: '6',\n      7: '7',\n      8: '8',\n      9: '9',\n      10: '10',\n      11: '11',\n      12: '12',\n    },\n    undefined,\n    {\n      display: 'inline-radio',\n    }\n  );\n  const sizeXL = optionsKnob(\n    'sizeXL',\n    {\n      1: '1',\n      2: '2',\n      3: '3',\n      4: '4',\n      5: '5',\n      6: '6',\n      7: '7',\n      8: '8',\n      9: '9',\n      10: '10',\n      11: '11',\n      12: '12',\n    },\n    undefined,\n    {\n      display: 'inline-radio',\n    }\n  );\n\n  const columnOptions = {\n    size,\n    sizeXL,\n    sizeL,\n    sizeM,\n    sizeS,\n    sizeXS,\n  };\n  return (\n    <Row>\n      <Column {...columnOptions}>1</Column>\n      <Column {...columnOptions}>2</Column>\n      <Column {...columnOptions}>3</Column>\n      <Column {...columnOptions}>4</Column>\n      <Column {...columnOptions}>5</Column>\n      <Column {...columnOptions}>6</Column>\n      <Column {...columnOptions}>7</Column>\n      <Column {...columnOptions}>8</Column>\n      <Column {...columnOptions}>9</Column>\n      <Column {...columnOptions}>10</Column>\n      <Column {...columnOptions}>11</Column>\n      <Column {...columnOptions}>12</Column>\n    </Row>\n  );\n}\n    "
    ]
  },
  "Others Styles Align": {
    "prefix": "Others Styles Align",
    "description": "Align",
    "body": [
      "import { Heading, Text, Card, Table, Paragraph } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      className: 'align-baseline',\n      properties: 'vertical-align: baseline ;',\n    },\n    {\n      className: 'align-top',\n      properties: 'vertical-align: top ;',\n    },\n    {\n      className: 'align-middle',\n      properties: 'vertical-align: middle ;',\n    },\n    {\n      className: 'align-bottom',\n      properties: 'vertical-align: bottom ;',\n    },\n    {\n      className: 'align-text-bottom',\n      properties: 'vertical-align: text-bottom ;',\n    },\n    {\n      className: 'align-text-top',\n      properties: 'vertical-align: text-top ;',\n    },\n  ];\n  return (\n    <div>\n      <Heading size=\"xxl\">Vertical alignment</Heading>\n      <br />\n      &nbsp;\n      <Text weight=\"strong\">Change the vertical alignment of inline, inline-block, inline-table </Text>\n      &nbsp;\n      <div\n        style={{\n          height: '250px',\n        }}\n        className=\"mt-5 mb-8\"\n      >\n        <Card className=\"h-100\">\n          <Table\n            data={data}\n            schema={utilitiesSchema}\n            size={'standard'}\n            headerOptions={{\n              withSearch: true,\n            }}\n            showMenu={false}\n          />\n        </Card>\n      </div>\n      <Heading size=\"m\">Examples</Heading>\n      <Paragraph>Here are some representative examples of these classes:</Paragraph>\n      &nbsp;\n      <div className=\"pl-10 h-25 Utilities-example w-50\">\n        <span className=\"align-baseline\">baseline </span>\n        <span className=\"align-top\">top </span>\n        <span className=\"align-middle\">middle </span>\n        <span className=\"align-bottom\">bottom </span>\n        <span className=\"align-text-top\">text-top </span>\n        <span className=\"align-text-bottom\">text-bottom </span>\n      </div>\n      &nbsp;\n      <div className=\"DocPage-codeBlock w-50 pl-10\">\n        {'<span className=\"align-baseline\">baseline </span>'}\n        <br />\n        {'<span className=\"align-top\">top </span>'}\n        <br />\n        {'<span className=\"align-middle\">middle </span>'}\n        <br />\n        {'<span className=\"align-bottom\">bottom </span>'}\n        <br />\n        {'<span className=\"align-text-top\">text-top </span>'}\n        <br />\n        {'<span className=\"align-text-bottom\">text-bottom </span>'}\n        <br />\n      </div>\n      &nbsp;\n    </div>\n  );\n}\n    "
    ]
  },
  "Others Styles Animation": {
    "prefix": "Others Styles Animation",
    "description": "Animation",
    "body": [
      "import { Heading, Text, Row } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      className: 'opacity-0',\n      properties: 'opacity: 0',\n    },\n    {\n      className: 'opacity-1',\n      properties: 'opacity: 1',\n    },\n    {\n      className: 'fade-in',\n      properties: '0 to 100 opacity',\n    },\n    {\n      className: 'fade-out',\n      properties: '100 to 0 opacity',\n    },\n    {\n      className: 'slideOut-left',\n      properties: 'The object is moving 16px left while fading out, using an exit-expressive-curve',\n    },\n    {\n      className: 'slideIn-left',\n      properties: 'The object is moving 16px left while fading in, using an entrance-expressive-curve',\n    },\n    {\n      className: 'slideOut-right',\n      properties: 'The object is moving 16px from left to right while fading out, using an exit-expressive-curve',\n    },\n    {\n      className: 'slideIn-right',\n      properties: 'The object is moving 16px from left to right while fading in, using an entrance-expressive-curve',\n    },\n  ];\n\n  return (\n    <div>\n      <Heading size=\"xxl\">Animation</Heading>\n      <br />\n      <Text weight=\"strong\">Easily set the animation using below classes</Text>\n      <Row className=\"mt-5 mb-8\">\n        {data.map((item, key) => {\n          const { className, properties } = item;\n          return <Container key={key} className={className} property={properties} />;\n        })}\n      </Row>\n    </div>\n  );\n}\n    "
    ]
  },
  "Others Styles Background": {
    "prefix": "Others Styles Background",
    "description": "Background",
    "body": [
      "import { Heading, Text, Card, Table, Paragraph } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      className: 'bg-primary',\n      properties: 'background-color: var(--primary);',\n    },\n    {\n      className: 'bg-secondary',\n      properties: 'background-color: var(--secondary);',\n    },\n    {\n      className: 'bg-secondary-lighter',\n      properties: 'background-color: var(--secondary-lighter);',\n    },\n    {\n      className: 'bg-secondary-lightest',\n      properties: 'background-color: var(--secondary-lightest);',\n    },\n    {\n      className: 'bg-success',\n      properties: 'background-color: var(--success);',\n    },\n    {\n      className: 'bg-warning',\n      properties: 'background-color: var(--warning);',\n    },\n    {\n      className: 'bg-danger',\n      properties: 'background-color: var(--alert);',\n    },\n    {\n      className: 'bg-light',\n      properties: 'background-color: var(--white);',\n    },\n    {\n      className: 'bg-dark',\n      properties: 'background-color: var(--inverse);',\n    },\n    {\n      className: 'bg-transparent',\n      properties: 'background-color: transparent;',\n    },\n  ];\n\n  return (\n    <div>\n      <Heading size=\"xxl\">Background color</Heading>\n      <br />\n      <Text weight=\"strong\">Easily set the background of an element to any contextual class</Text>\n      <div\n        style={{\n          height: '250px',\n        }}\n        className=\"mt-5 mb-8\"\n      >\n        <Card className=\"h-100\">\n          <Table\n            data={data}\n            schema={utilitiesSchema}\n            headerOptions={{\n              withSearch: true,\n            }}\n            size={'standard'}\n            showMenu={false}\n          />\n        </Card>\n      </div>\n      <Heading size=\"m\">Examples</Heading>\n      <Paragraph>Here are some representative examples of these classes:</Paragraph>\n      &nbsp;\n      <div className=\"p-7 mb-4 bg-primary\">.bg-primary</div>\n      <div className=\"p-7 mb-4 bg-secondary\">.bg-secondary</div>\n      <div className=\"p-7 mb-4 bg-secondary-lighter\">.bg-secondary-lighter</div>\n      <div className=\"p-7 mb-4 bg-secondary-lightest\">.bg-secondary-lightest</div>\n      <div className=\"p-7 mb-4 bg-success \">.bg-success</div>\n      <div className=\"p-7 mb-4 bg-danger \">.bg-danger</div>\n      <div className=\"p-7 mb-4 bg-warning text-dark\">.bg-warning</div>\n      <div className=\"p-7 mb-4 bg-light text-dark\">.bg-light</div>\n      <div className=\"p-7 mb-4 bg-transparent text-dark\">.bg-transparent</div>\n      <div className=\"p-7 mb-4 bg-dark Utilities-text--color\">.bg-dark</div>\n      &nbsp;\n      <div className=\"DocPage-codeBlock pb-5 pt-5 pl-5\">\n        {'<div className=\"p-7 mb-4 bg-primary\" >.bg-primary </div>'}\n        <br />\n        {'<div className=\"p-7 mb-4 bg-secondary\">.bg-secondary </div>'}\n        <br />\n        {'<div className=\"p-7 mb-4 bg-secondary-lighter\">.bg-secondary-lighter</div>'}\n        <br />\n        {'<div className=\"p-7 mb-4 bg-secondary-lightest\">.bg-secondary-lightest</div>'}\n        <br />\n        {'<div className=\"p-7 mb-4 bg-success\">.bg-success </div>'}\n        <br />\n        {'<div className=\"p-7 mb-4 bg-danger\">.bg-danger </div>'}\n        <br />\n        {'<div className=\"p-7 mb-4 bg-warning\">.bg-warning </div>'}\n        <br />\n        {'<div className=\"p-7 mb-4 bg-light\">.bg-light </div>'}\n        <br />\n        {'<div className=\"p-7 mb-4 bg-transparent\">.bg-transparent </div>'}\n        <br />\n        {'<div className=\"p-7 mb-4 bg-dark\">.bg-dark </div>'}\n        <br />\n      </div>\n    </div>\n  );\n}\n    "
    ]
  },
  "Others Styles Border": {
    "prefix": "Others Styles Border",
    "description": "Border",
    "body": [
      "import { Heading, Text, Card, Table, Paragraph } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      className: 'border',\n      properties: 'border: var(--border) ;',\n    },\n    {\n      className: 'border-top',\n      properties: ' border-top: var(--border) ;',\n    },\n    {\n      className: 'border-bottom',\n      properties: 'border-bottom: var(--border) ;',\n    },\n    {\n      className: 'border-right',\n      properties: 'border-right: var(--border) ;',\n    },\n    {\n      className: 'border-left',\n      properties: 'border-left: var(--border) ;',\n    },\n    {\n      className: 'border-0',\n      properties: 'border: 0 ;',\n    },\n    {\n      className: 'border-top-0',\n      properties: ' border-top: 0 ;',\n    },\n    {\n      className: 'border-bottom-0',\n      properties: 'border-bottom: 0 ;',\n    },\n    {\n      className: 'border-right-0',\n      properties: 'border-right: 0 ;',\n    },\n  ];\n  return (\n    <div>\n      <Heading size=\"xxl\">Border</Heading>\n      <br />\n      &nbsp;\n      <Text weight=\"strong\">\n        Use border utilities to add or remove an element’s borders. Choose from all borders or one at a time.\n      </Text>\n      &nbsp;\n      <div\n        style={{\n          height: '250px',\n        }}\n        className=\"mt-5 mb-8\"\n      >\n        <Card className=\"h-100\">\n          <Table\n            data={data}\n            schema={utilitiesSchema}\n            size={'standard'}\n            headerOptions={{\n              withSearch: true,\n            }}\n            showMenu={false}\n          />\n        </Card>\n      </div>\n      <Heading size=\"m\">Examples</Heading>\n      <Paragraph>Here are some representative examples of these classes:</Paragraph>\n      &nbsp;\n      <div className=\"pl-10 h-25 bg-light w-50\">\n        <span className=\"border bg-secondary-lightest p-8 d-inline-block mr-6\">border</span>\n        <span className=\"border-top bg-secondary-lightest p-8 d-inline-block mr-6\">top</span>\n        <span className=\"border-right bg-secondary-lightest p-8 d-inline-block mr-6\">right</span>\n        <span className=\"border-bottom bg-secondary-lightest p-8 d-inline-block mr-6\">bottom</span>\n        <span className=\"border-left bg-secondary-lightest p-8 d-inline-block\">left</span>\n      </div>\n      &nbsp;\n      <div className=\"DocPage-codeBlock w-50 pl-10\">\n        {'<span className=\"border bg-secondary-lightest p-8 d-inline-block mr-6\">border</span>'}\n        <br />\n        {'<span className=\"border-top bg-secondary-lightest p-8 d-inline-block mr-6\">top</span>'}\n        <br />\n        {'<span className=\"border-right bg-secondary-lightest p-8 d-inline-block mr-6\">right</span>'}\n        <br />\n        {'<span className=\"border-bottom bg-secondary-lightest p-8 d-inline-block mr-6\">bottom</span>'}\n        <br />\n        {'<span className=\"border-left bg-secondary-lightest p-8 d-inline-block\">left</span>'}\n      </div>\n      &nbsp;\n      <div className=\"pl-10 h-25 bg-light w-50\">\n        <span className=\"border border-0 bg-secondary-lightest p-8 d-inline-block mr-6\">border-0</span>\n        <span className=\"border border-top-0 bg-secondary-lightest p-8 d-inline-block mr-6\">top-0</span>\n        <span className=\"border border-right-0 bg-secondary-lightest p-8 d-inline-block mr-6\">right-0</span>\n        <span className=\"border border-bottom-0 bg-secondary-lightest p-8 d-inline-block mr-6\">bottom-0</span>\n        <span className=\"border border-left-0 bg-secondary-lightest p-8 d-inline-block\">left-0</span>\n      </div>\n      &nbsp;\n      <div className=\"DocPage-codeBlock w-50 pl-10\">\n        {'<span className=\"border border-0 bg-secondary-lightest p-8 d-inline-block mr-6\">border-0</span>'}\n        <br />\n        {'<span className=\"border border-top-0 bg-secondary-lightest p-8 d-inline-block mr-6\">top-0</span>'}\n        <br />\n        {'<span className=\"border border-right-0 bg-secondary-lightest p-8 d-inline-block mr-6\">right-0</span>'}\n        <br />\n        {'<span className=\"border border-bottom-0 bg-secondary-lightest p-8 d-inline-block mr-6\">bottom-0</span>'}\n        <br />\n        {'<span className=\"border border-left-0 bg-secondary-lightest p-8 d-inline-block\">left-0</span>'}\n      </div>\n      &nbsp;\n    </div>\n  );\n}\n    "
    ]
  },
  "Others Styles Display": {
    "prefix": "Others Styles Display",
    "description": "Display",
    "body": [
      "import { Heading, Text, Paragraph, Card, Table } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      className: 'd-none',\n      properties: 'display: none ;',\n    },\n    {\n      className: 'd-inline',\n      properties: 'display: inline ;',\n    },\n    {\n      className: 'd-inline-block',\n      properties: 'display: inline-block ;',\n    },\n    {\n      className: 'd-block',\n      properties: 'display: block ;',\n    },\n    {\n      className: 'd-table',\n      properties: 'display: table ;',\n    },\n    {\n      className: 'd-table-row',\n      properties: 'display: table-row ;',\n    },\n    {\n      className: 'd-table-cell',\n      properties: 'display: table-cell ;',\n    },\n    {\n      className: 'd-flex',\n      properties: 'display: flex ;',\n    },\n    {\n      className: 'd-inline-flex',\n      properties: 'display: inline-flex ;',\n    },\n  ];\n  return (\n    <div>\n      <Heading size=\"xxl\">Display property</Heading>\n      <br />\n      <Text weight=\"strong\">\n        Quickly and responsively toggle the display value of components and more with our display utilities.\n      </Text>\n      &nbsp;\n      <Heading size=\"m\">How it works</Heading>\n      <Paragraph>\n        Change the value of the display property with our responsive display utility classes. We purposely support only\n        a subset of all possible values for display. Classes can be combined for various effects as you need.\n      </Paragraph>\n      &nbsp;\n      <Heading size=\"m\">Notation</Heading>\n      <Paragraph> Value of display is one of:</Paragraph>\n      <div\n        style={{\n          height: '350px',\n        }}\n        className=\"mt-5 mb-8\"\n      >\n        <Card className=\"h-100\">\n          <Table\n            data={data}\n            schema={utilitiesSchema}\n            headerOptions={{\n              withSearch: true,\n            }}\n            size={'standard'}\n            showMenu={false}\n          />\n        </Card>\n      </div>\n      <Heading size=\"m\">Examples</Heading>\n      <Paragraph>Here are some representative examples of these classes:</Paragraph>\n      <br />\n      <div className=\"d-inline p-2 Utilities-example\">d-inline</div>\n      <div className=\"d-inline p-2 bg-dark Utilities-example Utilities-text--color\">d-inline</div>\n      <br />\n      &nbsp;\n      <div className=\"DocPage-codeBlock pb-5 pt-5 pl-5\">\n        {'<div className=\"d-inline p-2\">d-inline</div>'}\n        <br />\n        {'<div className=\"d-inline p-2\">d-inline</div>'}\n        <br />\n      </div>\n      &nbsp;\n      <span className=\"d-block p-2 Utilities-example\">d-block</span>\n      <span className=\"d-block p-2 bg-dark Utilities-example Utilities-text--color \">d-block</span>\n      &nbsp;\n      <div className=\"DocPage-codeBlock pb-5 pt-5 pl-5\">\n        {'<span className=\"d-block p-2\">d-block</span>'}\n        <br />\n        {'<span className=\"d-block p-2\">d-block</span>'}\n        <br />\n      </div>\n    </div>\n  );\n}\n    "
    ]
  },
  "Others Styles Flex": {
    "prefix": "Others Styles Flex",
    "description": "Flex",
    "body": [
      "import { Heading, Text, Card, Table, Paragraph } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      className: 'flex-fill',\n      properties: 'flex: 1 1 auto ;',\n    },\n    {\n      className: 'flex-row',\n      properties: 'flex-direction: row ;',\n    },\n    {\n      className: 'flex-column',\n      properties: 'flex-direction: column ;',\n    },\n    {\n      className: 'flex-row-reverse',\n      properties: 'flex-direction: row-reverse ;',\n    },\n    {\n      className: 'flex-column-reverse',\n      properties: 'flex-direction: column-reverse ;',\n    },\n    {\n      className: 'flex-grow-0',\n      properties: 'flex-grow: 0 ;',\n    },\n    {\n      className: 'flex-grow-1',\n      properties: 'flex-grow: 1 ;',\n    },\n    {\n      className: 'flex-shrink-0',\n      properties: 'flex-shrink: 0 ;',\n    },\n    {\n      className: 'flex-shrink-1',\n      properties: 'flex-shrink: 1 ;',\n    },\n    {\n      className: 'flex-wrap',\n      properties: 'flex-wrap: wrap ;',\n    },\n    {\n      className: 'flex-nowrap',\n      properties: 'flex-wrap: nowrap ;',\n    },\n    {\n      className: 'flex-wrap-reverse',\n      properties: 'flex-wrap: wrap-reverse ;',\n    },\n    {\n      className: 'justify-content-start',\n      properties: 'justify-content: flex-start ;',\n    },\n    {\n      className: 'justify-content-end',\n      properties: 'justify-content: flex-end ;',\n    },\n    {\n      className: 'justify-content-center',\n      properties: 'justify-content: center ;',\n    },\n    {\n      className: 'justify-content-between',\n      properties: 'justify-content: space-between ;',\n    },\n    {\n      className: 'justify-content-around',\n      properties: 'justify-content: space-around ;',\n    },\n    {\n      className: 'justify-content-evenly',\n      properties: 'justify-content: space-evenly ;',\n    },\n    {\n      className: 'align-items-start',\n      properties: 'align-items: flex-start ;',\n    },\n    {\n      className: 'align-items-end',\n      properties: 'align-items: flex-end ;',\n    },\n    {\n      className: 'align-items-center',\n      properties: 'align-items: center ;',\n    },\n    {\n      className: 'align-items-baseline',\n      properties: 'align-items: baseline ;',\n    },\n    {\n      className: 'align-items-stretch',\n      properties: 'align-items: stretch ;',\n    },\n    {\n      className: 'align-content-start',\n      properties: 'align-content: flex-start ;',\n    },\n    {\n      className: 'align-content-end',\n      properties: 'align-content: flex-end ;',\n    },\n    {\n      className: 'align-content-center',\n      properties: 'align-content: center ;',\n    },\n    {\n      className: 'align-content-between',\n      properties: 'align-content: space-between ;',\n    },\n    {\n      className: 'align-content-around',\n      properties: 'align-content: space-around ;',\n    },\n    {\n      className: 'align-content-stretch',\n      properties: 'align-content: stretch ;',\n    },\n    {\n      className: 'align-self-auto',\n      properties: 'align-self: auto ;',\n    },\n    {\n      className: 'align-self-start',\n      properties: 'align-self: flex-start ;',\n    },\n    {\n      className: 'align-self-end',\n      properties: 'align-self: flex-end ;',\n    },\n    {\n      className: 'align-self-center',\n      properties: 'align-self: center ;',\n    },\n    {\n      className: 'align-self-baseline',\n      properties: 'align-self: baseline ;',\n    },\n    {\n      className: 'align-self-stretch',\n      properties: 'align-self: stretch ;',\n    },\n    {\n      className: 'order-first',\n      properties: 'order: -1 ;',\n    },\n    {\n      className: 'order-0',\n      properties: 'order: 0 ;',\n    },\n    {\n      className: 'order-1',\n      properties: 'order: 1 ;',\n    },\n    {\n      className: 'order-2',\n      properties: 'order: 2 ;',\n    },\n    {\n      className: 'order-3',\n      properties: 'order: 3 ;',\n    },\n    {\n      className: 'order-4',\n      properties: 'order: 4 ;',\n    },\n    {\n      className: 'order-5',\n      properties: 'order: 5 ;',\n    },\n    {\n      className: 'order-last',\n      properties: 'order: 6 ;',\n    },\n  ];\n  return (\n    <div>\n      <Heading size=\"xxl\">Flex</Heading>\n      <br />\n      <Text weight=\"strong\">\n        Quickly manage the layout, alignment, and sizing of grid columns, navigation, components, and more with a full\n        suite of responsive flexbox utilities.\n      </Text>\n      <div\n        style={{\n          height: '350px',\n        }}\n        className=\"mt-5 mb-8\"\n      >\n        <Card className=\"h-100\">\n          <Table\n            data={data}\n            schema={utilitiesSchema}\n            headerOptions={{\n              withSearch: true,\n            }}\n            size={'standard'}\n            showMenu={false}\n          />\n        </Card>\n      </div>\n      <Heading size=\"m\">Examples</Heading>\n      <Paragraph>Here are some representative examples of these classes:</Paragraph>\n      &nbsp;\n      <Heading size=\"s\">\n        Use .flex-row to set a horizontal direction (the browser default), or .flex-row-reverse to start the horizontal\n        direction from the opposite side.\n      </Heading>\n      &nbsp;\n      <div className=\"d-flex flex-row Utilities-example h-25\">\n        <div className=\"p-2\">Flex item 1</div>\n        <div className=\"p-2\">Flex item 2</div>\n        <div className=\"p-2\">Flex item 3</div>\n      </div>\n      &nbsp;\n      <div className=\"d-flex flex-row-reverse Utilities-example h-25\">\n        <div className=\"p-2\">Flex item 1</div>\n        <div className=\"p-2\">Flex item 2</div>\n        <div className=\"p-2\">Flex item 3</div>\n      </div>\n      &nbsp;\n      <div className=\"DocPage-codeBlock pb-5 pt-5 pl-5\">\n        {'<div className=\"d-flex flex-row \">'}\n        <br />\n        &nbsp; {'<div className=\"p-2\">Flex item 1</div>'}\n        <br />\n        &nbsp; {'<div className=\"p-2\">Flex item 2</div>'}\n        <br />\n        &nbsp; {'<div className=\"p-2\">Flex item 3</div>'}\n        <br />\n        {'</div>'}\n        <br />\n        {'<div className=\"d-flex flex-row-reverse\">'}\n        <br />\n        &nbsp; {'<div className=\"p-2\">Flex item 1</div>'}\n        <br />\n        &nbsp; {'<div className=\"p-2\">Flex item 2</div>'}\n        <br />\n        &nbsp; {'<div className=\"p-2\">Flex item 3</div>'}\n        <br />\n        {'</div>'}\n      </div>\n      &nbsp;\n      <Heading size=\"s\">\n        Use .flex-column to set a vertical direction, or .flex-column-reverse to start the vertical direction from the\n        opposite side.\n      </Heading>\n      &nbsp;\n      <div className=\"d-flex flex-column Utilities-example\">\n        <div className=\"p-2\">Flex item 1</div>\n        <div className=\"p-2\">Flex item 2</div>\n        <div className=\"p-2\">Flex item 3</div>\n      </div>\n      &nbsp;\n      <div className=\"d-flex flex-column-reverse Utilities-example\">\n        <div className=\"p-2\">Flex item 1</div>\n        <div className=\"p-2\">Flex item 2</div>\n        <div className=\"p-2\">Flex item 3</div>\n      </div>\n      &nbsp;\n      <div className=\"DocPage-codeBlock pb-5 pt-5 pl-5\">\n        <code>\n          {'<div className=\"d-flex flex-column\">'}\n          <br />\n          &nbsp; {'<div className=\"p-2\">Flex item 1</div>'}\n          <br />\n          &nbsp; {'<div className=\"p-2\">Flex item 2</div>'}\n          <br />\n          &nbsp; {'<div className=\"p-2\">Flex item 3</div>'}\n          <br />\n          {'</div>'}\n          <br />\n        </code>\n        &nbsp;\n        <code>\n          {'<div className=\"d-flex flex-column-reverse\">'}\n          <br />\n          &nbsp; {'<div className=\"p-2\">Flex item 1</div>'}\n          <br />\n          &nbsp; {'<div className=\"p-2\">Flex item 2</div>'}\n          <br />\n          &nbsp; {'<div className=\"p-2\">Flex item 3</div>'}\n          <br />\n          {'</div>'}\n          <br />\n        </code>\n      </div>\n    </div>\n  );\n}\n    "
    ]
  },
  "Others Styles Miscellaneous": {
    "prefix": "Others Styles Miscellaneous",
    "description": "Miscellaneous",
    "body": [
      "import { Card, Table } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      className: 'hide-scroll-bar::-webkit-scrollbar',\n      properties: 'height: 0px;\\nbackground: transparent;',\n    },\n    {\n      className: 'hide-scroll-bar',\n      properties: '-ms-overflow-style: none;\\nscrollbar-width: none;',\n    },\n    {\n      className: 'ellipsis',\n      properties: 'overflow: hidden;\\ntext-overflow: ellipsis;',\n    },\n    {\n      className: 'ellipsis--noWrap',\n      properties: 'white-space: nowrap;\\noverflow: hidden;\\ntext-overflow: ellipsis;',\n    },\n    {\n      className: 'cursor-pointer',\n      properties: 'cursor: pointer;',\n    },\n  ];\n  return (\n    <div className=\"mt-8 mb-8\">\n      <Card className=\"h-100\">\n        <Table\n          data={data}\n          schema={utilitiesSchema}\n          headerOptions={{\n            withSearch: true,\n          }}\n          size={'standard'}\n          showMenu={false}\n        />\n      </Card>\n    </div>\n  );\n}\n    "
    ]
  },
  "Others Styles Overflow": {
    "prefix": "Others Styles Overflow",
    "description": "Overflow",
    "body": [
      "import { Heading, Text, Card, Table, Paragraph } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      className: 'overflow-auto',\n      properties: 'overflow: auto !important;',\n    },\n    {\n      className: 'overflow-hidden',\n      properties: 'overflow: hidden !important;',\n    },\n  ];\n  return (\n    <div>\n      <Heading size=\"xxl\">Overflow</Heading>\n      <br />\n      <Text weight=\"strong\">\n        The CSS overflow property controls what happens to content that is too big to fit into an area.\n      </Text>\n      <div className=\"mb-8 mt-5\">\n        <Card className=\"h-100\">\n          <Table\n            data={data}\n            schema={utilitiesSchema}\n            headerOptions={{\n              withSearch: true,\n            }}\n            size={'standard'}\n            showMenu={false}\n          />\n        </Card>\n      </div>\n      <Heading size=\"m\">Examples</Heading>\n      <Paragraph>Here are some representative examples of these classes:</Paragraph>\n      &nbsp;\n      <Heading size=\"s\">The auto value adds scrollbars when necessary:</Heading>\n      <br />\n      <div className=\"overflow-auto Utilities-overflow\">\n        You can use the overflow property when you want to have better control of the layout. The overflow property\n        specifies what happens if content overflows an element's box.\n      </div>\n      &nbsp;\n      <div className=\"DocPage-codeBlock\">\n        {'<div className=\"overflow-auto overflow\">'}\n        <br />\n        {\n          'You can use the overflow property when you want to have better control of the layout. The overflow property specifies what happens if content overflows an element box.'\n        }\n        <br />\n        {'</div>'}\n      </div>\n      &nbsp;\n      <Heading size=\"s\">With the hidden value, the overflow is clipped, and the rest of the content is hidden</Heading>\n      <br />\n      <div className=\"overflow-hidden Utilities-overflow\">\n        You can use the overflow property when you want to have better control of the layout. The overflow property\n        specifies what happens if content overflows an element's box.\n      </div>\n      &nbsp;\n      <div className=\"DocPage-codeBlock\">\n        {'<div className=\"overflow-hidden overflow\">'}\n        <br />\n        {\n          'You can use the overflow property when you want to have better control of the layout. The overflow property specifies what happens if content overflows an elements box.'\n        }\n        <br />\n        {'</div>'}\n      </div>\n    </div>\n  );\n}\n    "
    ]
  },
  "Others Styles Position": {
    "prefix": "Others Styles Position",
    "description": "Position",
    "body": [
      "import { Heading, Text, Card, Table, Paragraph } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      className: 'position-static',\n      properties: 'position: static ;',\n    },\n    {\n      className: 'position-relative',\n      properties: 'position: relative ;',\n    },\n    {\n      className: 'position-absolute',\n      properties: 'position: absolute ;',\n    },\n    {\n      className: 'position-fixed',\n      properties: 'position: fixed ;',\n    },\n    {\n      className: 'position-sticky',\n      properties: 'position: -webkit-sticky ;\\nposition: sticky ;',\n    },\n  ];\n  return (\n    <div>\n      <Heading size=\"xxl\">Position</Heading>\n      <br />\n      <Text weight=\"strong\">Use these shorthand utilities for quickly configuring the position of an element.</Text>\n      <div className=\"mb-8 mt-5\">\n        <Card className=\"h-100\">\n          <Table\n            data={data}\n            schema={utilitiesSchema}\n            headerOptions={{\n              withSearch: true,\n            }}\n            size={'standard'}\n            showMenu={false}\n          />\n        </Card>\n      </div>\n      <Heading size=\"m\">Examples</Heading>\n      <Paragraph>Here are some representative examples of these classes:</Paragraph>\n      <br />\n      <div className=\"DocPage-codeBlock w-50\">\n        <code>\n          {'<div className=\"position-static\">...</div>'}\n          <br />\n          {'<div className=\"position-relative\">...</div>'}\n          <br />\n          {'<div className=\"position-absolute\">...</div>'}\n          <br />\n          {'<div className=\"position-fixed\">...</div>'}\n          <br />\n          {'<div className=\"position-sticky\">...</div>'}\n          <br />\n        </code>\n      </div>\n    </div>\n  );\n}\n    "
    ]
  },
  "Others Styles Sizing": {
    "prefix": "Others Styles Sizing",
    "description": "Sizing",
    "body": [
      "import { Heading, Text, Card, Table, Paragraph } from '@innovaccer/design-system';\n    () => {\n  const data = [\n    {\n      className: 'w-25',\n      properties: 'width: 25% ;',\n    },\n    {\n      className: 'w-50',\n      properties: 'width: 50% ;',\n    },\n    {\n      className: 'w-75',\n      properties: 'width: 75% ;',\n    },\n    {\n      className: 'w-100',\n      properties: 'width: 100% ;',\n    },\n    {\n      className: 'w-auto',\n      properties: 'width: auto ;',\n    },\n    {\n      className: 'mw-100',\n      properties: 'max-width: 100% ;',\n    },\n    {\n      className: 'vw-100',\n      properties: 'width: 100vw ;',\n    },\n  ];\n  const Data = [\n    {\n      className: 'h-25',\n      properties: 'height: 25% ;',\n    },\n    {\n      className: 'h-50',\n      properties: 'height: 50% ;',\n    },\n    {\n      className: 'h-75',\n      properties: 'height: 75% ;',\n    },\n    {\n      className: 'h-100',\n      properties: 'height: 100% ;',\n    },\n    {\n      className: 'h-auto',\n      properties: 'height: auto ;',\n    },\n    {\n      className: 'mh-100',\n      properties: 'max-height: 100% ;',\n    },\n    {\n      className: 'vh-100',\n      properties: 'height: 100vh ;',\n    },\n    {\n      className: 'min-vh-100',\n      properties: 'min-height: 100vh ;',\n    },\n  ];\n  return (\n    <div>\n      <Heading size=\"xxl\"> Sizing</Heading>\n      <br />\n      <Text weight=\"strong\">\n        You can make an element as wide or as tall (relative to its parent) with our width and height utilities.\n      </Text>\n      <br />\n      &nbsp;\n      <Heading size=\"s\">WIDTH</Heading>\n      <div className=\"mt-4 mb-8\">\n        <Card className=\"h-100\">\n          <Table\n            data={data}\n            schema={utilitiesSchema}\n            headerOptions={{\n              withSearch: true,\n            }}\n            size={'standard'}\n            showMenu={false}\n          />\n        </Card>\n      </div>\n      <Heading size=\"m\">Examples</Heading>\n      <Paragraph>Here are some representative examples of these classes:</Paragraph>\n      &nbsp;\n      <div className=\"w-25 p-3 mb-2 width-color\">Width 25%</div>\n      <div className=\"w-50 p-3 mb-2 width-color\">Width 50%</div>\n      <div className=\"w-75 p-3 mb-2 width-color\">Width 75%</div>\n      <div className=\"w-100 p-3 mb-2 width-color\">Width 100%</div>\n      &nbsp;\n      <div className=\"DocPage-codeBlock\">\n        {'<div className=\"w-25 p-3\">Width 25%</div>'}\n        <br />\n        {'<div className=\"w-50 p-3\">Width 50%</div>'}\n        <br />\n        {'<div className=\"w-75 p-3\">Width 75%</div>'}\n        <br />\n        {'<div className=\"w-100 p-3\">Width 100%</div>'}\n        <br />\n      </div>\n      &nbsp;\n      <Heading size=\"m\">HEIGHT</Heading>\n      <div className=\"mt-4 mb-8\">\n        <Card className=\"h-100\">\n          <Table\n            data={Data}\n            schema={utilitiesSchema}\n            headerOptions={{\n              withSearch: true,\n            }}\n            size={'standard'}\n            showMenu={false}\n          />\n        </Card>\n      </div>\n      <Heading size=\"m\">Examples</Heading>\n      <Paragraph>Here are some representative examples of these classes:</Paragraph>\n      &nbsp;\n      <div className=\"height w-50\">\n        <div className=\"h-25 d-inline-block height-color mr-2\">Height 25%</div>\n        <div className=\"h-50 d-inline-block height-color mr-2\">Height 50%</div>\n        <div className=\"h-75 d-inline-block height-color mr-2\">Height 75%</div>\n        <div className=\"h-100 d-inline-block height-color mr-2\">Height 100%</div>\n      </div>\n      &nbsp;\n      <div className=\"DocPage-codeBlock\">\n        <code>\n          {'<div className=\"h-25 d-inline-block\">Height 25%</div>'}\n          <br />\n          {'<div className=\"h-50 d-inline-block\">Height 50%</div>'}\n          <br />\n          {'<div className=\"h-75 d-inline-block\">Height 75%</div>'}\n          <br />\n          {'<div className=\"h-100 d-inline-block\">Height 100%</div>'}\n          <br />\n        </code>\n      </div>\n    </div>\n  );\n}\n    "
    ]
  },
  "Others Styles Spacing": {
    "prefix": "Others Styles Spacing",
    "description": "Spacing",
    "body": [
      "import { Heading, Text, Paragraph, Row, Column, Card, Table } from '@innovaccer/design-system';\n    () => {\n  return (\n    <div>\n      <Heading size=\"xxl\">Spacing</Heading>\n      <br />\n      <br />\n      <Text weight=\"strong\">\n        The classes are named using the format (property)(sides)-(size) for xs and (property)(sides)-(breakpoint)-(size)\n        for sm, md, lg, and xl.\n      </Text>\n      <br />\n      <Paragraph>\n        <br />\n        <Text weight=\"strong\">Where property is one of:</Text>\n        <br />\n        m - for classes that set margin\n        <br />\n        p - for classes that set padding\n        <br />\n        <br />\n        <Text weight=\"strong\">Where sides is one of:</Text>\n        <br />\n        t - for classes that set margin-top or padding-top\n        <br />\n        b - for classes that set margin-bottom or padding-bottom\n        <br />\n        l - for classes that set margin-left or padding-left\n        <br />\n        r - for classes that set margin-right or padding-right\n        <br />\n        x - for classes that set both *-left and *-right\n        <br />\n        y - for classes that set both *-top and *-bottom\n        <br />\n        blank - for classes that set a margin or padding on all 4 sides of the element\n        <br />\n        <br />\n        <Text weight=\"strong\">Where size is one of:</Text>\n      </Paragraph>\n      <br />\n      <div className=\"mt-5 mb-8 bg-secondary-lightest p-3 Card w-50\">\n        <Row>\n          <Column className=\"p-2\">\n            <Text weight=\"strong\">Size</Text>\n          </Column>\n          <Column className=\"p-2\">\n            <Text weight=\"strong\">Token</Text>\n          </Column>\n          <Column className=\"p-2\">\n            <Text weight=\"strong\">Pixels</Text>\n          </Column>\n        </Row>\n        {sizeData.map(({ value, properties, pixel }, index) => {\n          return (\n            <Row key={index}>\n              <Column className=\"p-2\">{value}</Column>\n              <Column className=\"p-2\">{properties}</Column>\n              <Column className=\"p-2\">{pixel}</Column>\n            </Row>\n          );\n        })}\n      </div>\n      <Heading size=\"m\">Class List</Heading>\n      <div className=\"mt-5 mb-8\">\n        <Card className=\"h-100 overflow-hidden\">\n          <Table\n            data={classData}\n            schema={classSchema}\n            separator={true}\n            withHeader={true}\n            headerOptions={{\n              withSearch: true,\n            }}\n            size=\"tight\"\n            showMenu={false}\n            pageSize={16}\n            onSearch={(currData, searchTerm) => {\n              return currData.filter((d) => d.pixel.toLowerCase().includes(searchTerm.toLowerCase()));\n            }}\n          />\n        </Card>\n      </div>\n      <Heading size=\"m\">Examples</Heading>\n      <Paragraph>Here are some representative examples of these classes:</Paragraph>\n      &nbsp;\n      <div className=\"w-50 bg-secondary p-10 m-10\">\n        This text is the content of the box. We have added a (p-10) padding, (m-10) margin to it.\n      </div>\n      <div className=\"DocPage-codeBlock pt-5 pb-5 pl-5\">\n        {'<div className=\"w-50 bg-secondary p-10 m-10 \">'}\n        <br />\n        {'This text is the content of the box.'}\n        {'We have added a (p-10) padding, (m-10) margin to it.'}\n        <br />\n        {'</div>'}\n      </div>\n      &nbsp;\n    </div>\n  );\n}\n    "
    ]
  },
  "Others Utilities OutsideClick All": {
    "prefix": "Others Utilities OutsideClick All",
    "description": "All",
    "body": [
      "import { OutsideClick, Card, Heading } from '@innovaccer/design-system';\n    () => {\n  const outsideClickHandler = () => console.log('outside click');\n  const insideClickHandler = () => console.log('inside click');\n\n  return(\n    <OutsideClick className=\"d-inline-block\" onOutsideClick={outsideClickHandler}>\n      <Card\n        className=\"d-flex align-items-center justify-content-center\"\n        style={{ height: 200, width: 200 }}\n        onClick={insideClickHandler}\n      >\n        <Heading>Card</Heading>\n      </Card>\n    </OutsideClick>\n  );\n}\n    "
    ]
  },
  "Date and time picker": {
    "prefix": "Date and time picker",
    "description": "Date And Time Picker",
    "body": [
      "import { Label, DatePicker, Dropdown } from '@innovaccer/design-system';\n    \n\n() => {\n  class DateTimePicker extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        open: false,\n        date: undefined,\n        time: undefined\n      };\n    }\n\n    onDateChange(date, dateVal) {\n      this.setState({\n        date: dateVal,\n        open: !!date\n      });\n    }\n\n    onPopperToggle(val) {\n      this.setState({\n        open: val\n      });\n    }\n\n    onChangeHandler(selected) {\n      this.setState({\n        time: selected\n      });\n    }\n\n    render() {\n      const timeValues = ['10:00 AM', '10:30 AM', '11:00 AM', '11:30 AM', '12:00 PM', '12:30 PM', '01:00 PM', '01:30 PM'];\n      const {\n        open\n      } = this.state;\n\n      console.log(\"Date\", this.state.date, \"Time\", this.state.time);\n\n      return (\n        <div className=\"d-flex\">\n          <div className=\"d-flex flex-column\">\n            <Label withInput>Date</Label>\n            <DatePicker\n              withInput={true}\n              onDateChange={this.onDateChange.bind(this)}\n            />\n          </div>\n          <div className=\"d-flex flex-column ml-5\" style={{width: 'var(--spacing-8)'}}>\n            <Label withInput>Time</Label>\n            <Dropdown\n              open={open}\n              onPopperToggle={this.onPopperToggle.bind(this)}\n              options={timeValues.map(value => ({label: value, value}))}\n              onChange={this.onChangeHandler.bind(this)}\n            />\n          </div>\n        </div>\n      );\n    }\n  }\n\n  return <DateTimePicker />\n}\n    "
    ]
  },
  "Date range picker with custom Popover": {
    "prefix": "Date range picker with custom Popover",
    "description": "With Custom Popover",
    "body": [
      "import { Subheading, Icon, Chip, DateRangePicker, Divider } from '@innovaccer/design-system';\n    \n\n() => {\n   class CustomPopover extends React.Component {\n    constructor(props) {\n      super(props);\n      const { startDate, endDate } = DateRangePicker.utils.getCurrentWeek();\n\n      this.state = {\n        startDate,\n        endDate,\n        selected: 'currWeek',\n        monthNav: DateRangePicker.utils.getCurrentMonth(),\n      };\n\n      this.renderChildren = this.renderChildren.bind(this);\n      this.setDate = this.setDate.bind(this);\n      this.onReset = this.onReset.bind(this);\n    }\n\n    setDate(date) {\n      const d = new Date();\n      return new Date(d.setDate(date));\n    }\n\n    onReset() {\n      this.setState({\n        startDate:null,\n        endDate:null,\n        selected: \"\",\n        monthNav: DateRangePicker.utils.getCurrentMonth()\n      });\n    }\n\n    renderChildren() {\n      const { startDate, endDate, selected } = this.state;\n\n      return (\n        <div className=\"pt-6 px-5\">\n          <div className=\"d-flex align-items-center justify-content-between\">\n           <Subheading size=\"s\" className=\"py-3\" appearance=\"subtle\">Range</Subheading>\n            <Icon name=\"refresh\" onClick={this.onReset} />\n          </div>\n          <div className=\"pt-5\">\n            <Chip\n              label=\"This week\"\n              clearButton={false}\n              type=\"selection\"\n              className=\"mb-5 d-block\"\n              selected={selected === \"currWeek\"}\n              name=\"rangePicker\"\n              onClick={() => {\n                this.setState({\n                  selected: \"currWeek\",\n                  monthNav: DateRangePicker.utils.getCurrentMonth(),\n                  ...DateRangePicker.utils.getCurrentWeek()\n                });\n              }}\n            />\n            <Chip\n              label=\"Last week\"\n              clearButton={false}\n              type=\"selection\"\n              className=\"mb-5 d-block\"\n              selected={selected === 'prevWeek'}\n              name={\"chip\"}\n              onClick={() => {\n                this.setState({\n                  selected: \"prevWeek\",\n                  monthNav: DateRangePicker.utils.getCurrentMonth(),\n                  ...DateRangePicker.utils.getPreviousWeek()\n                });\n              }}\n            />\n            <Chip\n              label=\"Last month\"\n              clearButton={false}\n              type=\"selection\"\n              className=\"mb-5  d-block\"\n              selected={selected === 'prevMonth'}\n              name=\"rangePicker\"\n              onClick={() => {\n                this.setState({\n                  selected: \"prevMonth\",\n                  monthNav: DateRangePicker.utils.getCurrentMonth() - 1,\n                  ...DateRangePicker.utils.getPreviousMonth()\n                });\n              }}\n            />\n            <Chip\n              label=\"Last 90 days\"\n              clearButton={false}\n              type=\"selection\"\n              className=\"mb-5  d-block\"\n              selected={selected === 'prev90Days'}\n              name=\"rangePicker\"\n              onClick={() => {\n                this.setState({\n                  selected: \"prev90Days\",\n                  monthNav: DateRangePicker.utils.getCurrentMonth(),\n                  ...DateRangePicker.utils.getPrevious90Days()\n                });\n              }}\n            />\n             <Chip\n              label=\"Custom\"\n              clearButton={false}\n              type=\"selection\"\n              className=\"mb-5  d-block\"\n              selected={selected === 'custom'}\n              name=\"rangePicker\"\n              onClick={() => {\n                this.setState({\n                  selected: \"custom\",\n                  monthNav: DateRangePicker.utils.getCurrentMonth(),\n                  ...DateRangePicker.utils.getCustomDates()\n                });\n              }}\n            />\n          </div>\n        </div>\n      );\n    };\n\n    render() {\n      const { startDate, endDate, monthNav } = this.state;\n\n      return (\n        <div className=\"w-25\">\n          <DateRangePicker\n            withInput={true}\n            singleInput={true}\n            startDate={startDate}\n            endDate={endDate}\n            onRangeChange={(sDate, eDate, sValue, eValue) => {\n              console.log(sDate, eDate);\n            }}\n            monthsInView={1}\n            monthNav={monthNav}\n          >\n            {this.renderChildren()}\n            <Divider vertical={true} />\n          </DateRangePicker>\n        </div>\n      )\n    }\n  }\n\n  return <CustomPopover />\n}\n    "
    ]
  },
  "Basic Form": {
    "prefix": "Basic Form",
    "description": "Basic Form",
    "body": [
      "import { Card, Heading, Label, Input, Icon, Link, Button } from '@innovaccer/design-system';\n    \n\n() => {\n  class BasicForm extends React.Component {\n\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        signInDisabled: true,\n        passwordVisible: false,\n        data: { email: '', password: '' }\n      };\n\n      this.onEmailChange = this.onEmailChange.bind(this);\n      this.onPasswordChange = this.onPasswordChange.bind(this);\n      this.onActionClick = this.onActionClick.bind(this);\n      this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onActionClick() {\n      this.setState({\n        passwordVisible: !this.state.passwordVisible\n      });\n    }\n\n    onEmailChange(event) {\n      const { password = '' } = this.state.data;\n      const email = event.target.value;\n      const disabled = !password || !email;\n\n      this.setState({\n        data: { ...this.state.data, email },\n        signInDisabled: disabled\n      });\n    };\n\n    onPasswordChange(event) {\n      const { email = '' } = this.state.data;\n      const password = event.target.value;\n      const disabled = !password || !email;\n\n      this.setState({\n        data: { ...this.state.data, password },\n        signInDisabled: disabled\n      });\n    }\n\n    onSubmit(e) {\n      e.preventDefault();\n      const { email = '', password = '' } = this.state.data;\n      console.log(`email: ${email}, password: ${password}`);\n      return false;\n    }\n\n    render() {\n      const { password = '' } = this.state.data;\n\n      return (\n        <div style={{ width: '350px' }}>\n          <Card className=\"px-6 py-6\">\n            <form onSubmit={this.onSubmit}>\n              <Heading className=\"mb-7\" size=\"m\">Login</Heading>\n              <Label withInput={true}>Email</Label>\n              <Input\n                name=\"input\"\n                type=\"text\"\n                placeholder=\"Enter email\"\n                className=\"mb-6\"\n                autocomplete={'off'}\n                onChange={this.onEmailChange}\n              />\n              <Label withInput={true}>Password</Label>\n              <Input\n                name=\"input\"\n                className=\"mb-4\"\n                placeholder=\"Enter password\"\n                autocomplete={'off'}\n                type={this.state.passwordVisible ? 'text' : 'password'}\n                value={password}\n                onChange={this.onPasswordChange}\n                actionIcon={(\n                  <Icon\n                    name={this.state.passwordVisible ? 'visibility' : 'visibility_off'}\n                    onClick={this.onActionClick}\n                  />\n                )}\n              />\n              <Link target=\"_blank\" href=\"#\">Forgot Password?</Link>\n              <Button\n                className=\"mt-7\"\n                appearance=\"primary\"\n                expanded={true}\n                disabled={this.state.signInDisabled}\n                type=\"submit\"\n              >\n                Sign In\n              </Button>\n            </form>\n          </Card>\n        </div>\n      );\n    }\n  }\n\n  return <BasicForm />\n}\n    "
    ]
  },
  "Create Password Form": {
    "prefix": "Create Password Form",
    "description": "Create Password",
    "body": [
      "import { Icon, Text, Card, Label, Input, Button } from '@innovaccer/design-system';\n    \n\n() => {\n  const passwordRequirements = [\n    { key: 'minLen',validation: 'At least eight (8) characters in length' },\n    { key: 'uppercaseChar', validation: 'At least one (1) uppercase character'},\n    { key: 'lowercaseChar', validation: 'At least one (1) lowercase character'},\n    { key: 'numericChar', validation: 'At least one (1) numeric character' },\n    { key: 'specialChar', validation: 'At least one (1) special character (! @ # $ \\ _)'},\n  ];\n\n  const regex = {\n    minLen: /^.{8,}$/,\n    specialChar: /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]+/,\n    lowercaseChar: /[a-z]/,\n    uppercaseChar: /[A-Z]/,\n    numericChar: /\\d/\n  };\n\n  class CreatePassword extends React.Component {\n    constructor(props = {}) {\n      super(props);\n\n      const validations = {\n        minLen: false,\n        uppercaseChar: false,\n        lowercaseChar: false,\n        numericChar: false,\n        specialChar: false,\n      };\n\n      this.state = {\n        validations,\n        signInDisabled: true,\n        password: '',\n        confirmPassword: '',\n        passwordVisible: false,\n        confirmPasswordVisible: false,\n      };\n\n      this.onPasswordChange = this.onPasswordChange.bind(this);\n      this.renderRequirements = this.renderRequirements.bind(this);\n      this.onConfirmPasswordChange = this.onConfirmPasswordChange.bind(this);\n      this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onPasswordChange(event) {\n      const newPassword = event.target.value;\n\n      const newValidations = Object.keys(this.state.validations).reduce((acc, curr) => {\n        return { ...acc, [curr]: regex[curr].test(newPassword) }\n      }, this.state.validations);\n\n      const isValidated = Object.keys(newValidations).every(k => !newValidations[k]);\n      const value=event.target.value;\n      this.setState({\n        password: value,\n        validations: newValidations,\n        signInDisabled: (!isValidated && value!== this.state.confirmPassword) || !value,\n      });\n\n    }\n\n    onConfirmPasswordChange(event) {\n      const value=event.target.value;\n      this.setState({\n        confirmPassword: value,\n        signInDisabled: value !== this.state.password || !value\n      });\n    }\n\n    renderRequirements() {\n\n      return (\n        <div>\n          {\n            passwordRequirements.map((item, index) => {\n              const { validation, key } = item;\n\n              return (\n                <div className=\"d-flex mb-4 align-items-center\" key={index}>\n                  <Icon\n                    className=\"mr-4\"\n                    name={this.state.validations[key] ? 'check_circle' : 'fiber_manual_record'}\n                    appearance={this.state.validations[key] ? 'success' : 'default'}\n                  />\n                  <Text>{validation}</Text>\n                </div>\n              );\n            })\n          }\n        </div>\n      )\n    }\n\n    onSubmit(e) {\n      e.preventDefault();\n      console.log(this.state.password);\n      return false;\n    }\n\n    render() {\n      const { passwordVisible, confirmPasswordVisible } = this.state;\n\n      return (\n        <div style={{ width: '350px' }}>\n          <Card className=\"px-6 py-6\">\n            <form onSubmit={this.onSubmit}>\n              <Label withInput={true}>Password</Label>\n              <Input\n                name=\"input\"\n                className=\"mb-4\"\n                placeholder=\"Enter password\"\n                type={this.state.passwordVisible ? 'text' : 'password'}\n                value={this.state.password}\n                onChange={this.onPasswordChange}\n                autocomplete=\"off\"\n                actionIcon={(\n                  <Icon\n                    name={this.state.passwordVisible ? 'visibility' : 'visibility_off'}\n                    onClick={() => this.setState({ passwordVisible: !passwordVisible })}\n                  />\n                )}\n              />\n              {this.renderRequirements()}\n              <Label withInput={true} className=\"mt-6\">Confirm Password</Label>\n              <Input\n                name=\"input\"\n                placeholder=\"Enter password\"\n                type={this.state.confirmPasswordVisible ? 'text' : 'password'}\n                value={this.state.confirmPassword}\n                onChange={this.onConfirmPasswordChange}\n                autocomplete=\"off\"\n                actionIcon={(\n                  <Icon\n                    name={this.state.confirmPasswordVisible ? 'visibility' : 'visibility_off'}\n                    onClick={() => this.setState({ confirmPasswordVisible: !confirmPasswordVisible })}\n                  />\n                )}\n              />\n              <Button\n                className=\"mt-7\"\n                appearance=\"primary\"\n                disabled={this.state.signInDisabled}\n              >\n                Next\n            </Button>\n            </form>\n          </Card>\n        </div>\n      );\n    }\n  }\n\n  return <CreatePassword />\n}\n    "
    ]
  },
  "Create User Form": {
    "prefix": "Create User Form",
    "description": "Create User",
    "body": [
      "import { Card, Text, Row, Column, Label, Input, Dropdown, DatePicker, Button } from '@innovaccer/design-system';\n    \n\n() => {\n  const genderOptions = [\n    {\n      label: 'Male',\n      value: 'Male',\n    },\n    {\n      label: 'Female',\n      value: 'Female',\n    }\n  ];\n\n  const userOptions = [\n    {\n      label: 'User A',\n      value: 'UserA',\n    },\n    {\n      label: 'User B',\n      value: 'UserB',\n    }\n  ];\n\n  class CreateUser extends React.Component {\n    constructor(props = {}) {\n      super(props);\n\n      this.state = {\n        updateDisabled: true,\n        data: {},\n      };\n\n      this.onChange = this.onChange.bind(this);\n      this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onChange(value, name) {\n      const updatedData = { ...this.state.data, [name]: value };\n\n      this.setState({\n        data: updatedData,\n        updateDisabled: Object.keys(updatedData).every(key => !updatedData[key])\n      });\n    }\n\n    onSubmit(event) {\n      event.preventDefault();\n      console.log(this.state.data);\n      return false;\n    }\n\n    render() {\n      return (\n      <div className=\"w-100\">\n        <Card className=\"px-6 py-6\">\n          <Text appearance=\"subtle\" weight=\"strong\">Primary Details</Text>\n          <form onSubmit={this.onSubmit}>\n            <Row className=\"mt-6\">\n              <Column sizeXL={4} sizeL={4} sizeM={6} className=\"mr-6 mb-6\">\n                <Label withInput={true} required={true}>Last Name</Label>\n                <Input\n                  name=\"lastName\"\n                  type=\"text\"\n                  placeholder=\"E.g. Doe, Smith, etc.\"\n                  icon=\"person\"\n                  autocomplete={'off'}\n                  onChange={(event) => this.onChange(event.target.value, event.target.name)}\n                />\n              </Column>\n              <Column sizeXL={4} sizeL={4} sizeM={5} className=\"mr-6 mb-6\">\n                <Label withInput={true}>Middle Name</Label>\n                <Input\n                  name=\"middleName\"\n                  type=\"text\"\n                  placeholder=\"E.g. Doe, Smith, etc.\"\n                  icon=\"person\"\n                  autocomplete={'off'}\n                  onChange={(event) => this.onChange(event.target.value, event.target.name)}\n                />\n              </Column>\n              <Column sizeXL={3} sizeL={3} sizeM={6} className=\"mr-6 mb-6\">\n                <Label withInput={true} required={true}>First Name</Label>\n                <Input\n                  name=\"firstName\"\n                  type=\"text\"\n                  placeholder=\"E.g. John, Will, etc.\"\n                  icon=\"person\"\n                  autocomplete={'off'}\n                  onChange={(event) => this.onChange(event.target.value, event.target.name)}\n                />\n              </Column>\n              <Column sizeXL={4} sizeL={4} sizeM={5} className=\"mr-6 mb-6\">\n                <Label withInput={true}>Gender</Label>\n                <Dropdown\n                  options={genderOptions}\n                  onChange={(value) => this.onChange(value, 'gender')}\n                />\n              </Column>\n              <Column sizeXL={4} sizeL={4} sizeM={6} className=\"mr-6 mb-6\">\n                <Label withInput={true}>Date of Birth</Label>\n                <DatePicker\n                  withInput={true}\n                  onDateChange={(currentDate) => this.onChange(currentDate, 'dob')}\n                  inputOptions={{\n                    placeholder: 'MM/DD/YYYY',\n                    icon: 'cake',\n                    mask: [/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/]\n                  }}\n                />\n              </Column>\n              <Column sizeXL={3} sizeL={3} sizeM={5} className=\"mr-6 mb-6\">\n                <Label withInput={true} >Maiden Name</Label>\n                <Input\n                  name=\"MaidenName\"\n                  type=\"text\"\n                  placeholder=\"E.g. Roe, Will, etc.\"\n                  icon=\"person\"\n                  autocomplete={'off'}\n                  onChange={(event) => this.onChange(event.target.value, event.target.name)}\n                />\n              </Column>\n              <Column sizeXL={4} sizeL={4} sizeM={6} className=\"mr-6 mb-6\">\n                <Label withInput={true} required={true}>Email Address</Label>\n                <Input\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"E.g. abc@gmail.com\"\n                  autocomplete={'off'}\n                  onChange={(event) => this.onChange(event.target.value, event.target.name)}\n                />\n              </Column>\n              <Column sizeXL={4} sizeL={4} sizeM={5} className=\"mr-6 mb-6\">\n                <Label withInput={true}>User Type</Label>\n                <Dropdown\n                  options={userOptions}\n                  placeholder=\"Select User Type\"\n                  onChange={(value) => this.onChange(value, 'userType')}\n                />\n              </Column>\n              <Column sizeXL={3} sizeL={3} sizeM={5} className=\"mr-6 mb-6\">\n                <Label withInput={true} >NPI</Label>\n                <Input\n                  name=\"npi\"\n                  type=\"text\"\n                  placeholder=\"E.g. 000000\"\n                  autocomplete={'off'}\n                  onChange={(event) => this.onChange(event.target.value, event.target.name)}\n                />\n              </Column>\n            </Row>\n            <div className=\"d-flex justify-content-end\">\n              <Button className=\"mr-4\">Cancel</Button>\n              <Button type=\"submit\" appearance=\"success\" disabled={this.state.updateDisabled}>Update Account</Button>\n            </div>\n          </form>\n        </Card>\n      </div>\n      );\n    }\n  }\n\n  return <CreateUser />\n}\n    "
    ]
  },
  "Inline Form": {
    "prefix": "Inline Form",
    "description": "Inline Form",
    "body": [
      "import { Card, Label, Input, Button, DatePicker, Dropdown } from '@innovaccer/design-system';\n    \n\n() => {\n  class InlineForm extends React.Component {\n\n    constructor(props = {}) {\n      super(props);\n\n      this.state = {\n        searchDisabled: true,\n        data: {},\n      };\n\n      this.onChange = this.onChange.bind(this);\n      this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onChange(value, name) {\n      const updatedData = { ...this.state.data, [name]: value };\n\n      this.setState({\n        data: updatedData,\n        searchDisabled: Object.keys(updatedData).every(key => !updatedData[key])\n      });\n    }\n\n    onSubmit(e) {\n      e.preventDefault();\n      console.log(this.state.data);\n      return false;\n    }\n\n    render() {\n      const options = [];\n      for (let i = 1; i <= 10; i++) {\n        options.push({\n          label: `Option ${i}`,\n          value: `Option ${i}`,\n        });\n      }\n\n      return (\n        <div className=\"w-100\">\n          <Card className=\"px-6 py-6\">\n            <form onSubmit={this.onSubmit}>\n              <div className=\"d-flex flex-wrap\">\n                <div className=\"mr-6 mb-6\">\n                  <Label withInput={true}>Last Name</Label>\n                  <Input\n                    name=\"lastName\"\n                    type=\"text\"\n                    placeholder=\"E.g. Doe, Smith, etc.\"\n                    icon=\"person\"\n                    autocomplete={'off'}\n                    onChange={(event) => this.onChange(event.target.value, event.target.name)}\n                  />\n                </div>\n                <div className=\"mr-6 mb-6\">\n                  <Label withInput={true}>First Name</Label>\n                  <Input\n                    name=\"firstName\"\n                    type=\"text\"\n                    placeholder=\"E.g. John, Will, etc.\"\n                    icon=\"person\"\n                    autocomplete={'off'}\n                    onChange={(event) => this.onChange(event.target.value, event.target.name)}\n                  />\n                </div>\n                <div className=\"mr-6 mb-6\">\n                  <Label withInput={true}>Gender</Label>\n                  <div className=\"d-flex\">\n                    <Button className=\"mr-3\" onClick={() => this.onChange('Male', 'gender')}>Male</Button>\n                    <Button className=\"mr-3\" onClick={() => this.onChange('Female', 'gender')}>Female</Button>\n                    <Button className=\"mr-3\" onClick={() => this.onChange('Other', 'gender')}>Other</Button>\n                    <Button onClick={() => this.onChange('Unknown', 'gender')}>Unknown</Button>\n                  </div>\n                </div>\n                <div className=\"mr-6 mb-6\" style={{ width: 'var(--spacing-9)' }}>\n                  <Label withInput={true}>Date of Birth</Label>\n                  <DatePicker\n                    withInput={true}\n                    onDateChange={(currentDate) => this.onChange(currentDate, 'date')}\n                    inputOptions={{\n                      placeholder: 'MM/DD/YYYY',\n                      icon: 'cake',\n                      mask: [/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/]\n                    }}\n                  />\n                </div>\n                <div className=\"mr-6 mb-6\">\n                  <Label withInput={true}>EMPI</Label>\n                  <Input\n                    name=\"empi\"\n                    type=\"text\"\n                    placeholder=\"P000000\"\n                    icon=\"fingerprint\"\n                    autocomplete={'off'}\n                    onChange={(event) => this.onChange(event.target.value, event.target.name)}\n                  />\n                </div>\n                <div className=\"mr-6 mb-6\">\n                  <Label withInput={true}>MRN</Label>\n                  <Input\n                    name=\"mrn\"\n                    type=\"text\"\n                    placeholder=\"Medical Record Number\"\n                    icon=\"account_box\"\n                    autocomplete={'off'}\n                    onChange={(event) => this.onChange(event.target.value, event.target.name)}\n                  />\n                </div>\n                <div className=\"mr-6 mb-6\">\n                  <Label withInput={true}>ZIP</Label>\n                  <Input\n                    name=\"zip\"\n                    type=\"text\"\n                    placeholder=\"00000\"\n                    icon=\"location_on\"\n                    autocomplete={'off'}\n                    onChange={(event) => this.onChange(event.target.value, event.target.name)}\n                  />\n                </div>\n                <div className=\"mr-6 mb-6\" style={{ width: 'var(--spacing-9)' }}>\n                  <Label withInput={true}>Primary Care Physician</Label>\n                  <Dropdown\n                    icon=\"add_box\"\n                    placeholder=\"00000\"\n                    options={options}\n                    onChange={(option) => this.onChange(option, 'pcp')}\n                  />\n                </div>\n                <div className=\"mr-6 mb-6\" style={{ width: 'var(--spacing-9)' }}>\n                  <Label withInput={true}>Region</Label>\n                  <Dropdown\n                    icon=\"flag\"\n                    placeholder=\"00000\"\n                    options={options}\n                    onChange={(option) => this.onChange(option, 'region')}\n                  />\n                </div>\n              </div>\n              <Button\n                disabled={this.state.searchDisabled}\n                appearance=\"primary\"\n                type=\"submit\"\n              >\n                Search\n              </Button>\n            </form>\n          </Card>\n        </div>\n      );\n    }\n  }\n\n  return <InlineForm />\n}\n    "
    ]
  },
  "Inline Label Form": {
    "prefix": "Inline Label Form",
    "description": "Inline Label Form",
    "body": [
      "import { Card, Row, Column, Icon, Text, Dropdown, Checkbox, Button, InputMask, Radio } from '@innovaccer/design-system';\n    \n\n() => {\n  const languages = [\n    {\n      label: 'Hindi',\n      value: 'Hindi',\n    },\n    {\n      label: 'English',\n      value: 'English',\n      selected: true\n    },\n    {\n      label: 'French',\n      value: 'French',\n    }\n  ];\n\n  class InlineLabelForm extends React.Component {\n    constructor(props = {}) {\n      super(props);\n\n      this.state = {\n        data: {\n          language: 'English',\n          defaultLanguage: 'English',\n          defaultPhoneNumber: 'primaryPhoneNumber'\n        },\n      };\n\n      this.onChange = this.onChange.bind(this);\n      this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onChange(value, name) {\n      const { defaultLanguage = '' } = this.state.data;\n\n      const updatedData = {\n        ...this.state.data,\n        [name]: value,\n      };\n\n      this.setState({\n        data: updatedData,\n      });\n    }\n\n    onSubmit(event) {\n      event.preventDefault();\n      console.log(this.state.data);\n      return false;\n    }\n\n    render() {\n      const { defaultLanguage, language, defaultPhoneNumber } = this.state.data;\n\n      return (\n      <div className=\"w-100\">\n        <Card className=\"px-6 py-6\">\n          <form onSubmit={this.onSubmit}>\n            <Row className=\"mb-6\">\n              <Column size={3} className=\"d-flex align-items-center\">\n                <Icon className=\"mr-4\" name=\"language\" />\n                <Text>Known Languages</Text>\n              </Column>\n              <Column size={8} className=\"d-flex\">\n                <div className=\"mr-5 w-25\">\n                  <Dropdown\n                    options={languages}\n                    onChange={(value) => {\n                      const updatedData = {\n                        ...this.state.data,\n                        language: value,\n                        defaultLanguage: defaultLanguage !== '' ? value : defaultLanguage,\n                      };\n                      this.setState({data: updatedData})\n                    }}\n                  />\n                </div>\n                <Checkbox\n                  name=\"defaultLanguage\"\n                  label=\"Set as Default\"\n                  defaultChecked={defaultLanguage}\n                  onChange={(e) => {\n                    const updatedData = {\n                      ...this.state.data,\n                      defaultLanguage: e.target.checked ? language : '',\n                    };\n                    this.setState({data: updatedData})\n                  }}\n                />\n              </Column>\n              <Column size={1} className=\"d-flex align-items-center justify-content-end\">\n                <Button icon=\"delete\" appearance=\"transparent\" />\n              </Column>\n            </Row>\n            <Row className=\"my-5\">\n              <Column className=\"d-flex align-items-center\" size={3}>\n                <Icon className=\"mr-4\" name=\"record_voice_over\" />\n                <Text>Preferred Method of Contact</Text>\n              </Column>\n              <Column size={8} className=\"d-flex\">\n                <Button className=\"mr-3\" icon=\"call\" onClick={() => this.onChange('phone', 'contact')}>Phone</Button>\n                <Button className=\"mr-3\" icon=\"chat\" onClick={() => this.onChange('message', 'contact')}>Message</Button>\n                <Button className=\"mr-3\" icon=\"email\" onClick={() => this.onChange('email', 'contact')}>Email</Button>\n                <Button\n                  className=\"mr-3\"\n                  icon=\"markunread_mailbox\"\n                  onClick={() => this.onChange('letter', 'contact')}\n                >\n                  Letter\n                </Button>\n              </Column>\n              <Column size={1} className=\"d-flex align-items-center justify-content-end\">\n                <Button icon=\"delete\" appearance=\"transparent\" />\n              </Column>\n            </Row>\n            <Row className=\"mt-6\">\n              <Column size={3} className=\"d-flex align-items-center\">\n                <Icon className=\"mr-4\" name=\"call\" />\n                <Text>Phone Numbers</Text>\n              </Column>\n              <Column size={8} className=\"d-flex\">\n                <InputMask\n                  mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n                  placeholder=\"(___) ___-____\"\n                  className=\"mr-4\"\n                  name=\"primaryPhoneNumber\"\n                  onChange={(e, value) => this.onChange(value, e.target.name)}\n                />\n                <Radio\n                  defaultChecked={defaultPhoneNumber === 'primaryPhoneNumber'}\n                  name=\"defaultPhoneNumber\"\n                  value=\"defaultPrimaryPhoneNumber\"\n                  label=\"Mark as Preferred\"\n                  onChange={(e) => {\n                    const updatedData = {\n                      ...this.state.data,\n                      defaultPhoneNumber: e.target.checked ? 'primaryPhoneNumber' : defaultPhoneNumber\n                    };\n                    this.setState({data: updatedData})\n                  }}\n                />\n              </Column>\n              <Column size={1} className=\"d-flex align-items-center justify-content-end\">\n                <Button icon=\"delete\" appearance=\"transparent\" />\n              </Column>\n            </Row>\n            <Row className=\"my-5\">\n              <Column size={3} className=\"d-flex align-items-center\" />\n              <Column size={8} className=\"d-flex\">\n                <InputMask\n                  mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n                  placeholder=\"(___) ___-____\"\n                  className=\"mr-4\"\n                  name=\"secondaryPhoneNumber\"\n                  onChange={(e, value) => this.onChange(value, e.target.name)}\n                />\n                <Radio\n                  defaultChecked={defaultPhoneNumber === 'secondaryPhoneNumber'}\n                  name=\"defaultPhoneNumber\"\n                  value=\"defaultSecondaryPhoneNumber\"\n                  label=\"Mark as Preferred\"\n                  onChange={(e) => {\n                    const updatedData = {\n                      ...this.state.data,\n                      defaultPhoneNumber: e.target.checked ? 'secondaryPhoneNumber' : defaultPhoneNumber\n                    };\n                    this.setState({data: updatedData})\n                  }}\n                />\n              </Column>\n              <Column size={1} className=\"d-flex align-items-center justify-content-end\">\n                <Icon name=\"flag\" appearance=\"warning\" className=\"mr-4\"/>\n              </Column>\n            </Row>\n          <div className=\"d-flex\">\n            <Button className=\"mr-4\" type=\"submit\" appearance=\"success\">Save</Button>\n            <Button>Cancel</Button>\n          </div>\n          </form>\n        </Card>\n      </div>\n      );\n    }\n  }\n\n  return <InlineLabelForm />\n}\n    "
    ]
  },
  "Stepper Form": {
    "prefix": "Stepper Form",
    "description": "Stepper Form",
    "body": [
      "import { Button, Card, Stepper, Text, Badge, Dropdown, Label, InputMask, Avatar, Textarea, Switch } from '@innovaccer/design-system';\n    \n\n() => {\n  const steps = [\n    {\n      label: 'Define Input/Output',\n      value: 'Define_Input_Output'\n    },\n    {\n      label: 'Add Configuration',\n      value: 'Add_Configuration'\n    },\n  ];\n  const totalSteps = steps.length;\n\n  const options = [];\n  for (let i = 1; i <= 10; i++) {\n    options.push({\n      label: `Option ${i}`,\n      value: `Option ${i}`,\n    });\n  }\n\n  class StepperForm extends React.Component {\n    constructor(props = {}) {\n      super(props);\n\n      this.state = {\n        activeStep: 0,\n        completedStep: -1,\n        data: {},\n        configuration: {},\n      };\n\n      this.onChangeStep = this.onChangeStep.bind(this);\n      this.onClickNext = this.onClickNext.bind(this);\n      this.onChangeOutput = this.onChangeOutput.bind(this);\n      this.onSubmit = this.onSubmit.bind(this);\n      this.renderButton = this.renderButton.bind(this);\n    }\n\n    onChangeStep(activeStep) {\n      this.setState({\n        activeStep\n      })\n    }\n\n    onChangeOutput(value, name) {\n      const data = {\n        ...this.state.data,\n        [name]: value,\n      };\n\n      this.setState({\n        data\n      });\n    }\n\n    onClickNext() {\n      const { activeStep, completedStep } = this.state;\n      const updatedActive = activeStep > completedStep ? activeStep + 1 : completedStep + 1;\n      this.setState({\n        activeStep: updatedActive,\n        completedStep: activeStep > completedStep ? activeStep : completedStep\n      });\n    }\n\n    onSubmit(event) {\n      event.preventDefault();\n      console.log(this.state.data);\n      console.log(this.state.configuration);\n      return false;\n    }\n\n    renderButton() {\n      if (this.state.activeStep + 1 === totalSteps) {\n        return <Button appearance=\"success\" type=\"submit\">Save</Button>\n      }\n\n      return <Button appearance=\"primary\" onClick={this.onClickNext}>Next</Button>\n    }\n\n    render() {\n      const { value } = steps[this.state.activeStep];\n\n      return (\n        <div className=\"w-75\">\n          <Card className=\"px-7 py-6\">\n            <form onSubmit={this.onSubmit}>\n              <div className=\"d-flex justify-content-between\">\n                <Stepper\n                  steps={steps}\n                  active={this.state.activeStep}\n                  completed={this.state.completedStep}\n                  onChange={this.onChangeStep}\n                />\n                {this.renderButton()}\n              </div>\n              <div className={value !== 'Define_Input_Output' ? 'd-none' : ''}>\n                <div className=\"d-flex mr-3 mt-7 mb-2\">\n                  <Text weight=\"strong\" className=\"mr-4\">Source</Text>\n                  <Badge appearance=\"warning\">2 Inputs</Badge>\n                </div>\n                <Text size=\"small\" appearance=\"subtle\">\n                  The system automatically creates collection for multiple support.\n                </Text>\n                <div className=\"w-50 mt-4\">\n                  <Dropdown\n                    options={options}\n                    placeholder=\"Input Collection 1\"\n                    className=\"mb-4\"\n                    onChange={(value) => this.onChangeOutput(value, 'collection1')}\n                  />\n                  <Dropdown\n                    options={options}\n                    placeholder=\"Input Collection 2\"\n                    onChange={(value) => this.onChangeOutput(value, 'collection2')}\n                  />\n                </div>\n                <div className=\"d-flex mr-3 mt-8 mb-2\">\n                  <Text weight=\"strong\" className=\"mr-4\">Destination</Text>\n                  <Badge appearance=\"success\">8 Outputs</Badge>\n                </div>\n                <Text size=\"small\" appearance=\"subtle\">\n                  The system automatically creates collection for multiple support.\n                </Text>\n                <div className=\"w-50 mt-6\">\n                  <Label withInput={true}>Destination Collection</Label>\n                  <Dropdown\n                    options={options}\n                    placeholder=\"Select Destination\"\n                    onChange={(value) => this.onChangeOutput(value, 'collection')}\n                  />\n                </div>\n                <div className=\"mt-6 w-50\">\n                  <Label withInput={true} required>Prefix</Label>\n                  <InputMask\n                    mask={[/\\d/, '_', /\\d/, '_', /\\d/]}\n                    name=\"prefix\"\n                    placeholder=\"<workspace_id>_<workflow_id>_<pipeline_id>\"\n                    placeholderChar=\"-\"\n                    onChange={(e) => this.onChangeOutput(e.target.value, e.target.name)}\n                  />\n                </div>\n                <div className=\"w-25 mt-6\">\n                  <Label withInput={true} required>Retention</Label>\n                  <Dropdown options={options} onChange={(value) => this.onChangeOutput(value, 'retention')} />\n                  <Label className=\"mt-6\" withInput={true}>Visibility Clarification</Label>\n                  <Dropdown options={options} onChange={(value) => this.onChangeOutput(value, 'clarification')} />\n                </div>\n              </div>\n              <div className={value !== 'Add_Configuration' ? 'd-none' : ''}>\n                <div className=\"d-flex mt-7\">\n                  <Avatar className=\"mr-5\" firstName=\"A\" appearance=\"success\" />\n                  <div className=\"d-flex flex-column\">\n                    <Text weight=\"strong\" className=\"mb-2\">Job Configuration</Text>\n                    <Text size=\"small\" appearance=\"subtle\">\n                      The system automatically creates collection for multiple support.\n                    </Text>\n                  </div>\n                </div>\n                <div className=\"w-25 mt-6\">\n                  <Label withInput={true} required>Mode</Label>\n                  <Dropdown\n                    options={options}\n                    onChange={(value) => {\n                      this.setState({\n                        configuration: { ...this.state.configuration, mode: value }\n                      });\n                    }}\n                  />\n                </div>\n                <div className=\"mt-6 w-50\">\n                  <Label withInput={true} required>Regex</Label>\n                  <Textarea\n                    rows={3}\n                    onChange={(e, value) => {\n                      this.setState({\n                        configuration: { ...this.state.configuration, regex: value }\n                      });\n                    }}\n                  />\n                </div>\n                <Label className=\"mt-6\" withInput={true} required>Retention</Label>\n                <Switch appearance=\"primary\" defaultChecked={true} className=\"d-flex\" />\n              </div>\n            </form>\n          </Card>\n        </div>\n      );\n    }\n\n  }\n\n  return <StepperForm />\n}\n    "
    ]
  },
  "Time Period Form": {
    "prefix": "Time Period Form",
    "description": "Time Period Form",
    "body": [
      "import { Card, Heading, Text, Label, Dropdown, Link, DateRangePicker, Slider, Paragraph, Button } from '@innovaccer/design-system';\n    \n\n() => {\n  class TimePeriodForm extends React.Component {\n    constructor(props = {}) {\n      super(props);\n\n      this.state = {\n        time: 8,\n        budget: 60\n      };\n    }\n\n    render() {\n      const options = [];\n      for (let i = 1; i <= 10; i++) {\n        options.push({\n          label: `Option ${i}`,\n          value: `Option ${i}`,\n        });\n      }\n\n      return (\n        <div className=\"w-75\">\n          <Card className=\"px-7 py-6\">\n            <Heading className=\"mb-6\" size=\"s\">Configure Initiative</Heading>\n            <Text weight=\"strong\">Population Filter</Text>\n            <div className=\"d-flex mt-5 mb-4\">\n              <div className=\"mr-6\" style={{ width: 'var(--spacing-8)' }}>\n                <Label withInput={true}>Region</Label>\n                <Dropdown options={options} />\n              </div>\n              <div style={{ width: 'var(--spacing-9)' }}>\n                <Label withInput={true}>Organization</Label>\n                <Dropdown options={options} />\n              </div>\n            </div>\n            <Link target=\"_blank\" href=\"#\">Add organizations</Link>\n            <div className=\"my-6 pt-6\" style={{ borderTop: 'var(--spacing-xs) solid var(--secondary-light)' }}>\n              <Text weight=\"strong\">Time Period</Text>\n              <div className=\"mt-5\">\n                <DateRangePicker withInput />\n              </div>\n              <Slider\n                className=\"mt-6 mb-7\"\n                label=\"Care Manager - Time Allocation\"\n                min={1}\n                max={10}\n                stepSize={1}\n                value={this.state.time}\n                onChange={(value) => this.setState({ time: value })}\n                labelRenderer={(value) => this.state.time === value ? `${value}` : ''}\n              />\n              <Paragraph appearance=\"subtle\">Limit to <b>{this.state.time} hours</b> per day per Care Manager</Paragraph>\n              <Slider\n                className=\"mt-6 mb-7\"\n                label=\"Budget Allocation\"\n                min={10}\n                max={100}\n                stepSize={10}\n                labelStepSize={10}\n                value={this.state.budget}\n                onChange={(value) => this.setState({ budget: value })}\n                labelRenderer={(value) => this.state.budget === value ? `$${value}K` : ''}\n              />\n              <Paragraph appearance=\"subtle\">Allocated Budget: <b>${this.state.budget}K</b> </Paragraph>\n            </div>\n            <div\n              className=\"mt-7 pt-5 d-flex justify-content-end\"\n              style={{ borderTop: 'var(--spacing-xs) solid var(--secondary-light)' }}\n            >\n              <Button appearance=\"basic\" className=\"mr-4\">Cancel</Button>\n              <Button appearance=\"success\">Initiate</Button>\n            </div>\n          </Card>\n        </div>\n      );\n    }\n  }\n\n  return <TimePeriodForm />\n}\n    "
    ]
  },
  "Verification Code Input": {
    "prefix": "Verification Code Input",
    "description": "Verification Code Input",
    "body": [
      "import { Text, Message, Card, Label, VerificationCodeInput, Spinner } from '@innovaccer/design-system';\n    () => {\n  class VerificationCodeInputCard extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.correctValue = '555123';\n      this.state = {\n        isTimerStarted: false,\n        timer: 30,\n        loading: false,\n        value: '',\n        error: false,\n      };\n\n      this.onToogleLink = this.onToogleLink.bind(this);\n      this.onCompleteHandler = this.onCompleteHandler.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n      const { timer, isTimerStarted } = this.state;\n\n      if (isTimerStarted\n        && (timer !== prevState.time || prevState.isTimerStarted !== isTimerStarted)\n      ) {\n        if (timer > 0) {\n          setTimeout(() => {\n            this.setState({\n              timer: timer - 1,\n            })\n          }, 1000);\n        }\n\n        if (timer === 0) {\n          this.setState({\n            isTimerStarted: !isTimerStarted,\n          });\n        }\n      }\n    }\n\n    onToogleLink() {\n      if (this.state.loading || !!this.state.value) return;\n      this.setState({\n        isTimerStarted: true,\n        timer: 30\n      });\n    };\n\n    onCompleteHandler(value) {\n      this.setState({\n        loading: true,\n        timer: 0,\n        isTimerStarted: false,\n      });\n\n      setTimeout(() => {\n        this.setState({\n          value: value === this.correctValue ? value : '',\n          loading: false,\n          error: value !== this.correctValue\n        });\n      }, 2000);\n    };\n\n    render() {\n      const { isTimerStarted, timer, loading, value, error } = this.state;\n      const time = timer < 10 ? `0${timer}` : timer;\n\n      return (\n        <div>\n          <div className=\"mb-5\">\n            <Text weight=\"strong\">Note: </Text>\n            <Text weight=\"medium\">{`Verified value of Verification Code Input is ${this.correctValue} in this example.`}</Text>\n          </div>\n          <div className=\"w-50\">\n            {(value || error) && (\n              <Message\n                appearance={error ? 'alert' : 'success'}\n                description={error? 'The code that you have entered is invalid or incorrect. Try again.' : 'Verification Successful.'}\n                className=\"mb-5\"\n              />\n            )}\n            <Card className=\"py-6 px-6\">\n              <div className=\"d-flex flex-column\">\n                <Text weight=\"strong\" size=\"large\">Enter Verification Code</Text>\n                <Text className=\"mt-3\" appearance=\"subtle\">\n                  We have sent a 6 digit verification code to your phone (555) 555-1234\n                </Text>\n              </div>\n              <Label withInput={true} className=\"mt-7\">Verification code</Label>\n              <div className=\"d-flex align-items-center\">\n                <VerificationCodeInput\n                  fields={6}\n                  onComplete={this.onCompleteHandler}\n                  disabled={loading || !!value}\n                />\n                {loading && <Spinner className=\"ml-5\" size=\"medium\" />}\n              </div>\n              {isTimerStarted ? (\n                <Text className=\"mt-7 d-flex\" weight=\"medium\">\n                  {`Haven't recieved the code? Resend code in 0:${time}`}\n                </Text>\n              ) : (\n                  <Text\n                    className=\"mt-7 d-flex cursor-pointer\"\n                    appearance={loading || !!value ? 'disabled' : 'link'}\n                    weight=\"medium\"\n                    onClick={this.onToogleLink}\n                  >\n                    Resend Code\n                  </Text>\n                )}\n            </Card>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  return <><VerificationCodeInputCard /></>\n}\n    "
    ]
  },
  "Blank Template": {
    "prefix": "Blank Template",
    "description": "Blank Template",
    "body": [
      "import { Row, Column } from '@innovaccer/design-system';\n    () => {\n  return(\n    <Row className=\"d-flex flex-column bg-secondary-lightest vh-100 p-6\">\n      <Column>\n        <div className=\"h-100 bg-light\" />\n      </Column>\n    </Row>\n  );\n}\n    "
    ]
  },
  "Level 1 Header Template": {
    "prefix": "Level 1 Header Template",
    "description": "Level 1 Header Template",
    "body": [
      "import { Navigation, Button, Breadcrumbs, Badge, PageHeader, Row, Column } from '@innovaccer/design-system';\n    () => {\n  const navigationPosition = 'center';\n  const title = 'Page title';\n  const navigationData = [\n    {\n      name: 'menu_1',\n      label: 'Menu 1',\n      icon: 'event',\n    },\n    {\n      name: 'menu_2',\n      label: 'Menu 2'\n    },\n    {\n      name: 'menu_3',\n      label: 'Menu 3',\n      disabled: true\n    }\n  ];\n  const breadcrumbData = [\n    {\n      label: 'Level 0',\n      link: '/level0'\n    },\n    {\n      label: 'Level 1',\n      link: '/level1'\n    }\n  ];\n\n  const options = {\n    navigationPosition,\n    title,\n    navigation: <Navigation menus={navigationData} onClick={menu => console.log(menu)} active={{ name: 'menu_1' }} />,\n    actions: (\n      <div style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }}>\n        <Button appearance=\"primary\">Primary</Button>\n      </div>\n    ),\n    breadcrumbs: (\n      <Breadcrumbs\n        list={breadcrumbData}\n        onClick={link => console.log(link)}\n      />\n    ),\n    badge: (\n      <Badge appearance=\"secondary\">Badge</Badge>\n    )\n  };\n\n  return(\n    <div className=\"d-flex flex-column bg-secondary-lightest vh-100\">\n      <PageHeader\n        {...options}\n      />\n      <Row className=\"h-100 p-6\">\n        <Column className=\"h-100 bg-light\" />\n      </Row>\n    </div>\n  );\n}\n    "
    ]
  },
  "Mini sidebar Template": {
    "prefix": "Mini sidebar Template",
    "description": "Mini Sidebar Template",
    "body": [
      "import { Row, Collapsible, VerticalNav, Column, PageHeader, Icon, Heading } from '@innovaccer/design-system';\n    () => {\n  const menus = [\n    {\n      name: 'patient_360',\n      label: 'Patient 360',\n      icon: 'assignment_ind',\n      link: '/patient360',\n    },\n    {\n      name: 'care_management',\n      label: 'Care Management and Resources',\n      icon: 'forum',\n      subMenu: [\n        {\n          name: 'care_management.timeline',\n          label: 'Timeline',\n          icon: 'events'\n        },\n        {\n          name: 'care_management.care_plans',\n          label: 'Care Plans',\n          icon: 'events'\n        }\n      ]\n    },\n    {\n      name: 'episodes',\n      label: 'Episodes',\n      disabled: true,\n      icon: 'airline_seat_flat_angled'\n    },\n    {\n      name: 'risk',\n      label: 'Risk',\n      icon: 'favorite',\n      subMenu: [\n        {\n          name: 'risk.timeline',\n          label: 'Timeline',\n          icon: 'events'\n        },\n        {\n          name: 'risk.care_plans',\n          label: 'Care Plans',\n          icon: 'events'\n        }\n      ]\n    },\n    {\n      name: 'claims',\n      label: 'Claims',\n      icon: 'receipt'\n    },\n    {\n      name: 'profile',\n      label: 'Profile',\n      icon: 'account_circle'\n    },\n    {\n      name: 'documents',\n      label: 'Documents',\n      icon: 'assignment'\n    }\n  ];\n\n  const [expanded, setExpanded] = React.useState(false);\n  const [active, setActive] = React.useState({\n    name: 'care_management.timeline'\n  });\n\n  const onClickHandler = (menu) => {\n    console.log('menu-clicked: ', menu);\n    setActive(menu);\n  };\n\n  return(\n    <Row className=\"vh-100 bg-secondary-lightest\">\n        <Collapsible expanded={expanded} onToggle={setExpanded}>\n          <VerticalNav\n            menus={menus}\n            expanded={expanded}\n            active={active}\n            onClick={onClickHandler}\n            hoverable={false}\n          />\n        </Collapsible>\n      <Column\n        className=\"d-flex flex-column pb-6\"\n      >\n        <PageHeader title=\"Page title\" separator={false} />\n        <Row className=\"px-6 h-100\">\n          <Column className=\"h-100 bg-light\" />\n        </Row>\n      </Column>\n      <Column size={'auto'}>\n        <div className=\"d-flex flex-column py-4\">\n          <Icon name=\"assignment_ind\" className=\"m-4\"/>\n          <Icon name=\"account_circle\" className=\"m-4\"/>\n        </div>\n      </Column>\n      <Column\n        size={3}\n        className=\"d-flex flex-column pb-6\"\n      >\n        <Heading className='px-6 py-4'>Page Title</Heading>\n        <Row className=\"px-6 h-100\">\n          <Column className=\"h-100 bg-light\" />\n        </Row>\n      </Column>\n    </Row>\n  );\n}\n    "
    ]
  },
  "Narrow width content Template": {
    "prefix": "Narrow width content Template",
    "description": "Narrow Width Content Template",
    "body": [
      "import { Row, Collapsible, VerticalNav, Column, PageHeader } from '@innovaccer/design-system';\n    () => {\n  const menus = [\n    {\n      name: 'patient_360',\n      label: 'Patient 360',\n      icon: 'assignment_ind',\n      link: '/patient360',\n    },\n    {\n      name: 'care_management',\n      label: 'Care Management and Resources',\n      icon: 'forum',\n      subMenu: [\n        {\n          name: 'care_management.timeline',\n          label: 'Timeline',\n          icon: 'events'\n        },\n        {\n          name: 'care_management.care_plans',\n          label: 'Care Plans',\n          icon: 'events'\n        }\n      ]\n    },\n    {\n      name: 'episodes',\n      label: 'Episodes',\n      disabled: true,\n      icon: 'airline_seat_flat_angled'\n    },\n    {\n      name: 'risk',\n      label: 'Risk',\n      icon: 'favorite',\n      subMenu: [\n        {\n          name: 'risk.timeline',\n          label: 'Timeline',\n          icon: 'events'\n        },\n        {\n          name: 'risk.care_plans',\n          label: 'Care Plans',\n          icon: 'events'\n        }\n      ]\n    },\n    {\n      name: 'claims',\n      label: 'Claims',\n      icon: 'receipt'\n    },\n    {\n      name: 'profile',\n      label: 'Profile',\n      icon: 'account_circle'\n    },\n    {\n      name: 'documents',\n      label: 'Documents',\n      icon: 'assignment'\n    }\n  ];\n\n  const [expanded, setExpanded] = React.useState(false);\n  const [active, setActive] = React.useState({\n    name: 'care_management.timeline'\n  });\n\n  const onClickHandler = (menu) => {\n    console.log('menu-clicked: ', menu);\n    setActive(menu);\n  };\n\n  return(\n    <Row className=\"vh-100 bg-secondary-lightest flex-nowrap\">\n      <Collapsible expanded={expanded} onToggle={setExpanded}>\n        <VerticalNav\n          menus={menus}\n          expanded={expanded}\n          active={active}\n          onClick={onClickHandler}\n          hoverable={false}\n        />\n      </Collapsible>\n      <Row className=\"justify-content-center\">\n        <Column size={8} className=\"d-flex flex-column pb-6\">\n          <PageHeader\n            title=\"Page title\"\n            separator={false}\n          />\n          <Row className=\"px-6 h-100\">\n            <Column className=\"h-100 bg-light\" />\n          </Row>\n        </Column>\n      </Row>\n    </Row>\n  );\n}\n    "
    ]
  },
  "Resource Table Template": {
    "prefix": "Resource Table Template",
    "description": "Resource Table Template",
    "body": [
      "import { PageHeader, Row, Column } from '@innovaccer/design-system';\n    () => {\n  return(\n    <div className=\"d-flex flex-column bg-secondary-lightest vh-100 pb-6\">\n      <PageHeader\n        title=\"Page title\"\n        separator={false}\n      />\n      <Row className=\"px-6 h-100\">\n        <Column className=\"h-100 bg-light\" />\n      </Row>\n    </div>\n  );\n}\n    "
    ]
  },
  "Sidebar Template": {
    "prefix": "Sidebar Template",
    "description": "Sidebar Template",
    "body": [
      "import { Row, Collapsible, VerticalNav, Column, PageHeader } from '@innovaccer/design-system';\n    () => {\n  const menus = [\n    {\n      name: 'patient_360',\n      label: 'Patient 360',\n      icon: 'assignment_ind',\n      link: '/patient360',\n    },\n    {\n      name: 'care_management',\n      label: 'Care Management and Resources',\n      icon: 'forum',\n      subMenu: [\n        {\n          name: 'care_management.timeline',\n          label: 'Timeline',\n          icon: 'events'\n        },\n        {\n          name: 'care_management.care_plans',\n          label: 'Care Plans',\n          icon: 'events'\n        }\n      ]\n    },\n    {\n      name: 'episodes',\n      label: 'Episodes',\n      disabled: true,\n      icon: 'airline_seat_flat_angled'\n    },\n    {\n      name: 'risk',\n      label: 'Risk',\n      icon: 'favorite',\n      subMenu: [\n        {\n          name: 'risk.timeline',\n          label: 'Timeline',\n          icon: 'events'\n        },\n        {\n          name: 'risk.care_plans',\n          label: 'Care Plans',\n          icon: 'events'\n        }\n      ]\n    },\n    {\n      name: 'claims',\n      label: 'Claims',\n      icon: 'receipt'\n    },\n    {\n      name: 'profile',\n      label: 'Profile',\n      icon: 'account_circle'\n    },\n    {\n      name: 'documents',\n      label: 'Documents',\n      icon: 'assignment'\n    }\n  ];\n\n  const [expanded, setExpanded] = React.useState(false);\n  const [active, setActive] = React.useState({\n    name: 'care_management.timeline'\n  });\n\n  const onClickHandler = (menu) => {\n    console.log('menu-clicked: ', menu);\n    setActive(menu);\n  };\n\n  return(\n    <Row className=\"vh-100 bg-secondary-lightest\">\n      <Collapsible expanded={expanded} onToggle={setExpanded}>\n        <VerticalNav\n          menus={menus}\n          expanded={expanded}\n          active={active}\n          onClick={onClickHandler}\n          hoverable={false}\n        />\n      </Collapsible>\n      <Column className=\"d-flex flex-column pb-6\">\n        <PageHeader\n          title=\"Page title\"\n          separator={false}\n        />\n        <Row className=\"px-6\">\n          <Column className=\"h-100 bg-light\" />\n        </Row>\n      </Column>\n    </Row>\n  );\n}\n    "
    ]
  },
  "Side Nav": {
    "prefix": "Side Nav",
    "description": "Side Nav",
    "body": [
      "import { Collapsible, VerticalNav } from '@innovaccer/design-system';\n    () => {\n  const menus = [\n    {\n      name: 'patient_360',\n      label: 'Patient 360',\n      icon: 'assignment_ind',\n      link: '/patient360',\n    },\n    {\n      name: 'care_management',\n      label: 'Care Management and Resources',\n      icon: 'forum',\n      subMenu: [\n        {\n          name: 'care_management.timeline',\n          label: 'Timeline',\n          icon: 'events'\n        },\n        {\n          name: 'care_management.care_plans',\n          label: 'Care Plans',\n          icon: 'events'\n        }\n      ]\n    },\n    {\n      name: 'episodes',\n      label: 'Episodes',\n      disabled: true,\n      icon: 'airline_seat_flat_angled'\n    },\n    {\n      name: 'risk',\n      label: 'Risk',\n      icon: 'favorite',\n      subMenu: [\n        {\n          name: 'risk.timeline',\n          label: 'Timeline',\n          icon: 'events'\n        },\n        {\n          name: 'risk.care_plans',\n          label: 'Care Plans',\n          icon: 'events'\n        }\n      ]\n    },\n    {\n      name: 'claims',\n      label: 'Claims',\n      icon: 'receipt'\n    },\n    {\n      name: 'profile',\n      label: 'Profile',\n      icon: 'account_circle'\n    },\n    {\n      name: 'manula_entry',\n      label: 'Manual Entry',\n      icon: 'border_color'\n    },\n    {\n      name: 'documents',\n      label: 'Documents',\n      icon: 'assignment'\n    }\n  ];\n\n  const [expanded, setExpanded] = React.useState(false);\n  const [active, setActive] = React.useState({\n    name: 'care_management.timeline'\n  });\n\n  const onClickHandler = (menu) => {\n    console.log('menu-clicked: ', menu);\n    setActive(menu);\n  };\n\n  return (\n    <div style={{ height: 'calc(80vh)', background: 'var(--secondary-lightest)' }}>\n      <Collapsible expanded={expanded} onToggle={setExpanded}>\n        <VerticalNav\n          menus={menus}\n          expanded={expanded}\n          active={active}\n          onClick={onClickHandler}\n          hoverable={false}\n        />\n      </Collapsible>\n    </div>\n  );\n}\n    "
    ]
  }
}